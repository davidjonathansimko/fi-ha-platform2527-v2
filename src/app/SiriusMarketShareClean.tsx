"use client";
import React, { useEffect, useRef } from "react";

type DataRow = {
  halbjahr: string;
  branche: number;
  sirius: number;
};

type MarketShareRow = DataRow & { marketShare: number };

type TranslationObject = Record<string, string>;

type Theme = 'light' | 'dark' | 'system';
type Language = 'de' | 'en' | 'tr' | 'ro' | 'sy' | 'ar' | 'ru' | 'pl' | 'at' | 'ch' | 'nl' | 'cz' | 'sk' | 'md';

// Language translations
const translations = {
  de: {
    title: "Business Analytics √úbungen",
    availableExercises: "Verf√ºgbare √úbungen",
    exercise1Title: "Sirius AG Marktanteil Analyse",
    exercise1Desc: "Marktanteilsberechnung und Trendanalyse f√ºr ein deutsches Unternehmen √ºber mehrere Halbjahre.",
    exercise2Title: "Kundenbefragung Auswertung",
    exercise2Desc: "Auswertung von Kundenbewertungen nach Schulnotensystem mit statistischer Analyse.",
    startExercise: "√úbung starten",
    backToMenu: "Zur√ºck zum Men√º",
    showTask: "Aufgabe anzeigen",
    hideTask: "Aufgabe ausblenden",
    showData: "Daten anzeigen",
    hideData: "Daten ausblenden",
    showTable: "Tabelle anzeigen",
    showSolution: "L√∂sung anzeigen",
    selectExercise: "W√§hlen Sie eine √úbung aus, um zu beginnen",
    theme: "Design",
    language: "Sprache",
    light: "Hell",
    dark: "Dunkel",
    system: "System",
    // Sirius Exercise
    taskStatement: "Aufgabenstellung",
    siriusTask: "Sie sind bei der Sirius AG besch√§ftigt und sollen eine Marktanteilsanalyse f√ºr die letzten drei Jahre durchf√ºhren.",
    dataAvailable: "Ihnen liegen folgende Umsatzdaten vor:",
    period: "Halbjahr",
    industry: "Branche (‚Ç¨ Mio)",
    sirius: "Sirius AG (‚Ç¨ Mio)",
    taskA: "In welchem Halbjahr hatte die Sirius AG den h√∂chsten Marktanteil?",
    taskB: "In welchem Halbjahr hatte die Sirius AG die h√∂chste prozentuale Steigerung des Marktanteils?",
    taskLabelA: "Aufgabe a)",
    taskLabelB: "Aufgabe b)",
    marketData: "Marktdaten",
    calculatedShares: "Berechnete Marktanteile",
    calculationBasis: "Berechnungsgrundlage",
    basicFormula: "Grundformel:",
    exampleCalc: "Beispielberechnung f√ºr 1. Halbj. 01:",
    marketShareFormula: "Marktanteil = (Umsatz des Unternehmens / Gesamtumsatz der Branche) √ó 100",
    solutionA: "L√∂sung a) anzeigen",
    solutionB: "L√∂sung b) anzeigen",
    solutionAHide: "L√∂sung a) ausblenden",
    solutionBHide: "L√∂sung b) ausblenden",
    solutionATitle: "L√∂sung a) H√∂chster Marktanteil",
    solutionBTitle: "L√∂sung b) H√∂chste prozentuale Steigerung",
    showCalculatedShares: "Berechnete Marktanteile anzeigen",
    hideCalculatedShares: "Berechnete Marktanteile ausblenden",
    showCompleteAnalysis: "Vollst√§ndige Analyse anzeigen",
    hideCompleteAnalysis: "Vollst√§ndige Analyse ausblenden",
    showTableCustomer: "Tabelle anzeigen",
    showSolutionCustomer: "L√∂sung anzeigen",
    showOverallAnalysis: "üìä Gesamtanalyse anzeigen",
    // Customer Exercise
    customerSurvey: "Kundenbefragung",
    surveyDescription: "Zur Verbesserung der Kundenzufriedenheit wurde eine Kundenbefragung durchgef√ºhrt. Sie sollen die Antworten der zehn wichtigsten Kunden nach folgenden Kriterien auswerten und ermitteln.",
    gradeSystem: "Bewertung hier in Schulnoten (1 = sehr gut, 6 = ungen√ºgend).",
    tasks: "Aufgaben:",
    taskCustomerA: "Wie viel Prozent haben im Durchschnitt der vier Einzelbewertungen gut und besser bewertet?",
    taskCustomerB: "Wie viel Prozent haben im Durchschnitt der vier Einzelbewertungen ausreichend und schlechter bewertet?",
    taskCustomerC: "Welche Durchschnittsnote f√ºr die Ber√ºcksichtigung √∂kologischer Aspekte (√ñko) wurde in den Produkten vergeben?",
    // Solution labels
    solutionALabel: "L√∂sung a) Gut und besser",
    solutionBLabel: "L√∂sung b) Ausreichend und schlechter",
    solutionCLabel: "L√∂sung c) √ñkologische Aspekte",
    // Rating categories
    goodAndBetter: "gut und besser",
    satisfactoryAndWorse: "ausreichend und schlechter", 
    ecologicalAspects: "√ñkologische Aspekte",
    // Analysis terms
    customersWithAverage: "Kunden mit Durchschnittsnote",
    numberOfCustomers: "Anzahl Kunden mit",
    haveRated: "haben",
    rated: "bewertet",
    averageGrade: "Durchschnittsnote",
    ecoAverageGrade: "√ñko-Durchschnittsnote",
    analysis: "Auswertung",
    // Overall analysis
    overallAnalysisTitle: "üìä Gesamtanalyse der Kundenbefragung",
    majorityOfCustomers: "Die Mehrheit der Kunden",
    ratedGoodOrBetter: "bewertete das Unternehmen gut oder besser",
    onlyPercentage: "Nur",
    gaveSatisfactoryOrWorse: "der Kunden gaben ausreichende oder schlechtere Bewertungen",
    ecoAspectsRated: "Die √∂kologischen Aspekte wurden mit",
    correspondTo: "bewertet - das entspricht",
    recommendation: "Empfehlung:",
    improveEcoAspects: "Verbesserung der √∂kologischen Aspekte k√∂nnte die Gesamtzufriedenheit steigern",
    ecoAspectsAlreadyGood: "√ñkologische Aspekte sind bereits gut bewertet",
    interpretation: "Interpretation:",
    calculation: "Berechnung:",
    calculationExplanation: "Erkl√§rung der Berechnung:",
    totalCustomers: "Gesamtanzahl Kunden:",
    sumOfRatings: "Summe der √ñko-Bewertungen:",
    allCustomersEcoRatings: "√ñko-Bewertungen aller Kunden:",
    result: "Ergebnis:",
    noCustomers: "Keine Kunden",
    // Period translations
    firstHalf: "1. Halbj.",
    secondHalf: "2. Halbj.",
    // Solution answer texts
    hadHighestMarketShare: "hatte den h√∂chsten Marktanteil mit",
    formula: "Formel:",
    example: "Beispiel f√ºr",
    meaning: "Bedeutung:",
    strongestMarketPosition: "Dies zeigt die st√§rkste Marktposition der Sirius AG im gesamten Betrachtungszeitraum.",
    showsStrongestPosition: "zeigt die st√§rkste Marktposition",
    largestPercentageIncrease: "Die gr√∂√üte prozentuale Steigerung erfolgte von",
    withIncrease: "mit einer Steigerung von",
    notAvailable: "Nicht verf√ºgbar.",
    to: "zu",
    exercise1: "√úbung 1",
    exercise2: "√úbung 2",
    marketAnalysis: "Marktanalyse",
    customerSatisfaction: "Kundenzufriedenheit",
    statistics: "Statistik",
    averageValues: "Durchschnittswerte",
    industryRevenueMio: "Branche (‚Ç¨ Mio)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ Mio)",
    marketSharePercent: "Marktanteil (%)",
    increasePercent: "Anstieg (%)",
    stepByStepAnalysis: "Vollst√§ndige Schritt-f√ºr-Schritt-Analyse",
    methodicalApproach: "Methodisches Vorgehen:",
    importantInsights: "Wichtige Erkenntnisse:",
    highestMarketShare: "H√∂chster Marktanteil:",
    calculateIncreaseRates: "Steigerungsraten berechnen:",
    percentageChanges: "Prozentuale Ver√§nderungen zwischen aufeinanderfolgenden Perioden",
    meaningLargestGrowth: "Dies zeigt den gr√∂√üten relativen Wachstumsschub der Sirius AG im Marktanteil.",
    strongestIncrease: "St√§rkste Steigerung:",
    trendAnalysis: "Trend-Analyse:",
    continuousGrowth: "Kontinuierliches Wachstum des Marktanteils √ºber den Betrachtungszeitraum erkennbar",
    businessRelevance: "Gesch√§ftsrelevanz:",
    positiveMarketDevelopment: "Positive Marktentwicklung unterst√ºtzt strategische Gesch√§ftsentscheidungen",
    taskDescription: "Aufgabenstellung",
    ratingLegend: "Bewertungslegende",
    customer: "Kunde",
    function: "Funktion",
    performance: "Leistung",
    eco: "√ñko",
    price: "Preis",
    average: "Durchschnitt",
    summary: "Zusammenfassung",
    surveyResults: "Ergebnisse der Kundenbefragung:",
    goodAndBetterShort: "Gut und besser",
    satisfactoryAndWorseShort: "Ausreichend und schlechter",
    ecoAverage: "√ñko-Durchschnitt",
    showsDynamicDevelopment: "Wachstum - zeigt dynamischste Entwicklung",
    with: "mit",
    gradeVeryGood: "sehr gut",
    gradeGood: "gut", 
    gradeSatisfactory: "befriedigend",
    gradeAdequate: "ausreichend",
    gradeDeficient: "mangelhaft",
    gradeInsufficient: "ungen√ºgend",
    gradeUnknown: "Unbekannt",
    gradeLabelVeryGood: "Sehr gut",
    gradeLabelGood: "Gut",
    gradeLabelSatisfactory: "Befriedigend", 
    gradeLabelAdequate: "Ausreichend",
    gradeLabelDeficient: "Mangelhaft",
    gradeLabelInsufficient: "Ungen√ºgend",
    percentageIncreaseFormula: "Prozentuale Steigerung = (neuer Wert - alter Wert) / alter Wert √ó 100",
    absoluteIncrease: "Absolute Steigerung:",
    percentagePoints: "Prozentpunkte",
    dataCollection: "Datenaufnahme:",
    collectRevenueData: "Sammlung der Umsatzdaten f√ºr Branche und Sirius AG √ºber 6 Halbjahre",
    calculateMarketShare: "Marktanteil berechnen:",
    applyFormula: "Anwendung der Formel: (Sirius AG / Branche) √ó 100 f√ºr jedes Halbjahr",
    identifyMaximum: "Maximum identifizieren:",
    compareAllShares: "Vergleich aller Marktanteile zur Bestimmung des h√∂chsten Wertes",
    basicFormulaText: "Marktanteil = (Umsatz des Unternehmens / Gesamtumsatz der Branche) √ó 100",
    percentageCalculation: "Prozentrechnung",
    trendCalculation: "Trendberechnung",
    // Table and calculation terms
    siriusRevenue: "Sirius AG Umsatz",
    industryRevenue: "Branchenumsatz",
    marketShareTerm: "Marktanteil",
    dataType: "Datentyp",
    // Step by step explanations
    collectBaseData: "Ausgangsdaten sammeln",
    calculateIncrease: "Anstieg berechnen",
    percentageIncreaseFormula2: "Prozentuale Steigerung = (Neuer Marktanteil - Alter Marktanteil) / Alter Marktanteil √ó 100",
    marketShareFormulaSpecific: "Marktanteil = (Sirius AG Umsatz / Branchenumsatz) √ó 100",
    stepByStepExplanation: "Schritt-f√ºr-Schritt Erkl√§rung:",
    step1: "Ausgangsdaten sammeln:",
    step1Description: "Branchenumsatz und Sirius AG Umsatz f√ºr jedes Halbjahr",
    step2: "Marktanteil pro Periode berechnen:",
    step2Description: "(Sirius AG / Branche) √ó 100",
    step3: "Prozentuale Steigerung ermitteln:",
    step3Description: "Vergleich mit der vorherigen Periode",
    step4: "Ergebnisse interpretieren:",
    step4Description: "Trends und Entwicklungen identifizieren"
  },
  en: {
    title: "Business Analytics Exercises",
    availableExercises: "Available Exercises",
    exercise1Title: "Sirius AG Market Share Analysis",
    exercise1Desc: "Market share calculation and trend analysis for a German company over multiple half-years.",
    exercise2Title: "Customer Survey Evaluation",
    exercise2Desc: "Evaluation of customer ratings using school grading system with statistical analysis.",
    startExercise: "Start Exercise",
    backToMenu: "Back to Menu",
    showTask: "Show Task",
    hideTask: "Hide Task",
    showData: "Show Data",
    hideData: "Hide Data",
    showTable: "Show Table",
    showSolution: "Show Solution",
    selectExercise: "Select an exercise to begin",
    theme: "Theme",
    language: "Language",
    light: "Light",
    dark: "Dark",
    system: "System",
    // Sirius Exercise
    taskStatement: "Task Statement",
    siriusTask: "You are employed at Sirius AG and should conduct a market share analysis for the last three years.",
    dataAvailable: "The following sales data is available to you:",
    period: "Half-year",
    industry: "Industry (‚Ç¨ Million)",
    sirius: "Sirius AG (‚Ç¨ Million)",
    taskA: "In which half-year did Sirius AG have the highest market share?",
    taskB: "In which half-year did Sirius AG have the highest percentage increase in market share?",
    taskLabelA: "Task a)",
    taskLabelB: "Task b)",
    marketData: "Market Data",
    calculatedShares: "Calculated Market Shares",
    calculationBasis: "Calculation Basis",
    basicFormula: "Basic Formula:",
    exampleCalc: "Example calculation for 1st Half 01:",
    marketShareFormula: "Market Share = (Company Revenue / Total Industry Revenue) √ó 100",
    solutionA: "Show Solution a)",
    solutionB: "Show Solution b)",
    solutionAHide: "Hide Solution a)",
    solutionBHide: "Hide Solution b)",
    solutionATitle: "Solution a) Highest Market Share",
    solutionBTitle: "Solution b) Highest Percentage Increase",
    showCalculatedShares: "Show Calculated Market Shares",
    hideCalculatedShares: "Hide Calculated Market Shares",
    showCompleteAnalysis: "Show Complete Analysis",
    hideCompleteAnalysis: "Hide Complete Analysis",
    showTableCustomer: "Show Table",
    showSolutionCustomer: "Show Solution",
    showOverallAnalysis: "üìä Show Overall Analysis",
    // Customer Exercise
    customerSurvey: "Customer Survey",
    surveyDescription: "A customer survey was conducted to improve customer satisfaction. You should evaluate the responses of the ten most important customers according to the following criteria.",
    gradeSystem: "Rating using school grades (1 = very good, 6 = insufficient).",
    tasks: "Tasks:",
    taskCustomerA: "What percentage rated good or better on average across the four individual evaluations?",
    taskCustomerB: "What percentage rated satisfactory or worse on average across the four individual evaluations?",
    taskCustomerC: "What average grade was given for the consideration of ecological aspects (Eco) in the products?",
    // Solution labels
    solutionALabel: "Solution a) Good and better",
    solutionBLabel: "Solution b) Satisfactory and worse",
    solutionCLabel: "Solution c) Ecological aspects",
    // Rating categories
    goodAndBetter: "good and better",
    satisfactoryAndWorse: "satisfactory and worse", 
    ecologicalAspects: "Ecological aspects",
    // Analysis terms
    customersWithAverage: "Customers with average grade",
    numberOfCustomers: "Number of customers with",
    haveRated: "have",
    rated: "rated",
    averageGrade: "average grade",
    ecoAverageGrade: "Eco average grade",
    analysis: "Analysis",
    // Overall analysis
    overallAnalysisTitle: "üìä Overall Customer Survey Analysis",
    majorityOfCustomers: "The majority of customers",
    ratedGoodOrBetter: "rated the company good or better",
    onlyPercentage: "Only",
    gaveSatisfactoryOrWorse: "of customers gave satisfactory or worse ratings",
    ecoAspectsRated: "The ecological aspects were rated",
    correspondTo: "- this corresponds to",
    recommendation: "Recommendation:",
    improveEcoAspects: "Improving ecological aspects could increase overall satisfaction",
    ecoAspectsAlreadyGood: "Ecological aspects are already well rated",
    interpretation: "Interpretation:",
    calculation: "Calculation:",
    calculationExplanation: "Calculation explanation:",
    totalCustomers: "Total customers:",
    sumOfRatings: "Sum of eco ratings:",
    allCustomersEcoRatings: "Eco ratings of all customers:",
    result: "Result:",
    noCustomers: "No customers",
    // Period translations
    firstHalf: "1st Half",
    secondHalf: "2nd Half",
    // Solution answer texts
    hadHighestMarketShare: "had the highest market share with",
    formula: "Formula:",
    example: "Example for",
    meaning: "Meaning:",
    strongestMarketPosition: "This shows the strongest market position of Sirius AG in the entire observation period.",
    showsStrongestPosition: "shows the strongest market position",
    largestPercentageIncrease: "The largest percentage increase occurred from",
    withIncrease: "with an increase of",
    notAvailable: "Not available.",
    to: "to",
    exercise1: "Exercise 1",
    exercise2: "Exercise 2",
    marketAnalysis: "Market Analysis",
    customerSatisfaction: "Customer Satisfaction",
    statistics: "Statistics",
    averageValues: "Average Values",
    industryRevenueMio: "Industry (‚Ç¨ Mio)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ Mio)",
    marketSharePercent: "Market Share (%)",
    increasePercent: "Increase (%)",
    stepByStepAnalysis: "Complete Step-by-Step Analysis",
    methodicalApproach: "Methodical Approach:",
    importantInsights: "Important Insights:",
    highestMarketShare: "Highest Market Share:",
    calculateIncreaseRates: "Calculate increase rates:",
    percentageChanges: "Percentage changes between consecutive periods",
    meaningLargestGrowth: "This shows the largest relative growth boost of Sirius AG in market share.",
    strongestIncrease: "Strongest Increase:",
    trendAnalysis: "Trend Analysis:",
    continuousGrowth: "Continuous growth of market share observable over the observation period",
    businessRelevance: "Business Relevance:",
    positiveMarketDevelopment: "Positive market development supports strategic business decisions",
    taskDescription: "Task Description",
    ratingLegend: "Rating Legend",
    customer: "Customer",
    function: "Function",
    performance: "Performance", 
    eco: "Eco",
    price: "Price",
    average: "Average",
    summary: "Summary",
    surveyResults: "Customer Survey Results:",
    goodAndBetterShort: "Good and better",
    satisfactoryAndWorseShort: "Satisfactory and worse",
    ecoAverage: "Eco Average",
    showsDynamicDevelopment: "growth - shows most dynamic development",
    with: "with",
    gradeVeryGood: "very good",
    gradeGood: "good",
    gradeSatisfactory: "satisfactory", 
    gradeAdequate: "adequate",
    gradeDeficient: "deficient",
    gradeInsufficient: "insufficient",
    gradeUnknown: "Unknown",
    gradeLabelVeryGood: "Very Good",
    gradeLabelGood: "Good",
    gradeLabelSatisfactory: "Satisfactory",
    gradeLabelAdequate: "Adequate", 
    gradeLabelDeficient: "Deficient",
    gradeLabelInsufficient: "Insufficient",
    percentageIncreaseFormula: "Percentage increase = (new value - old value) / old value √ó 100",
    absoluteIncrease: "Absolute increase:",
    percentagePoints: "percentage points",
    dataCollection: "Data collection:",
    collectRevenueData: "Collection of revenue data for industry and Sirius AG over 6 half-years",
    calculateMarketShare: "Calculate market share:",
    applyFormula: "Application of formula: (Sirius AG / Industry) √ó 100 for each half-year",
    identifyMaximum: "Identify maximum:",
    compareAllShares: "Comparison of all market shares to determine the highest value",
    basicFormulaText: "Market share = (Company revenue / Total industry revenue) √ó 100",
    percentageCalculation: "Percentage calculation",
    trendCalculation: "Trend calculation",
    // Table and calculation terms
    siriusRevenue: "Sirius AG Revenue",
    industryRevenue: "Industry Revenue",
    marketShareTerm: "Market Share",
    dataType: "Data Type",
    // Step by step explanations
    collectBaseData: "Collect base data",
    calculateIncrease: "Calculate increase",
    percentageIncreaseFormula2: "Percentage increase = (New market share - Old market share) / Old market share √ó 100",
    marketShareFormulaSpecific: "Market Share = (Sirius AG Revenue / Industry Revenue) √ó 100",
    stepByStepExplanation: "Step-by-Step Explanation:",
    step1: "Collect base data:",
    step1Description: "Industry revenue and Sirius AG revenue for each half-year",
    step2: "Calculate market share per period:",
    step2Description: "(Sirius AG / Industry) √ó 100",
    step3: "Determine percentage increase:",
    step3Description: "Comparison with the previous period",
    step4: "Interpret results:",
    step4Description: "Identify trends and developments"
  },
  tr: {
    title: "ƒ∞≈ü Analitiƒüi Alƒ±≈ütƒ±rmalarƒ±",
    availableExercises: "Mevcut Alƒ±≈ütƒ±rmalar",
    exercise1Title: "Sirius AG Pazar Payƒ± Analizi",
    exercise1Desc: "Alman ≈üirketi i√ßin yarƒ± yƒ±l bazƒ±nda pazar payƒ± hesaplama ve trend analizi.",
    exercise2Title: "M√º≈üteri Anketi Deƒüerlendirmesi",
    exercise2Desc: "Okul not sistemi kullanarak m√º≈üteri deƒüerlendirmelerinin istatistiksel analizi.",
    startExercise: "Alƒ±≈ütƒ±rmayƒ± Ba≈ülat",
    backToMenu: "Men√ºye D√∂n",
    showTask: "G√∂revi G√∂ster",
    hideTask: "G√∂revi Gizle",
    showData: "Verileri G√∂ster",
    hideData: "Verileri Gizle",
    showTable: "Tabloyu G√∂ster",
    showSolution: "√á√∂z√ºm√º G√∂ster",
    selectExercise: "Ba≈ülamak i√ßin bir alƒ±≈ütƒ±rma se√ßin",
    theme: "Tema",
    language: "Dil",
    light: "A√ßƒ±k",
    dark: "Koyu",
    system: "Sistem",
    // Sirius Exercise
    taskStatement: "G√∂rev Tanƒ±mƒ±",
    siriusTask: "Sirius AG'de √ßalƒ±≈ümaktasƒ±nƒ±z ve son √º√ß yƒ±l i√ßin pazar payƒ± analizi yapmalƒ±sƒ±nƒ±z.",
    dataAvailable: "A≈üaƒüƒ±daki satƒ±≈ü verileri sizin i√ßin mevcuttur:",
    period: "Yarƒ± Yƒ±l",
    industry: "Sekt√∂r (‚Ç¨ Milyon)",
    sirius: "Sirius AG (‚Ç¨ Milyon)",
    taskA: "Sirius AG hangi yarƒ± yƒ±lda en y√ºksek pazar payƒ±na sahipti?",
    taskB: "Sirius AG hangi yarƒ± yƒ±lda pazar payƒ±nda en y√ºksek y√ºzdelik artƒ±≈üa sahipti?",
    taskLabelA: "G√∂rev a)",
    taskLabelB: "G√∂rev b)",
    marketData: "Pazar Verileri",
    calculatedShares: "Hesaplanan Pazar Paylarƒ±",
    calculationBasis: "Hesaplama Temeli",
    basicFormula: "Temel Form√ºl:",
    exampleCalc: "1. Yarƒ± 01 i√ßin √∂rnek hesaplama:",
    marketShareFormula: "Pazar Payƒ± = (≈ûirket Geliri / Toplam Sekt√∂r Geliri) √ó 100",
    solutionA: "√á√∂z√ºm a) g√∂ster",
    solutionB: "√á√∂z√ºm b) g√∂ster",
    solutionAHide: "√á√∂z√ºm a) gizle",
    solutionBHide: "√á√∂z√ºm b) gizle",
    solutionATitle: "√á√∂z√ºm a) En Y√ºksek Pazar Payƒ±",
    solutionBTitle: "√á√∂z√ºm b) En Y√ºksek Y√ºzdelik Artƒ±≈ü",
    showCalculatedShares: "Hesaplanan Pazar Paylarƒ±nƒ± G√∂ster",
    hideCalculatedShares: "Hesaplanan Pazar Paylarƒ±nƒ± Gizle",
    showCompleteAnalysis: "Tam Analizi G√∂ster",
    hideCompleteAnalysis: "Tam Analizi Gizle",
    showTableCustomer: "Tabloyu G√∂ster",
    showSolutionCustomer: "√á√∂z√ºm√º G√∂ster",
    showOverallAnalysis: "üìä Genel Analizi G√∂ster",
    // Customer Exercise
    customerSurvey: "M√º≈üteri Anketi",
    surveyDescription: "M√º≈üteri memnuniyetini artƒ±rmak i√ßin bir m√º≈üteri anketi yapƒ±ldƒ±. En √∂nemli on m√º≈üterinin yanƒ±tlarƒ±nƒ± a≈üaƒüƒ±daki kriterlere g√∂re deƒüerlendirmelisiniz.",
    gradeSystem: "Okul notlarƒ± kullanƒ±larak derecelendirme (1 = √ßok iyi, 6 = yetersiz).",
    tasks: "G√∂revler:",
    taskCustomerA: "D√∂rt bireysel deƒüerlendirmenin ortalamasƒ±nda y√ºzde ka√ßƒ± iyi veya daha iyi not verdi?",
    taskCustomerB: "D√∂rt bireysel deƒüerlendirmenin ortalamasƒ±nda y√ºzde ka√ßƒ± yeterli veya daha k√∂t√º not verdi?",
    taskCustomerC: "√úr√ºnlerde ekolojik y√∂nlerin (Eko) dikkate alƒ±nmasƒ± i√ßin hangi ortalama not verildi?",
    // Solution labels
    solutionALabel: "√á√∂z√ºm a) ƒ∞yi ve daha iyi",
    solutionBLabel: "√á√∂z√ºm b) Yeterli ve daha k√∂t√º",
    solutionCLabel: "√á√∂z√ºm c) Ekolojik y√∂nler",
    // Rating categories
    goodAndBetter: "iyi ve daha iyi",
    satisfactoryAndWorse: "yeterli ve daha k√∂t√º", 
    ecologicalAspects: "Ekolojik y√∂nler",
    // Analysis terms
    customersWithAverage: "Ortalama notu olan m√º≈üteriler",
    numberOfCustomers: "M√º≈üteri sayƒ±sƒ±",
    haveRated: "deƒüerlendirdi",
    rated: "not verdi",
    averageGrade: "ortalama not",
    ecoAverageGrade: "Eko ortalama not",
    analysis: "Analiz",
    // Overall analysis
    overallAnalysisTitle: "üìä Genel M√º≈üteri Anketi Analizi",
    majorityOfCustomers: "M√º≈üterilerin √ßoƒüunluƒüu",
    ratedGoodOrBetter: "≈üirketi iyi veya daha iyi olarak deƒüerlendirdi",
    onlyPercentage: "Sadece",
    gaveSatisfactoryOrWorse: "m√º≈üteri yeterli veya daha k√∂t√º deƒüerlendirme verdi",
    ecoAspectsRated: "Ekolojik y√∂nler",
    correspondTo: "olarak deƒüerlendirildi - bu ≈üuna kar≈üƒ±lƒ±k gelir",
    recommendation: "√ñneri:",
    improveEcoAspects: "Ekolojik y√∂nlerin iyile≈ütirilmesi genel memnuniyeti artƒ±rabilir",
    ecoAspectsAlreadyGood: "Ekolojik y√∂nler zaten iyi deƒüerlendirilmi≈ü",
    interpretation: "Yorum:",
    calculation: "Hesaplama:",
    calculationExplanation: "Hesaplama a√ßƒ±klamasƒ±:",
    totalCustomers: "Toplam m√º≈üteri:",
    sumOfRatings: "Eko deƒüerlendirmelerinin toplamƒ±:",
    allCustomersEcoRatings: "T√ºm m√º≈üterilerin eko deƒüerlendirmeleri:",
    result: "Sonu√ß:",
    noCustomers: "M√º≈üteri yok",
    // Period translations
    firstHalf: "1. Yarƒ±yƒ±l",
    secondHalf: "2. Yarƒ±yƒ±l",
    // Solution answer texts
    hadHighestMarketShare: "en y√ºksek pazar payƒ±na sahipti",
    formula: "Form√ºl:",
    example: "√ñrnek",
    meaning: "Anlamƒ±:",
    strongestMarketPosition: "Bu, Sirius AG'nin t√ºm g√∂zlem d√∂nemindeki en g√º√ßl√º pazar konumunu g√∂sterir.",
    showsStrongestPosition: "en g√º√ßl√º pazar konumunu g√∂sterir",
    largestPercentageIncrease: "En b√ºy√ºk y√ºzdelik artƒ±≈ü ≈üuradan ger√ßekle≈üti",
    withIncrease: "artƒ±≈üƒ± ile",
    notAvailable: "Mevcut deƒüil.",
    to: "i√ßin",
    exercise1: "Alƒ±≈ütƒ±rma 1",
    exercise2: "Alƒ±≈ütƒ±rma 2",
    marketAnalysis: "Pazar Analizi",
    customerSatisfaction: "M√º≈üteri Memnuniyeti",
    statistics: "ƒ∞statistik",
    averageValues: "Ortalama Deƒüerler",
    industryRevenueMio: "Sekt√∂r (‚Ç¨ Milyon)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ Milyon)",
    marketSharePercent: "Pazar Payƒ± (%)",
    increasePercent: "Artƒ±≈ü (%)",
    stepByStepAnalysis: "Tam Adƒ±m Adƒ±m Analiz",
    methodicalApproach: "Metodolojik Yakla≈üƒ±m:",
    importantInsights: "√ñnemli Bulgular:",
    highestMarketShare: "En Y√ºksek Pazar Payƒ±:",
    calculateIncreaseRates: "Artƒ±≈ü oranlarƒ±nƒ± hesapla:",
    percentageChanges: "Ardƒ±≈üƒ±k d√∂nemler arasƒ±ndaki y√ºzdelik deƒüi≈üimler",
    meaningLargestGrowth: "Bu, Sirius AG'nin pazar payƒ±ndaki en b√ºy√ºk g√∂reli b√ºy√ºme artƒ±≈üƒ±nƒ± g√∂sterir.",
    strongestIncrease: "En G√º√ßl√º Artƒ±≈ü:",
    trendAnalysis: "Trend Analizi:",
    continuousGrowth: "G√∂zlem d√∂nemi boyunca pazar payƒ±nƒ±n s√ºrekli b√ºy√ºmesi g√∂zlenebilir",
    businessRelevance: "ƒ∞≈ü √ñnemi:",
    positiveMarketDevelopment: "Pozitif pazar geli≈üimi stratejik i≈ü kararlarƒ±nƒ± destekler",
    taskDescription: "G√∂rev A√ßƒ±klamasƒ±",
    ratingLegend: "Deƒüerlendirme A√ßƒ±klamasƒ±",
    customer: "M√º≈üteri",
    function: "ƒ∞≈ülev",
    performance: "Performans",
    eco: "Ekolojik",
    price: "Fiyat",
    average: "Ortalama",
    summary: "√ñzet",
    surveyResults: "M√º≈üteri Anketi Sonu√ßlarƒ±:",
    goodAndBetterShort: "ƒ∞yi ve daha iyi",
    satisfactoryAndWorseShort: "Yeterli ve daha k√∂t√º",
    ecoAverage: "Ekolojik Ortalama",
    showsDynamicDevelopment: "b√ºy√ºme - en dinamik geli≈üimi g√∂sterir",
    with: "ile",
    gradeVeryGood: "√ßok iyi",
    gradeGood: "iyi",
    gradeSatisfactory: "orta",
    gradeAdequate: "yeterli",
    gradeDeficient: "yetersiz",
    gradeInsufficient: "ba≈üarƒ±sƒ±z",
    gradeUnknown: "Bilinmeyen",
    gradeLabelVeryGood: "√áok ƒ∞yi",
    gradeLabelGood: "ƒ∞yi",
    gradeLabelSatisfactory: "Orta",
    gradeLabelAdequate: "Yeterli",
    gradeLabelDeficient: "Yetersiz", 
    gradeLabelInsufficient: "Ba≈üarƒ±sƒ±z",
    percentageIncreaseFormula: "Y√ºzdelik artƒ±≈ü = (yeni deƒüer - eski deƒüer) / eski deƒüer √ó 100",
    absoluteIncrease: "Mutlak artƒ±≈ü:",
    percentagePoints: "y√ºzde puanƒ±",
    dataCollection: "Veri toplama:",
    collectRevenueData: "Sekt√∂r ve Sirius AG i√ßin 6 yarƒ±yƒ±l boyunca gelir verilerinin toplanmasƒ±",
    calculateMarketShare: "Pazar payƒ±nƒ± hesapla:",
    applyFormula: "Form√ºl√ºn uygulanmasƒ±: (Sirius AG / Sekt√∂r) √ó 100 her yarƒ±yƒ±l i√ßin",
    identifyMaximum: "Maksimumu belirle:",
    compareAllShares: "En y√ºksek deƒüeri belirlemek i√ßin t√ºm pazar paylarƒ±nƒ±n kar≈üƒ±la≈ütƒ±rƒ±lmasƒ±",
    basicFormulaText: "Pazar payƒ± = (≈ûirket geliri / Toplam sekt√∂r geliri) √ó 100",
    percentageCalculation: "Y√ºzde hesaplama",
    trendCalculation: "Trend hesaplama",
    // Table and calculation terms
    siriusRevenue: "Sirius AG Geliri",
    industryRevenue: "Sekt√∂r Geliri",
    marketShareTerm: "Pazar Payƒ±",
    dataType: "Veri T√ºr√º",
    // Step by step explanations
    collectBaseData: "Temel verileri topla",
    calculateIncrease: "Artƒ±≈üƒ± hesapla",
    percentageIncreaseFormula2: "Y√ºzdelik artƒ±≈ü = (Yeni pazar payƒ± - Eski pazar payƒ±) / Eski pazar payƒ± √ó 100",
    marketShareFormulaSpecific: "Pazar Payƒ± = (Sirius AG Geliri / Sekt√∂r Geliri) √ó 100",
    stepByStepExplanation: "Adƒ±m Adƒ±m A√ßƒ±klama:",
    step1: "Temel verileri topla:",
    step1Description: "Her yarƒ±yƒ±l i√ßin sekt√∂r geliri ve Sirius AG geliri",
    step2: "D√∂nem ba≈üƒ±na pazar payƒ±nƒ± hesapla:",
    step2Description: "(Sirius AG / Sekt√∂r) √ó 100",
    step3: "Y√ºzdelik artƒ±≈üƒ± belirle:",
    step3Description: "√ñnceki d√∂nemle kar≈üƒ±la≈ütƒ±rma",
    step4: "Sonu√ßlarƒ± yorumla:",
    step4Description: "Trendleri ve geli≈ümeleri tanƒ±mla"
  },
  ro: {
    title: "Exerci»õii de AnalizƒÉ de Afaceri",
    availableExercises: "Exerci»õii Disponibile",
    exercise1Title: "Analiza Cotei de Pia»õƒÉ Sirius AG",
    exercise1Desc: "Calculul cotei de pia»õƒÉ »ôi analiza tendin»õelor pentru o companie germanƒÉ pe mai multe semestre.",
    exercise2Title: "Evaluarea Sondajului Clien»õilor",
    exercise2Desc: "Evaluarea ratingurilor clien»õilor folosind sistemul de notare »ôcolar cu analizƒÉ statisticƒÉ.",
    startExercise: "√éncepe Exerci»õiul",
    backToMenu: "√énapoi la Meniu",
    showTask: "AratƒÉ Sarcina",
    hideTask: "Ascunde Sarcina",
    showData: "AratƒÉ Datele",
    hideData: "Ascunde Datele",
    showTable: "AratƒÉ Tabelul",
    showSolution: "AratƒÉ Solu»õia",
    selectExercise: "SelecteazƒÉ un exerci»õiu pentru a √Æncepe",
    theme: "TemƒÉ",
    language: "LimbƒÉ",
    light: "Luminos",
    dark: "√éntunecat",
    system: "Sistem",
    // Sirius Exercise
    taskStatement: "Declara»õia Sarcinii",
    siriusTask: "Lucra»õi la Sirius AG »ôi trebuie sƒÉ efectua»õi o analizƒÉ a cotei de pia»õƒÉ pentru ultimii trei ani.",
    dataAvailable: "UrmƒÉtoarele date de v√¢nzƒÉri vƒÉ sunt disponibile:",
    period: "Semestru",
    industry: "Industrie (‚Ç¨ Milioane)",
    sirius: "Sirius AG (‚Ç¨ Milioane)",
    taskA: "√én care semestru a avut Sirius AG cea mai mare cotƒÉ de pia»õƒÉ?",
    taskB: "√én care semestru a avut Sirius AG cea mai mare cre»ôtere procentualƒÉ a cotei de pia»õƒÉ?",
    taskLabelA: "Sarcina a)",
    taskLabelB: "Sarcina b)",
    marketData: "Date de Pia»õƒÉ",
    calculatedShares: "Cote de Pia»õƒÉ Calculate",
    calculationBasis: "Baza de Calcul",
    basicFormula: "Formula de BazƒÉ:",
    exampleCalc: "Exemplu de calcul pentru 1. Sem. 01:",
    marketShareFormula: "Cota de Pia»õƒÉ = (Venitul Companiei / Venitul Total al Industriei) √ó 100",
    solutionA: "Solu»õia a)",
    solutionB: "Solu»õia b)",
    solutionATitle: "Solu»õia a) Cea Mai Mare CotƒÉ de Pia»õƒÉ",
    solutionBTitle: "Solu»õia b) Cea Mai Mare Cre»ôtere ProcentualƒÉ",
    // Customer Exercise
    customerSurvey: "Sondaj Clien»õi",
    surveyDescription: "S-a efectuat un sondaj pentru √ÆmbunƒÉtƒÉ»õirea satisfac»õiei clien»õilor. Trebuie sƒÉ evalua»õi rƒÉspunsurile celor mai importan»õi zece clien»õi conform criteriilor urmƒÉtoare.",
    gradeSystem: "Evaluarea folosind notele »ôcolare (1 = foarte bine, 6 = insuficient).",
    tasks: "Sarcini:",
    taskCustomerA: "Ce procent a evaluat bine sau mai bine √Æn media celor patru evaluƒÉri individuale?",
    taskCustomerB: "Ce procent a evaluat satisfƒÉcƒÉtor sau mai rƒÉu √Æn media celor patru evaluƒÉri individuale?",
    taskCustomerC: "Ce notƒÉ medie a fost acordatƒÉ pentru luarea √Æn considerare a aspectelor ecologice √Æn produse?",
    solutionALabel: "Solu»õia a) Bine »ôi mai bine",
    solutionBLabel: "Solu»õia b) SatisfƒÉcƒÉtor »ôi mai rƒÉu",
    solutionCLabel: "Solu»õia c) Aspecte ecologice",
    goodAndBetter: "bine »ôi mai bine",
    satisfactoryAndWorse: "satisfƒÉcƒÉtor »ôi mai rƒÉu",
    ecologicalAspects: "Aspecte Ecologice",
    customersWithAverage: "Clien»õi cu nota medie",
    numberOfCustomers: "NumƒÉrul de clien»õi cu",
    haveRated: "au",
    rated: "evaluat",
    averageGrade: "Nota medie",
    ecoAverageGrade: "Nota medie eco",
    analysis: "Evaluare",
    overallAnalysisTitle: "üìä Analiza generalƒÉ a sondajului clien»õilor",
    majorityOfCustomers: "Majoritatea clien»õilor",
    ratedGoodOrBetter: "a evaluat compania bine sau mai bine",
    onlyPercentage: "Doar",
    gaveSatisfactoryOrWorse: "dintre clien»õi au dat evaluƒÉri satisfƒÉcƒÉtoare sau mai rele",
    ecoAspectsRated: "Aspectele ecologice au fost evaluate cu",
    correspondTo: "evaluat - acest lucru corespunde cu",
    recommendation: "Recomandare:",
    improveEcoAspects: "√émbunƒÉtƒÉ»õirea aspectelor ecologice ar putea spori satisfac»õia generalƒÉ",
    ecoAspectsAlreadyGood: "Aspectele ecologice sunt deja bine evaluate",
    interpretation: "Interpretare:",
    calculation: "Calcul:",
    calculationExplanation: "Explica»õia calculului:",
    totalCustomers: "NumƒÉrul total de clien»õi:",
    sumOfRatings: "Suma evaluƒÉrilor eco:",
    allCustomersEcoRatings: "EvaluƒÉrile eco ale tuturor clien»õilor:",
    result: "Rezultat:",
    noCustomers: "Niciun client",
    firstHalf: "1. Sem.",
    secondHalf: "2. Sem.",
    hadHighestMarketShare: "a avut cea mai mare cotƒÉ de pia»õƒÉ cu",
    formula: "Formula:",
    example: "Exemplu pentru",
    meaning: "Semnifica»õie:",
    strongestMarketPosition: "Aceasta aratƒÉ cea mai puternicƒÉ pozi»õie de pia»õƒÉ a Sirius AG √Æn √Æntreaga perioadƒÉ de observare.",
    showsStrongestPosition: "aratƒÉ cea mai puternicƒÉ pozi»õie de pia»õƒÉ",
    largestPercentageIncrease: "Cea mai mare cre»ôtere procentualƒÉ a avut loc de la",
    withIncrease: "cu o cre»ôtere de",
    notAvailable: "Nu este disponibil.",
    to: "la",
    exercise1: "Exerci»õiul 1",
    exercise2: "Exerci»õiul 2",
    marketAnalysis: "Analiza pie»õei",
    percentageCalculation: "Calculul procentelor",
    trendCalculation: "Calculul tendin»õelor",
    customerSatisfaction: "Satisfac»õia clien»õilor",
    statistics: "Statistici",
    averageValues: "Valori medii",
    industryRevenueMio: "Industrie (‚Ç¨ milioane)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ milioane)",
    marketSharePercent: "Cota de pia»õƒÉ (%)",
    increasePercent: "Cre»ôtere (%)",
    stepByStepAnalysis: "Analiza completƒÉ pas cu pas",
    methodicalApproach: "Abordare metodicƒÉ:",
    importantInsights: "Perspective importante:",
    highestMarketShare: "Cea mai mare cotƒÉ de pia»õƒÉ:",
    calculateIncreaseRates: "CalculeazƒÉ ratele de cre»ôtere:",
    percentageChanges: "ModificƒÉri procentuale √Æntre perioadele consecutive",
    meaningLargestGrowth: "Aceasta aratƒÉ cel mai mare salt relativ de cre»ôtere al Sirius AG √Æn cota de pia»õƒÉ.",
    strongestIncrease: "Cea mai puternicƒÉ cre»ôtere:",
    trendAnalysis: "Analiza tendin»õelor:",
    continuousGrowth: "Cre»ôtere continuƒÉ a cotei de pia»õƒÉ observabilƒÉ pe perioada de observare",
    businessRelevance: "Relevan»õa comercialƒÉ:",
    positiveMarketDevelopment: "Dezvoltarea pozitivƒÉ a pie»õei sus»õine deciziile comerciale strategice",
    taskDescription: "Descrierea sarcinii",
    ratingLegend: "Legenda evaluƒÉrilor",
    customer: "Client",
    function: "Func»õie",
    performance: "Performan»õƒÉ",
    eco: "Eco",
    price: "Pre»õ",
    average: "Medie",
    summary: "Rezumat",
    surveyResults: "Rezultatele sondajului clien»õilor:",
    goodAndBetterShort: "Bine »ôi mai bine",
    satisfactoryAndWorseShort: "SatisfƒÉcƒÉtor »ôi mai rƒÉu",
    ecoAverage: "Media eco",
    showsDynamicDevelopment: "Cre»ôtere - aratƒÉ cea mai dinamicƒÉ dezvoltare",
    with: "cu",
    gradeVeryGood: "foarte bine",
    gradeGood: "bine",
    gradeSatisfactory: "satisfƒÉcƒÉtor",
    gradeAdequate: "suficient",
    gradeDeficient: "deficient",
    gradeInsufficient: "insuficient",
    gradeUnknown: "Necunoscut",
    gradeLabelVeryGood: "Foarte bine",
    gradeLabelGood: "Bine",
    gradeLabelSatisfactory: "SatisfƒÉcƒÉtor",
    gradeLabelAdequate: "Suficient",
    gradeLabelDeficient: "Deficient",
    gradeLabelInsufficient: "Insuficient",
    percentageIncreaseFormula: "Cre»ôterea procentualƒÉ = (valoarea nouƒÉ - valoarea veche) / valoarea veche √ó 100",
    absoluteIncrease: "Cre»ôtere absolutƒÉ:",
    percentagePoints: "puncte procentuale",
    dataCollection: "Colectarea datelor:",
    collectRevenueData: "Colectarea datelor de venituri pentru industrie »ôi Sirius AG pe 6 semestre",
    calculateMarketShare: "CalculeazƒÉ cota de pia»õƒÉ:",
    applyFormula: "Aplicarea formulei: (Sirius AG / Industrie) √ó 100 pentru fiecare semestru",
    identifyMaximum: "IdentificƒÉ maximul:",
    compareAllShares: "Compararea tuturor cotelor de pia»õƒÉ pentru determinarea valorii maxime",
    basicFormulaText: "Cota de pia»õƒÉ = (Venitul companiei / Venitul total al industriei) √ó 100",
    siriusRevenue: "Venitul Sirius AG",
    industryRevenue: "Venitul industriei",
    marketShareTerm: "Cota de pia»õƒÉ",
    dataType: "Tipul de date",
    collectBaseData: "ColecteazƒÉ datele de bazƒÉ",
    calculateIncrease: "CalculeazƒÉ cre»ôterea",
    percentageIncreaseFormula2: "Cre»ôterea procentualƒÉ = (Cota de pia»õƒÉ nouƒÉ - Cota de pia»õƒÉ veche) / Cota de pia»õƒÉ veche √ó 100",
    marketShareFormulaSpecific: "Cota de pia»õƒÉ = (Venitul Sirius AG / Venitul industriei) √ó 100",
    stepByStepExplanation: "Explica»õia pas cu pas:",
    step1: "ColecteazƒÉ datele de bazƒÉ:",
    step1Description: "Venitul industriei »ôi venitul Sirius AG pentru fiecare semestru",
    step2: "CalculeazƒÉ cota de pia»õƒÉ pe perioadƒÉ:",
    step2Description: "(Sirius AG / Industrie) √ó 100",
    step3: "DeterminƒÉ cre»ôterea procentualƒÉ:",
    step3Description: "Compara»õie cu perioada anterioarƒÉ",
    step4: "InterpreteazƒÉ rezultatele:",
    step4Description: "IdentificƒÉ tendin»õele »ôi dezvoltƒÉrile",
    solutionAHide: "Ascunde solu»õia a)",
    solutionBHide: "Ascunde solu»õia b)",
    showCompleteAnalysis: "AratƒÉ analiza completƒÉ",
    hideCompleteAnalysis: "Ascunde analiza completƒÉ",
    showTableCustomer: "AratƒÉ tabelul",
    showSolutionCustomer: "AratƒÉ solu»õia",
    showOverallAnalysis: "üìä AratƒÉ analiza generalƒÉ"
  },
  sy: {
    title: "ÿ™ŸÖÿßÿ±ŸäŸÜ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ£ÿπŸÖÿßŸÑ",
    availableExercises: "ÿßŸÑÿ™ŸÖÿßÿ±ŸäŸÜ ÿßŸÑŸÖÿ™ÿßÿ≠ÿ©",
    exercise1Title: "ÿ™ÿ≠ŸÑŸäŸÑ ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ŸÑÿ¥ÿ±ŸÉÿ© ÿ≥Ÿäÿ±ŸäŸàÿ≥",
    exercise1Desc: "ÿ≠ÿ≥ÿßÿ® ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ Ÿàÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿßÿ™ÿ¨ÿßŸáÿßÿ™ ŸÑÿ¥ÿ±ŸÉÿ© ÿ£ŸÑŸÖÿßŸÜŸäÿ© ÿπŸÑŸâ ŸÖÿØŸâ ÿπÿØÿ© ÿ£ŸÜÿµÿßŸÅ ÿ≥ŸÜŸàÿßÿ™.",
    exercise2Title: "ÿ™ŸÇŸäŸäŸÖ ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°",
    exercise2Desc: "ÿ™ŸÇŸäŸäŸÖ ÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿπŸÖŸÑÿßÿ° ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÜÿ∏ÿßŸÖ ÿßŸÑÿØÿ±ÿ¨ÿßÿ™ ÿßŸÑŸÖÿØÿ±ÿ≥Ÿäÿ© ŸÖÿπ ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ•ÿ≠ÿµÿßÿ¶Ÿä.",
    startExercise: "ÿ®ÿØÿ° ÿßŸÑÿ™ŸÖÿ±ŸäŸÜ",
    backToMenu: "ÿßŸÑÿπŸàÿØÿ© ŸÑŸÑŸÇÿßÿ¶ŸÖÿ©",
    showTask: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑŸÖŸáŸÖÿ©",
    hideTask: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑŸÖŸáŸÖÿ©",
    showData: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
    hideData: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
    showTable: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ¨ÿØŸàŸÑ",
    showSolution: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ≠ŸÑ",
    selectExercise: "ÿßÿÆÿ™ÿ± ÿ™ŸÖÿ±ŸäŸÜÿßŸã ŸÑŸÑÿ®ÿØÿ°",
    theme: "ÿßŸÑÿ≥ŸÖÿ©",
    language: "ÿßŸÑŸÑÿ∫ÿ©",
    light: "ŸÅÿßÿ™ÿ≠",
    dark: "ÿØÿßŸÉŸÜ",
    system: "ÿßŸÑŸÜÿ∏ÿßŸÖ",
    // Sirius Exercise
    taskStatement: "ÿ®ŸäÿßŸÜ ÿßŸÑŸÖŸáŸÖÿ©",
    siriusTask: "ÿ£ŸÜÿ™ ÿ™ÿπŸÖŸÑ ŸÅŸä ÿ¥ÿ±ŸÉÿ© ÿ≥Ÿäÿ±ŸäŸàÿ≥ ŸàÿπŸÑŸäŸÉ ÿ•ÿ¨ÿ±ÿßÿ° ÿ™ÿ≠ŸÑŸäŸÑ ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ŸÑŸÑÿ≥ŸÜŸàÿßÿ™ ÿßŸÑÿ´ŸÑÿßÿ´ ÿßŸÑŸÖÿßÿ∂Ÿäÿ©.",
    dataAvailable: "ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ™ÿßŸÑŸäÿ© ŸÑŸÑŸÖÿ®Ÿäÿπÿßÿ™ ŸÖÿ™ÿßÿ≠ÿ© ŸÑŸÉ:",
    period: "ŸÜÿµŸÅ ÿßŸÑÿ≥ŸÜÿ©",
    industry: "ÿßŸÑÿµŸÜÿßÿπÿ© (‚Ç¨ ŸÖŸÑŸäŸàŸÜ)",
    sirius: "ÿ≥Ÿäÿ±ŸäŸàÿ≥ (‚Ç¨ ŸÖŸÑŸäŸàŸÜ)",
    taskA: "ŸÅŸä ÿ£Ÿä ŸÜÿµŸÅ ÿ≥ŸÜÿ© ŸÉÿßŸÜÿ™ ŸÑÿØŸâ ÿ≥Ÿäÿ±ŸäŸàÿ≥ ÿ£ÿπŸÑŸâ ÿ≠ÿµÿ© ŸÅŸä ÿßŸÑÿ≥ŸàŸÇÿü",
    taskB: "ŸÅŸä ÿ£Ÿä ŸÜÿµŸÅ ÿ≥ŸÜÿ© ŸÉÿßŸÜÿ™ ŸÑÿØŸâ ÿ≥Ÿäÿ±ŸäŸàÿ≥ ÿ£ÿπŸÑŸâ ÿ≤ŸäÿßÿØÿ© ŸÖÿ¶ŸàŸäÿ© ŸÅŸä ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇÿü",
    taskLabelA: "ÿßŸÑŸÖŸáŸÖÿ© ÿ£)",
    taskLabelB: "ÿßŸÑŸÖŸáŸÖÿ© ÿ®)",
    marketData: "ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ≥ŸàŸÇ",
    calculatedShares: "ÿ≠ÿµÿµ ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÖÿ≠ÿ≥Ÿàÿ®ÿ©",
    calculationBasis: "ÿ£ÿ≥ÿßÿ≥ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
    basicFormula: "ÿßŸÑÿµŸäÿ∫ÿ© ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©:",
    exampleCalc: "ŸÖÿ´ÿßŸÑ ÿ≠ÿ≥ÿßÿ® ŸÑŸÑŸÜÿµŸÅ ÿßŸÑÿ£ŸàŸÑ 01:",
    marketShareFormula: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ = (ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿ¥ÿ±ŸÉÿ© / ÿ•ÿ¨ŸÖÿßŸÑŸä ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100",
    solutionA: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ≠ŸÑ ÿ£)",
    solutionB: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ≠ŸÑ ÿ®)",
    solutionAHide: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ≠ŸÑ ÿ£)",
    solutionBHide: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ≠ŸÑ ÿ®)",
    solutionATitle: "ÿßŸÑÿ≠ŸÑ ÿ£) ÿ£ÿπŸÑŸâ ÿ≠ÿµÿ© ŸÅŸä ÿßŸÑÿ≥ŸàŸÇ",
    solutionBTitle: "ÿßŸÑÿ≠ŸÑ ÿ®) ÿ£ÿπŸÑŸâ ÿ≤ŸäÿßÿØÿ© ŸÖÿ¶ŸàŸäÿ©",
    showCalculatedShares: "ÿ•ÿ∏Ÿáÿßÿ± ÿ≠ÿµÿµ ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÖÿ≠ÿ≥Ÿàÿ®ÿ©",
    hideCalculatedShares: "ÿ•ÿÆŸÅÿßÿ° ÿ≠ÿµÿµ ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÖÿ≠ÿ≥Ÿàÿ®ÿ©",
    showCompleteAnalysis: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÉÿßŸÖŸÑ",
    hideCompleteAnalysis: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÉÿßŸÖŸÑ",
    showTableCustomer: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ¨ÿØŸàŸÑ",
    showSolutionCustomer: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ≠ŸÑ",
    showOverallAnalysis: "üìä ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿπÿßŸÖ",
    // Customer Exercise
    customerSurvey: "ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°",
    surveyDescription: "ÿ™ŸÖ ÿ•ÿ¨ÿ±ÿßÿ° ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ŸÑÿ™ÿ≠ÿ≥ŸäŸÜ ÿ±ÿ∂ÿß ÿßŸÑÿπŸÖŸÑÿßÿ°. Ÿäÿ¨ÿ® ÿ™ŸÇŸäŸäŸÖ ÿ•ÿ¨ÿßÿ®ÿßÿ™ ÿ£ŸáŸÖ ÿπÿ¥ÿ±ÿ© ÿπŸÖŸÑÿßÿ° ŸàŸÅŸÇÿßŸã ŸÑŸÑŸÖÿπÿßŸäŸäÿ± ÿßŸÑÿ™ÿßŸÑŸäÿ©.",
    gradeSystem: "ÿßŸÑÿ™ŸÇŸäŸäŸÖ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿØÿ±ÿ¨ÿßÿ™ ÿßŸÑŸÖÿØÿ±ÿ≥Ÿäÿ© (1 = ŸÖŸÖÿ™ÿßÿ≤ÿå 6 = ÿ∫Ÿäÿ± ŸÉÿßŸÅŸç).",
    tasks: "ÿßŸÑŸÖŸáÿßŸÖ:",
    taskCustomerA: "ŸÖÿß ÿßŸÑŸÜÿ≥ÿ®ÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ© ÿßŸÑÿ™Ÿä ŸÇŸäŸëŸÖÿ™ ÿ¨ŸäÿØ ÿ£Ÿà ÿ£ŸÅÿ∂ŸÑ ŸÅŸä ŸÖÿ™Ÿàÿ≥ÿ∑ ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿ£ÿ±ÿ®ÿπÿ© ÿßŸÑŸÅÿ±ÿØŸäÿ©ÿü",
    taskCustomerB: "ŸÖÿß ÿßŸÑŸÜÿ≥ÿ®ÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ© ÿßŸÑÿ™Ÿä ŸÇŸäŸëŸÖÿ™ ŸÖÿ±ÿ∂Ÿç ÿ£Ÿà ÿ£ÿ≥Ÿàÿ£ ŸÅŸä ŸÖÿ™Ÿàÿ≥ÿ∑ ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿ£ÿ±ÿ®ÿπÿ© ÿßŸÑŸÅÿ±ÿØŸäÿ©ÿü",
    taskCustomerC: "ŸÖÿß ÿßŸÑÿØÿ±ÿ¨ÿ© ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ© ÿßŸÑÿ™Ÿä ÿ™ŸÖ ŸÖŸÜÿ≠Ÿáÿß ŸÑŸÖÿ±ÿßÿπÿßÿ© ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ŸÅŸä ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ÿü",
    // Solution labels
    solutionALabel: "ÿßŸÑÿ≠ŸÑ ÿ£) ÿ¨ŸäÿØ Ÿàÿ£ŸÅÿ∂ŸÑ",
    solutionBLabel: "ÿßŸÑÿ≠ŸÑ ÿ®) ŸÖÿ±ÿ∂Ÿç Ÿàÿ£ÿ≥Ÿàÿ£",
    solutionCLabel: "ÿßŸÑÿ≠ŸÑ ÿ¨) ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©",
    // Rating categories
    goodAndBetter: "ÿ¨ŸäÿØ Ÿàÿ£ŸÅÿ∂ŸÑ",
    satisfactoryAndWorse: "ŸÖÿ±ÿ∂Ÿç Ÿàÿ£ÿ≥Ÿàÿ£",
    ecologicalAspects: "ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©",
    // Analysis terms
    customersWithAverage: "ÿßŸÑÿπŸÖŸÑÿßÿ° ÿ®ŸÖÿ™Ÿàÿ≥ÿ∑ ÿØÿ±ÿ¨ÿ©",
    numberOfCustomers: "ÿπÿØÿØ ÿßŸÑÿπŸÖŸÑÿßÿ° ŸÖÿπ",
    haveRated: "ŸÇŸäŸëŸÖŸàÿß",
    rated: "ŸÇŸäŸëŸÖ",
    averageGrade: "ÿßŸÑÿØÿ±ÿ¨ÿ© ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©",
    ecoAverageGrade: "ÿßŸÑÿØÿ±ÿ¨ÿ© ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ© ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©",
    analysis: "ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ",
    // Overall analysis
    overallAnalysisTitle: "üìä ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿπÿßŸÖ ŸÑÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°",
    majorityOfCustomers: "ÿ∫ÿßŸÑÿ®Ÿäÿ© ÿßŸÑÿπŸÖŸÑÿßÿ°",
    ratedGoodOrBetter: "ŸÇŸäŸëŸÖŸàÿß ÿßŸÑÿ¥ÿ±ŸÉÿ© ÿ¨ŸäÿØ ÿ£Ÿà ÿ£ŸÅÿ∂ŸÑ",
    onlyPercentage: "ŸÅŸÇÿ∑",
    gaveSatisfactoryOrWorse: "ŸÖŸÜ ÿßŸÑÿπŸÖŸÑÿßÿ° ÿ£ÿπÿ∑Ÿàÿß ÿ™ŸÇŸäŸäŸÖÿßÿ™ ŸÖÿ±ÿ∂Ÿäÿ© ÿ£Ÿà ÿ£ÿ≥Ÿàÿ£",
    ecoAspectsRated: "ÿ™ŸÖ ÿ™ŸÇŸäŸäŸÖ ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ÿ®ŸÄ",
    correspondTo: "ŸÖŸèŸÇŸäŸëŸÖÿ© - ŸàŸáÿ∞ÿß ŸäŸÇÿßÿ®ŸÑ",
    recommendation: "ÿßŸÑÿ™ŸàÿµŸäÿ©:",
    improveEcoAspects: "ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ŸäŸÖŸÉŸÜ ÿ£ŸÜ Ÿäÿ≤ŸäÿØ ÿßŸÑÿ±ÿ∂ÿß ÿßŸÑÿπÿßŸÖ",
    ecoAspectsAlreadyGood: "ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ŸÖŸèŸÇŸäŸëŸÖÿ© ÿ¨ŸäÿØÿßŸã ÿ®ÿßŸÑŸÅÿπŸÑ",
    interpretation: "ÿßŸÑÿ™ŸÅÿ≥Ÿäÿ±:",
    calculation: "ÿßŸÑÿ≠ÿ≥ÿßÿ®:",
    calculationExplanation: "ÿ¥ÿ±ÿ≠ ÿßŸÑÿ≠ÿ≥ÿßÿ®:",
    totalCustomers: "ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿπŸÖŸÑÿßÿ°:",
    sumOfRatings: "ŸÖÿ¨ŸÖŸàÿπ ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©:",
    allCustomersEcoRatings: "ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ŸÑÿ¨ŸÖŸäÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°:",
    result: "ÿßŸÑŸÜÿ™Ÿäÿ¨ÿ©:",
    noCustomers: "ŸÑÿß ŸäŸàÿ¨ÿØ ÿπŸÖŸÑÿßÿ°",
    // Period translations
    firstHalf: "ÿßŸÑŸÜÿµŸÅ ÿßŸÑÿ£ŸàŸÑ",
    secondHalf: "ÿßŸÑŸÜÿµŸÅ ÿßŸÑÿ´ÿßŸÜŸä",
    // Solution answer texts
    hadHighestMarketShare: "ÿ≠ŸÇŸÇ ÿ£ÿπŸÑŸâ ÿ≠ÿµÿ© ÿ≥ŸàŸÇ ÿ®ŸÜÿ≥ÿ®ÿ©",
    formula: "ÿßŸÑÿµŸäÿ∫ÿ©:",
    example: "ŸÖÿ´ÿßŸÑ ŸÑŸÄ",
    meaning: "ÿßŸÑŸÖÿπŸÜŸâ:",
    strongestMarketPosition: "ŸäŸèÿ∏Ÿáÿ± Ÿáÿ∞ÿß ÿ£ŸÇŸàŸâ ŸÖŸàŸÇÿπ ÿ≥ŸàŸÇŸä ŸÑÿ¥ÿ±ŸÉÿ© ÿ≥Ÿäÿ±ŸäŸàÿ≥ ŸÅŸä ŸÅÿ™ÿ±ÿ© ÿßŸÑŸÖÿ±ÿßÿ¨ÿπÿ© ÿ®ÿ£ŸÉŸÖŸÑŸáÿß.",
    showsStrongestPosition: "ŸäŸèÿ∏Ÿáÿ± ÿ£ŸÇŸàŸâ ŸÖŸàŸÇÿπ ÿ≥ŸàŸÇŸä",
    largestPercentageIncrease: "ÿ£ŸÉÿ®ÿ± ÿ≤ŸäÿßÿØÿ© ŸÖÿ¶ŸàŸäÿ© ÿ≠ÿØÿ´ÿ™ ŸÖŸÜ",
    withIncrease: "ÿ®ÿ≤ŸäÿßÿØÿ© ŸÇÿØÿ±Ÿáÿß",
    notAvailable: "ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠.",
    to: "ÿ•ŸÑŸâ",
    exercise1: "ÿßŸÑÿ™ŸÖÿ±ŸäŸÜ 1",
    exercise2: "ÿßŸÑÿ™ŸÖÿ±ŸäŸÜ 2",
    marketAnalysis: "ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ≥ŸàŸÇ",
    customerSatisfaction: "ÿ±ÿ∂ÿß ÿßŸÑÿπŸÖŸÑÿßÿ°",
    statistics: "ÿßŸÑÿ•ÿ≠ÿµÿßÿ¶Ÿäÿßÿ™",
    averageValues: "ÿßŸÑŸÇŸäŸÖ ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©",
    industryRevenueMio: "ÿßŸÑÿµŸÜÿßÿπÿ© (‚Ç¨ ŸÖŸÑŸäŸàŸÜ)",
    siriusRevenueMio: "ÿ≥Ÿäÿ±ŸäŸàÿ≥ (‚Ç¨ ŸÖŸÑŸäŸàŸÜ)",
    marketSharePercent: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ (%)",
    increasePercent: "ÿßŸÑÿ≤ŸäÿßÿØÿ© (%)",
    stepByStepAnalysis: "ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÉÿßŸÖŸÑ ÿÆÿ∑Ÿàÿ© ÿ®ÿÆÿ∑Ÿàÿ©",
    methodicalApproach: "ÿßŸÑŸÜŸáÿ¨ ÿßŸÑŸÖŸÜŸáÿ¨Ÿä:",
    importantInsights: "ÿßŸÑÿ±ÿ§Ÿâ ÿßŸÑŸÖŸáŸÖÿ©:",
    highestMarketShare: "ÿ£ÿπŸÑŸâ ÿ≠ÿµÿ© ÿ≥ŸàŸÇ:",
    calculateIncreaseRates: "ÿ≠ÿ≥ÿßÿ® ŸÖÿπÿØŸÑÿßÿ™ ÿßŸÑÿ≤ŸäÿßÿØÿ©:",
    percentageChanges: "ÿßŸÑÿ™ÿ∫ŸäŸäÿ±ÿßÿ™ ÿßŸÑŸÖÿ¶ŸàŸäÿ© ÿ®ŸäŸÜ ÿßŸÑŸÅÿ™ÿ±ÿßÿ™ ÿßŸÑŸÖÿ™ÿ™ÿßŸÑŸäÿ©",
    meaningLargestGrowth: "ŸäŸèÿ∏Ÿáÿ± Ÿáÿ∞ÿß ÿ£ŸÉÿ®ÿ± ÿØŸÅÿπÿ© ŸÜŸÖŸà ŸÜÿ≥ÿ®Ÿäÿ© ŸÑÿ¥ÿ±ŸÉÿ© ÿ≥Ÿäÿ±ŸäŸàÿ≥ ŸÅŸä ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ.",
    strongestIncrease: "ÿ£ŸÇŸàŸâ ÿ≤ŸäÿßÿØÿ©:",
    trendAnalysis: "ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿßÿ™ÿ¨ÿßŸá:",
    continuousGrowth: "ŸÜŸÖŸà ŸÖÿ≥ÿ™ŸÖÿ± ŸÅŸä ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ŸäŸÖŸÉŸÜ ŸÖŸÑÿßÿ≠ÿ∏ÿ™Ÿá ÿÆŸÑÿßŸÑ ŸÅÿ™ÿ±ÿ© ÿßŸÑŸÖÿ±ÿßÿ¨ÿπÿ©",
    businessRelevance: "ÿßŸÑÿµŸÑÿ© ÿ®ÿßŸÑÿ£ÿπŸÖÿßŸÑ:",
    positiveMarketDevelopment: "ÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ•Ÿäÿ¨ÿßÿ®Ÿä ŸÑŸÑÿ≥ŸàŸÇ ŸäÿØÿπŸÖ ÿßŸÑŸÇÿ±ÿßÿ±ÿßÿ™ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿäÿ© ÿßŸÑÿßÿ≥ÿ™ÿ±ÿßÿ™Ÿäÿ¨Ÿäÿ©",
    taskDescription: "ŸàÿµŸÅ ÿßŸÑŸÖŸáŸÖÿ©",
    ratingLegend: "ŸÖŸÅÿ™ÿßÿ≠ ÿßŸÑÿ™ŸÇŸäŸäŸÖ",
    customer: "ÿßŸÑÿπŸÖŸäŸÑ",
    function: "ÿßŸÑŸàÿ∏ŸäŸÅÿ©",
    performance: "ÿßŸÑÿ£ÿØÿßÿ°",
    eco: "ÿ®Ÿäÿ¶Ÿä",
    price: "ÿßŸÑÿ≥ÿπÿ±",
    average: "ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑",
    summary: "ÿßŸÑŸÖŸÑÿÆÿµ",
    surveyResults: "ŸÜÿ™ÿßÿ¶ÿ¨ ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°:",
    goodAndBetterShort: "ÿ¨ŸäÿØ Ÿàÿ£ŸÅÿ∂ŸÑ",
    satisfactoryAndWorseShort: "ŸÖÿ±ÿ∂Ÿç Ÿàÿ£ÿ≥Ÿàÿ£",
    ecoAverage: "ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ ÿßŸÑÿ®Ÿäÿ¶Ÿä",
    showsDynamicDevelopment: "ÿßŸÑŸÜŸÖŸà - ŸäŸèÿ∏Ÿáÿ± ÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ£ŸÉÿ´ÿ± ÿØŸäŸÜÿßŸÖŸäŸÉŸäÿ©",
    with: "ŸÖÿπ",
    gradeVeryGood: "ŸÖŸÖÿ™ÿßÿ≤ ÿ¨ÿØÿßŸã",
    gradeGood: "ÿ¨ŸäÿØ",
    gradeSatisfactory: "ŸÖÿ±ÿ∂Ÿç",
    gradeAdequate: "ŸÉÿßŸÅŸç",
    gradeDeficient: "ŸÜÿßŸÇÿµ",
    gradeInsufficient: "ÿ∫Ÿäÿ± ŸÉÿßŸÅŸç",
    gradeUnknown: "ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ",
    gradeLabelVeryGood: "ŸÖŸÖÿ™ÿßÿ≤ ÿ¨ÿØÿßŸã",
    gradeLabelGood: "ÿ¨ŸäÿØ",
    gradeLabelSatisfactory: "ŸÖÿ±ÿ∂Ÿç",
    gradeLabelAdequate: "ŸÉÿßŸÅŸç",
    gradeLabelDeficient: "ŸÜÿßŸÇÿµ",
    gradeLabelInsufficient: "ÿ∫Ÿäÿ± ŸÉÿßŸÅŸç",
    percentageIncreaseFormula: "ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ© = (ÿßŸÑŸÇŸäŸÖÿ© ÿßŸÑÿ¨ÿØŸäÿØÿ© - ÿßŸÑŸÇŸäŸÖÿ© ÿßŸÑŸÇÿØŸäŸÖÿ©) / ÿßŸÑŸÇŸäŸÖÿ© ÿßŸÑŸÇÿØŸäŸÖÿ© √ó 100",
    absoluteIncrease: "ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ∑ŸÑŸÇÿ©:",
    percentagePoints: "ŸÜŸÇÿßÿ∑ ŸÖÿ¶ŸàŸäÿ©",
    dataCollection: "ÿ¨ŸÖÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™:",
    collectRevenueData: "ÿ¨ŸÖÿπ ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ•Ÿäÿ±ÿßÿØÿßÿ™ ŸÑŸÑÿµŸÜÿßÿπÿ© Ÿàÿ≥Ÿäÿ±ŸäŸàÿ≥ ÿπŸÑŸâ ŸÖÿØŸâ 6 ÿ£ŸÜÿµÿßŸÅ ÿ≥ŸÜŸàÿßÿ™",
    calculateMarketShare: "ÿ≠ÿ≥ÿßÿ® ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ:",
    applyFormula: "ÿ™ÿ∑ÿ®ŸäŸÇ ÿßŸÑÿµŸäÿ∫ÿ©: (ÿ≥Ÿäÿ±ŸäŸàÿ≥ / ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100 ŸÑŸÉŸÑ ŸÜÿµŸÅ ÿ≥ŸÜÿ©",
    identifyMaximum: "ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑÿ≠ÿØ ÿßŸÑÿ£ŸÇÿµŸâ:",
    compareAllShares: "ŸÖŸÇÿßÿ±ŸÜÿ© ÿ¨ŸÖŸäÿπ ÿ≠ÿµÿµ ÿßŸÑÿ≥ŸàŸÇ ŸÑÿ™ÿ≠ÿØŸäÿØ ÿ£ÿπŸÑŸâ ŸÇŸäŸÖÿ©",
    basicFormulaText: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ = (ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿ¥ÿ±ŸÉÿ© / ÿ•ÿ¨ŸÖÿßŸÑŸä ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100",
    percentageCalculation: "ÿßŸÑÿ≠ÿ≥ÿßÿ® ÿßŸÑŸÖÿ¶ŸàŸä",
    trendCalculation: "ÿ≠ÿ≥ÿßÿ® ÿßŸÑÿßÿ™ÿ¨ÿßŸá",
    // Table and calculation terms
    siriusRevenue: "ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿ≥Ÿäÿ±ŸäŸàÿ≥",
    industryRevenue: "ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ©",
    marketShareTerm: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ",
    dataType: "ŸÜŸàÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
    // Step by step explanations
    collectBaseData: "ÿ¨ŸÖÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©",
    calculateIncrease: "ÿ≠ÿ≥ÿßÿ® ÿßŸÑÿ≤ŸäÿßÿØÿ©",
    percentageIncreaseFormula2: "ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ© = (ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑÿ¨ÿØŸäÿØÿ© - ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÇÿØŸäŸÖÿ©) / ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÇÿØŸäŸÖÿ© √ó 100",
    marketShareFormulaSpecific: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ = (ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿ≥Ÿäÿ±ŸäŸàÿ≥ / ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100",
    stepByStepExplanation: "ÿßŸÑÿ¥ÿ±ÿ≠ ÿÆÿ∑Ÿàÿ© ÿ®ÿÆÿ∑Ÿàÿ©:",
    step1: "ÿ¨ŸÖÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©:",
    step1Description: "ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ© Ÿàÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿ≥Ÿäÿ±ŸäŸàÿ≥ ŸÑŸÉŸÑ ŸÜÿµŸÅ ÿ≥ŸÜÿ©",
    step2: "ÿ≠ÿ≥ÿßÿ® ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ŸÑŸÉŸÑ ŸÅÿ™ÿ±ÿ©:",
    step2Description: "(ÿ≥Ÿäÿ±ŸäŸàÿ≥ / ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100",
    step3: "ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ©:",
    step3Description: "ÿßŸÑŸÖŸÇÿßÿ±ŸÜÿ© ŸÖÿπ ÿßŸÑŸÅÿ™ÿ±ÿ© ÿßŸÑÿ≥ÿßÿ®ŸÇÿ©",
    step4: "ÿ™ŸÅÿ≥Ÿäÿ± ÿßŸÑŸÜÿ™ÿßÿ¶ÿ¨:",
    step4Description: "ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑÿßÿ™ÿ¨ÿßŸáÿßÿ™ ŸàÿßŸÑÿ™ÿ∑Ÿàÿ±ÿßÿ™"
  },
  ar: {
    title: "ÿ™ŸÖÿßÿ±ŸäŸÜ ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ£ÿπŸÖÿßŸÑ",
    availableExercises: "ÿßŸÑÿ™ŸÖÿßÿ±ŸäŸÜ ÿßŸÑŸÖÿ™ÿßÿ≠ÿ©",
    exercise1Title: "ÿ™ÿ≠ŸÑŸäŸÑ ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ŸÑÿ¥ÿ±ŸÉÿ© ÿ≥Ÿäÿ±ŸäŸàÿ≥",
    exercise1Desc: "ÿ≠ÿ≥ÿßÿ® ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ Ÿàÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿßÿ™ÿ¨ÿßŸáÿßÿ™ ŸÑÿ¥ÿ±ŸÉÿ© ÿ£ŸÑŸÖÿßŸÜŸäÿ© ÿπŸÑŸâ ŸÖÿØŸâ ÿπÿØÿ© ÿ£ŸÜÿµÿßŸÅ ÿ≥ŸÜŸàÿßÿ™.",
    exercise2Title: "ÿ™ŸÇŸäŸäŸÖ ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°",
    exercise2Desc: "ÿ™ŸÇŸäŸäŸÖ ÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿπŸÖŸÑÿßÿ° ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÜÿ∏ÿßŸÖ ÿßŸÑÿØÿ±ÿ¨ÿßÿ™ ÿßŸÑŸÖÿØÿ±ÿ≥Ÿäÿ© ŸÖÿπ ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ•ÿ≠ÿµÿßÿ¶Ÿä.",
    startExercise: "ÿ®ÿØÿ° ÿßŸÑÿ™ŸÖÿ±ŸäŸÜ",
    backToMenu: "ÿßŸÑÿπŸàÿØÿ© ŸÑŸÑŸÇÿßÿ¶ŸÖÿ©",
    showTask: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑŸÖŸáŸÖÿ©",
    hideTask: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑŸÖŸáŸÖÿ©",
    showData: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
    hideData: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
    showTable: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ¨ÿØŸàŸÑ",
    showSolution: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ≠ŸÑ",
    selectExercise: "ÿßÿÆÿ™ÿ± ÿ™ŸÖÿ±ŸäŸÜÿßŸã ŸÑŸÑÿ®ÿØÿ°",
    theme: "ÿßŸÑÿ≥ŸÖÿ©",
    language: "ÿßŸÑŸÑÿ∫ÿ©",
    light: "ŸÅÿßÿ™ÿ≠",
    dark: "ÿØÿßŸÉŸÜ",
    system: "ÿßŸÑŸÜÿ∏ÿßŸÖ",
    // Sirius Exercise
    taskStatement: "ÿ®ŸäÿßŸÜ ÿßŸÑŸÖŸáŸÖÿ©",
    siriusTask: "ÿ£ŸÜÿ™ ÿ™ÿπŸÖŸÑ ŸÅŸä ÿ¥ÿ±ŸÉÿ© ÿ≥Ÿäÿ±ŸäŸàÿ≥ ŸàÿπŸÑŸäŸÉ ÿ•ÿ¨ÿ±ÿßÿ° ÿ™ÿ≠ŸÑŸäŸÑ ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ŸÑŸÑÿ≥ŸÜŸàÿßÿ™ ÿßŸÑÿ´ŸÑÿßÿ´ ÿßŸÑŸÖÿßÿ∂Ÿäÿ©.",
    dataAvailable: "ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ™ÿßŸÑŸäÿ© ŸÑŸÑŸÖÿ®Ÿäÿπÿßÿ™ ŸÖÿ™ÿßÿ≠ÿ© ŸÑŸÉ:",
    period: "ŸÜÿµŸÅ ÿßŸÑÿ≥ŸÜÿ©",
    industry: "ÿßŸÑÿµŸÜÿßÿπÿ© (‚Ç¨ ŸÖŸÑŸäŸàŸÜ)",
    sirius: "ÿ≥Ÿäÿ±ŸäŸàÿ≥ (‚Ç¨ ŸÖŸÑŸäŸàŸÜ)",
    taskA: "ŸÅŸä ÿ£Ÿä ŸÜÿµŸÅ ÿ≥ŸÜÿ© ŸÉÿßŸÜÿ™ ŸÑÿØŸâ ÿ≥Ÿäÿ±ŸäŸàÿ≥ ÿ£ÿπŸÑŸâ ÿ≠ÿµÿ© ŸÅŸä ÿßŸÑÿ≥ŸàŸÇÿü",
    taskB: "ŸÅŸä ÿ£Ÿä ŸÜÿµŸÅ ÿ≥ŸÜÿ© ŸÉÿßŸÜÿ™ ŸÑÿØŸâ ÿ≥Ÿäÿ±ŸäŸàÿ≥ ÿ£ÿπŸÑŸâ ÿ≤ŸäÿßÿØÿ© ŸÖÿ¶ŸàŸäÿ© ŸÅŸä ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇÿü",
    taskLabelA: "ÿßŸÑŸÖŸáŸÖÿ© ÿ£)",
    taskLabelB: "ÿßŸÑŸÖŸáŸÖÿ© ÿ®)",
    marketData: "ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ≥ŸàŸÇ",
    calculatedShares: "ÿ≠ÿµÿµ ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÖÿ≠ÿ≥Ÿàÿ®ÿ©",
    calculationBasis: "ÿ£ÿ≥ÿßÿ≥ ÿßŸÑÿ≠ÿ≥ÿßÿ®",
    basicFormula: "ÿßŸÑÿµŸäÿ∫ÿ© ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©:",
    exampleCalc: "ŸÖÿ´ÿßŸÑ ÿ≠ÿ≥ÿßÿ® ŸÑŸÑŸÜÿµŸÅ ÿßŸÑÿ£ŸàŸÑ 01:",
    marketShareFormula: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ = (ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿ¥ÿ±ŸÉÿ© / ÿ•ÿ¨ŸÖÿßŸÑŸä ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100",
    solutionA: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ≠ŸÑ ÿ£)",
    solutionB: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ≠ŸÑ ÿ®)",
    solutionAHide: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ≠ŸÑ ÿ£)",
    solutionBHide: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ≠ŸÑ ÿ®)",
    solutionATitle: "ÿßŸÑÿ≠ŸÑ ÿ£) ÿ£ÿπŸÑŸâ ÿ≠ÿµÿ© ŸÅŸä ÿßŸÑÿ≥ŸàŸÇ",
    solutionBTitle: "ÿßŸÑÿ≠ŸÑ ÿ®) ÿ£ÿπŸÑŸâ ÿ≤ŸäÿßÿØÿ© ŸÖÿ¶ŸàŸäÿ©",
    showCalculatedShares: "ÿ•ÿ∏Ÿáÿßÿ± ÿ≠ÿµÿµ ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÖÿ≠ÿ≥Ÿàÿ®ÿ©",
    hideCalculatedShares: "ÿ•ÿÆŸÅÿßÿ° ÿ≠ÿµÿµ ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÖÿ≠ÿ≥Ÿàÿ®ÿ©",
    showCompleteAnalysis: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÉÿßŸÖŸÑ",
    hideCompleteAnalysis: "ÿ•ÿÆŸÅÿßÿ° ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÉÿßŸÖŸÑ",
    showTableCustomer: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ¨ÿØŸàŸÑ",
    showSolutionCustomer: "ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ≠ŸÑ",
    showOverallAnalysis: "üìä ÿ•ÿ∏Ÿáÿßÿ± ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿπÿßŸÖ",
    // Customer Exercise
    customerSurvey: "ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°",
    surveyDescription: "ÿ™ŸÖ ÿ•ÿ¨ÿ±ÿßÿ° ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ŸÑÿ™ÿ≠ÿ≥ŸäŸÜ ÿ±ÿ∂ÿß ÿßŸÑÿπŸÖŸÑÿßÿ°. Ÿäÿ¨ÿ® ÿ™ŸÇŸäŸäŸÖ ÿ•ÿ¨ÿßÿ®ÿßÿ™ ÿ£ŸáŸÖ ÿπÿ¥ÿ±ÿ© ÿπŸÖŸÑÿßÿ° ŸàŸÅŸÇÿßŸã ŸÑŸÑŸÖÿπÿßŸäŸäÿ± ÿßŸÑÿ™ÿßŸÑŸäÿ©.",
    gradeSystem: "ÿßŸÑÿ™ŸÇŸäŸäŸÖ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿØÿ±ÿ¨ÿßÿ™ ÿßŸÑŸÖÿØÿ±ÿ≥Ÿäÿ© (1 = ŸÖŸÖÿ™ÿßÿ≤ÿå 6 = ÿ∫Ÿäÿ± ŸÉÿßŸÅŸç).",
    tasks: "ÿßŸÑŸÖŸáÿßŸÖ:",
    taskCustomerA: "ŸÖÿß ÿßŸÑŸÜÿ≥ÿ®ÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ© ÿßŸÑÿ™Ÿä ŸÇŸäŸëŸÖÿ™ ÿ¨ŸäÿØ ÿ£Ÿà ÿ£ŸÅÿ∂ŸÑ ŸÅŸä ŸÖÿ™Ÿàÿ≥ÿ∑ ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿ£ÿ±ÿ®ÿπÿ© ÿßŸÑŸÅÿ±ÿØŸäÿ©ÿü",
    taskCustomerB: "ŸÖÿß ÿßŸÑŸÜÿ≥ÿ®ÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ© ÿßŸÑÿ™Ÿä ŸÇŸäŸëŸÖÿ™ ŸÖÿ±ÿ∂Ÿç ÿ£Ÿà ÿ£ÿ≥Ÿàÿ£ ŸÅŸä ŸÖÿ™Ÿàÿ≥ÿ∑ ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿ£ÿ±ÿ®ÿπÿ© ÿßŸÑŸÅÿ±ÿØŸäÿ©ÿü",
    taskCustomerC: "ŸÖÿß ÿßŸÑÿØÿ±ÿ¨ÿ© ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ© ÿßŸÑÿ™Ÿä ÿ™ŸÖ ŸÖŸÜÿ≠Ÿáÿß ŸÑŸÖÿ±ÿßÿπÿßÿ© ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ŸÅŸä ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ÿü",
    // Solution labels
    solutionALabel: "ÿßŸÑÿ≠ŸÑ ÿ£) ÿ¨ŸäÿØ Ÿàÿ£ŸÅÿ∂ŸÑ",
    solutionBLabel: "ÿßŸÑÿ≠ŸÑ ÿ®) ŸÖÿ±ÿ∂Ÿç Ÿàÿ£ÿ≥Ÿàÿ£",
    solutionCLabel: "ÿßŸÑÿ≠ŸÑ ÿ¨) ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©",
    // Rating categories
    goodAndBetter: "ÿ¨ŸäÿØ Ÿàÿ£ŸÅÿ∂ŸÑ",
    satisfactoryAndWorse: "ŸÖÿ±ÿ∂Ÿç Ÿàÿ£ÿ≥Ÿàÿ£",
    ecologicalAspects: "ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©",
    // Analysis terms
    customersWithAverage: "ÿßŸÑÿπŸÖŸÑÿßÿ° ÿ®ŸÖÿ™Ÿàÿ≥ÿ∑ ÿØÿ±ÿ¨ÿ©",
    numberOfCustomers: "ÿπÿØÿØ ÿßŸÑÿπŸÖŸÑÿßÿ° ŸÖÿπ",
    haveRated: "ŸÇŸäŸëŸÖŸàÿß",
    rated: "ŸÇŸäŸëŸÖ",
    averageGrade: "ÿßŸÑÿØÿ±ÿ¨ÿ© ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©",
    ecoAverageGrade: "ÿßŸÑÿØÿ±ÿ¨ÿ© ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ© ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©",
    analysis: "ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ",
    // Overall analysis
    overallAnalysisTitle: "üìä ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿπÿßŸÖ ŸÑÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°",
    majorityOfCustomers: "ÿ∫ÿßŸÑÿ®Ÿäÿ© ÿßŸÑÿπŸÖŸÑÿßÿ°",
    ratedGoodOrBetter: "ŸÇŸäŸëŸÖŸàÿß ÿßŸÑÿ¥ÿ±ŸÉÿ© ÿ¨ŸäÿØ ÿ£Ÿà ÿ£ŸÅÿ∂ŸÑ",
    onlyPercentage: "ŸÅŸÇÿ∑",
    gaveSatisfactoryOrWorse: "ŸÖŸÜ ÿßŸÑÿπŸÖŸÑÿßÿ° ÿ£ÿπÿ∑Ÿàÿß ÿ™ŸÇŸäŸäŸÖÿßÿ™ ŸÖÿ±ÿ∂Ÿäÿ© ÿ£Ÿà ÿ£ÿ≥Ÿàÿ£",
    ecoAspectsRated: "ÿ™ŸÖ ÿ™ŸÇŸäŸäŸÖ ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ÿ®ŸÄ",
    correspondTo: "ŸÖŸèŸÇŸäŸëŸÖÿ© - ŸàŸáÿ∞ÿß ŸäŸÇÿßÿ®ŸÑ",
    recommendation: "ÿßŸÑÿ™ŸàÿµŸäÿ©:",
    improveEcoAspects: "ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ŸäŸÖŸÉŸÜ ÿ£ŸÜ Ÿäÿ≤ŸäÿØ ÿßŸÑÿ±ÿ∂ÿß ÿßŸÑÿπÿßŸÖ",
    ecoAspectsAlreadyGood: "ÿßŸÑÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ŸÖŸèŸÇŸäŸëŸÖÿ© ÿ¨ŸäÿØÿßŸã ÿ®ÿßŸÑŸÅÿπŸÑ",
    interpretation: "ÿßŸÑÿ™ŸÅÿ≥Ÿäÿ±:",
    calculation: "ÿßŸÑÿ≠ÿ≥ÿßÿ®:",
    calculationExplanation: "ÿ¥ÿ±ÿ≠ ÿßŸÑÿ≠ÿ≥ÿßÿ®:",
    totalCustomers: "ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿπŸÖŸÑÿßÿ°:",
    sumOfRatings: "ŸÖÿ¨ŸÖŸàÿπ ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©:",
    allCustomersEcoRatings: "ÿßŸÑÿ™ŸÇŸäŸäŸÖÿßÿ™ ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ© ŸÑÿ¨ŸÖŸäÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°:",
    result: "ÿßŸÑŸÜÿ™Ÿäÿ¨ÿ©:",
    noCustomers: "ŸÑÿß ŸäŸàÿ¨ÿØ ÿπŸÖŸÑÿßÿ°",
    // Period translations
    firstHalf: "ÿßŸÑŸÜÿµŸÅ ÿßŸÑÿ£ŸàŸÑ",
    secondHalf: "ÿßŸÑŸÜÿµŸÅ ÿßŸÑÿ´ÿßŸÜŸä",
    // Solution answer texts
    hadHighestMarketShare: "ÿ≠ŸÇŸÇ ÿ£ÿπŸÑŸâ ÿ≠ÿµÿ© ÿ≥ŸàŸÇ ÿ®ŸÜÿ≥ÿ®ÿ©",
    formula: "ÿßŸÑÿµŸäÿ∫ÿ©:",
    example: "ŸÖÿ´ÿßŸÑ ŸÑŸÄ",
    meaning: "ÿßŸÑŸÖÿπŸÜŸâ:",
    strongestMarketPosition: "ŸäŸèÿ∏Ÿáÿ± Ÿáÿ∞ÿß ÿ£ŸÇŸàŸâ ŸÖŸàŸÇÿπ ÿ≥ŸàŸÇŸä ŸÑÿ¥ÿ±ŸÉÿ© ÿ≥Ÿäÿ±ŸäŸàÿ≥ ŸÅŸä ŸÅÿ™ÿ±ÿ© ÿßŸÑŸÖÿ±ÿßÿ¨ÿπÿ© ÿ®ÿ£ŸÉŸÖŸÑŸáÿß.",
    showsStrongestPosition: "ŸäŸèÿ∏Ÿáÿ± ÿ£ŸÇŸàŸâ ŸÖŸàŸÇÿπ ÿ≥ŸàŸÇŸä",
    largestPercentageIncrease: "ÿ£ŸÉÿ®ÿ± ÿ≤ŸäÿßÿØÿ© ŸÖÿ¶ŸàŸäÿ© ÿ≠ÿØÿ´ÿ™ ŸÖŸÜ",
    withIncrease: "ÿ®ÿ≤ŸäÿßÿØÿ© ŸÇÿØÿ±Ÿáÿß",
    notAvailable: "ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠.",
    to: "ÿ•ŸÑŸâ",
    exercise1: "ÿßŸÑÿ™ŸÖÿ±ŸäŸÜ 1",
    exercise2: "ÿßŸÑÿ™ŸÖÿ±ŸäŸÜ 2",
    marketAnalysis: "ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿ≥ŸàŸÇ",
    customerSatisfaction: "ÿ±ÿ∂ÿß ÿßŸÑÿπŸÖŸÑÿßÿ°",
    statistics: "ÿßŸÑÿ•ÿ≠ÿµÿßÿ¶Ÿäÿßÿ™",
    averageValues: "ÿßŸÑŸÇŸäŸÖ ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©",
    industryRevenueMio: "ÿßŸÑÿµŸÜÿßÿπÿ© (‚Ç¨ ŸÖŸÑŸäŸàŸÜ)",
    siriusRevenueMio: "ÿ≥Ÿäÿ±ŸäŸàÿ≥ (‚Ç¨ ŸÖŸÑŸäŸàŸÜ)",
    marketSharePercent: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ (%)",
    increasePercent: "ÿßŸÑÿ≤ŸäÿßÿØÿ© (%)",
    stepByStepAnalysis: "ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑŸÉÿßŸÖŸÑ ÿÆÿ∑Ÿàÿ© ÿ®ÿÆÿ∑Ÿàÿ©",
    methodicalApproach: "ÿßŸÑŸÜŸáÿ¨ ÿßŸÑŸÖŸÜŸáÿ¨Ÿä:",
    importantInsights: "ÿßŸÑÿ±ÿ§Ÿâ ÿßŸÑŸÖŸáŸÖÿ©:",
    highestMarketShare: "ÿ£ÿπŸÑŸâ ÿ≠ÿµÿ© ÿ≥ŸàŸÇ:",
    calculateIncreaseRates: "ÿ≠ÿ≥ÿßÿ® ŸÖÿπÿØŸÑÿßÿ™ ÿßŸÑÿ≤ŸäÿßÿØÿ©:",
    percentageChanges: "ÿßŸÑÿ™ÿ∫ŸäŸäÿ±ÿßÿ™ ÿßŸÑŸÖÿ¶ŸàŸäÿ© ÿ®ŸäŸÜ ÿßŸÑŸÅÿ™ÿ±ÿßÿ™ ÿßŸÑŸÖÿ™ÿ™ÿßŸÑŸäÿ©",
    meaningLargestGrowth: "ŸäŸèÿ∏Ÿáÿ± Ÿáÿ∞ÿß ÿ£ŸÉÿ®ÿ± ÿØŸÅÿπÿ© ŸÜŸÖŸà ŸÜÿ≥ÿ®Ÿäÿ© ŸÑÿ¥ÿ±ŸÉÿ© ÿ≥Ÿäÿ±ŸäŸàÿ≥ ŸÅŸä ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ.",
    strongestIncrease: "ÿ£ŸÇŸàŸâ ÿ≤ŸäÿßÿØÿ©:",
    trendAnalysis: "ÿ™ÿ≠ŸÑŸäŸÑ ÿßŸÑÿßÿ™ÿ¨ÿßŸá:",
    continuousGrowth: "ŸÜŸÖŸà ŸÖÿ≥ÿ™ŸÖÿ± ŸÅŸä ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ŸäŸÖŸÉŸÜ ŸÖŸÑÿßÿ≠ÿ∏ÿ™Ÿá ÿÆŸÑÿßŸÑ ŸÅÿ™ÿ±ÿ© ÿßŸÑŸÖÿ±ÿßÿ¨ÿπÿ©",
    businessRelevance: "ÿßŸÑÿµŸÑÿ© ÿ®ÿßŸÑÿ£ÿπŸÖÿßŸÑ:",
    positiveMarketDevelopment: "ÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ•Ÿäÿ¨ÿßÿ®Ÿä ŸÑŸÑÿ≥ŸàŸÇ ŸäÿØÿπŸÖ ÿßŸÑŸÇÿ±ÿßÿ±ÿßÿ™ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿäÿ© ÿßŸÑÿßÿ≥ÿ™ÿ±ÿßÿ™Ÿäÿ¨Ÿäÿ©",
    taskDescription: "ŸàÿµŸÅ ÿßŸÑŸÖŸáŸÖÿ©",
    ratingLegend: "ŸÖŸÅÿ™ÿßÿ≠ ÿßŸÑÿ™ŸÇŸäŸäŸÖ",
    customer: "ÿßŸÑÿπŸÖŸäŸÑ",
    function: "ÿßŸÑŸàÿ∏ŸäŸÅÿ©",
    performance: "ÿßŸÑÿ£ÿØÿßÿ°",
    eco: "ÿ®Ÿäÿ¶Ÿä",
    price: "ÿßŸÑÿ≥ÿπÿ±",
    average: "ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑",
    summary: "ÿßŸÑŸÖŸÑÿÆÿµ",
    surveyResults: "ŸÜÿ™ÿßÿ¶ÿ¨ ÿßÿ≥ÿ™ÿ∑ŸÑÿßÿπ ÿßŸÑÿπŸÖŸÑÿßÿ°:",
    goodAndBetterShort: "ÿ¨ŸäÿØ Ÿàÿ£ŸÅÿ∂ŸÑ",
    satisfactoryAndWorseShort: "ŸÖÿ±ÿ∂Ÿç Ÿàÿ£ÿ≥Ÿàÿ£",
    ecoAverage: "ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ ÿßŸÑÿ®Ÿäÿ¶Ÿä",
    showsDynamicDevelopment: "ÿßŸÑŸÜŸÖŸà - ŸäŸèÿ∏Ÿáÿ± ÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ£ŸÉÿ´ÿ± ÿØŸäŸÜÿßŸÖŸäŸÉŸäÿ©",
    with: "ŸÖÿπ",
    gradeVeryGood: "ŸÖŸÖÿ™ÿßÿ≤ ÿ¨ÿØÿßŸã",
    gradeGood: "ÿ¨ŸäÿØ",
    gradeSatisfactory: "ŸÖÿ±ÿ∂Ÿç",
    gradeAdequate: "ŸÉÿßŸÅŸç",
    gradeDeficient: "ŸÜÿßŸÇÿµ",
    gradeInsufficient: "ÿ∫Ÿäÿ± ŸÉÿßŸÅŸç",
    gradeUnknown: "ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ",
    gradeLabelVeryGood: "ŸÖŸÖÿ™ÿßÿ≤ ÿ¨ÿØÿßŸã",
    gradeLabelGood: "ÿ¨ŸäÿØ",
    gradeLabelSatisfactory: "ŸÖÿ±ÿ∂Ÿç",
    gradeLabelAdequate: "ŸÉÿßŸÅŸç",
    gradeLabelDeficient: "ŸÜÿßŸÇÿµ",
    gradeLabelInsufficient: "ÿ∫Ÿäÿ± ŸÉÿßŸÅŸç",
    percentageIncreaseFormula: "ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ© = (ÿßŸÑŸÇŸäŸÖÿ© ÿßŸÑÿ¨ÿØŸäÿØÿ© - ÿßŸÑŸÇŸäŸÖÿ© ÿßŸÑŸÇÿØŸäŸÖÿ©) / ÿßŸÑŸÇŸäŸÖÿ© ÿßŸÑŸÇÿØŸäŸÖÿ© √ó 100",
    absoluteIncrease: "ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ∑ŸÑŸÇÿ©:",
    percentagePoints: "ŸÜŸÇÿßÿ∑ ŸÖÿ¶ŸàŸäÿ©",
    dataCollection: "ÿ¨ŸÖÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™:",
    collectRevenueData: "ÿ¨ŸÖÿπ ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ•Ÿäÿ±ÿßÿØÿßÿ™ ŸÑŸÑÿµŸÜÿßÿπÿ© Ÿàÿ≥Ÿäÿ±ŸäŸàÿ≥ ÿπŸÑŸâ ŸÖÿØŸâ 6 ÿ£ŸÜÿµÿßŸÅ ÿ≥ŸÜŸàÿßÿ™",
    calculateMarketShare: "ÿ≠ÿ≥ÿßÿ® ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ:",
    applyFormula: "ÿ™ÿ∑ÿ®ŸäŸÇ ÿßŸÑÿµŸäÿ∫ÿ©: (ÿ≥Ÿäÿ±ŸäŸàÿ≥ / ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100 ŸÑŸÉŸÑ ŸÜÿµŸÅ ÿ≥ŸÜÿ©",
    identifyMaximum: "ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑÿ≠ÿØ ÿßŸÑÿ£ŸÇÿµŸâ:",
    compareAllShares: "ŸÖŸÇÿßÿ±ŸÜÿ© ÿ¨ŸÖŸäÿπ ÿ≠ÿµÿµ ÿßŸÑÿ≥ŸàŸÇ ŸÑÿ™ÿ≠ÿØŸäÿØ ÿ£ÿπŸÑŸâ ŸÇŸäŸÖÿ©",
    basicFormulaText: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ = (ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿ¥ÿ±ŸÉÿ© / ÿ•ÿ¨ŸÖÿßŸÑŸä ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100",
    percentageCalculation: "ÿßŸÑÿ≠ÿ≥ÿßÿ® ÿßŸÑŸÖÿ¶ŸàŸä",
    trendCalculation: "ÿ≠ÿ≥ÿßÿ® ÿßŸÑÿßÿ™ÿ¨ÿßŸá",
    // Table and calculation terms
    siriusRevenue: "ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿ≥Ÿäÿ±ŸäŸàÿ≥",
    industryRevenue: "ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ©",
    marketShareTerm: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ",
    dataType: "ŸÜŸàÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
    // Step by step explanations
    collectBaseData: "ÿ¨ŸÖÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©",
    calculateIncrease: "ÿ≠ÿ≥ÿßÿ® ÿßŸÑÿ≤ŸäÿßÿØÿ©",
    percentageIncreaseFormula2: "ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ© = (ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑÿ¨ÿØŸäÿØÿ© - ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÇÿØŸäŸÖÿ©) / ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ÿßŸÑŸÇÿØŸäŸÖÿ© √ó 100",
    marketShareFormulaSpecific: "ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ = (ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿ≥Ÿäÿ±ŸäŸàÿ≥ / ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100",
    stepByStepExplanation: "ÿßŸÑÿ¥ÿ±ÿ≠ ÿÆÿ∑Ÿàÿ© ÿ®ÿÆÿ∑Ÿàÿ©:",
    step1: "ÿ¨ŸÖÿπ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©:",
    step1Description: "ÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿßŸÑÿµŸÜÿßÿπÿ© Ÿàÿ•Ÿäÿ±ÿßÿØÿßÿ™ ÿ≥Ÿäÿ±ŸäŸàÿ≥ ŸÑŸÉŸÑ ŸÜÿµŸÅ ÿ≥ŸÜÿ©",
    step2: "ÿ≠ÿ≥ÿßÿ® ÿ≠ÿµÿ© ÿßŸÑÿ≥ŸàŸÇ ŸÑŸÉŸÑ ŸÅÿ™ÿ±ÿ©:",
    step2Description: "(ÿ≥Ÿäÿ±ŸäŸàÿ≥ / ÿßŸÑÿµŸÜÿßÿπÿ©) √ó 100",
    step3: "ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿ¶ŸàŸäÿ©:",
    step3Description: "ÿßŸÑŸÖŸÇÿßÿ±ŸÜÿ© ŸÖÿπ ÿßŸÑŸÅÿ™ÿ±ÿ© ÿßŸÑÿ≥ÿßÿ®ŸÇÿ©",
    step4: "ÿ™ŸÅÿ≥Ÿäÿ± ÿßŸÑŸÜÿ™ÿßÿ¶ÿ¨:",
    step4Description: "ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑÿßÿ™ÿ¨ÿßŸáÿßÿ™ ŸàÿßŸÑÿ™ÿ∑Ÿàÿ±ÿßÿ™"
  },
  ru: {
    title: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ –ë–∏–∑–Ω–µ—Å-–ê–Ω–∞–ª–∏—Ç–∏–∫–µ",
    availableExercises: "–î–æ—Å—Ç—É–ø–Ω—ã–µ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è",
    exercise1Title: "–ê–Ω–∞–ª–∏–∑ –†—ã–Ω–æ—á–Ω–æ–π –î–æ–ª–∏ Sirius AG",
    exercise1Desc: "–†–∞—Å—á–µ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π –¥–æ–ª–∏ –∏ –∞–Ω–∞–ª–∏–∑ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –¥–ª—è –Ω–µ–º–µ—Ü–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—É–≥–æ–¥–∏–π.",
    exercise2Title: "–û—Ü–µ–Ω–∫–∞ –û–ø—Ä–æ—Å–∞ –ö–ª–∏–µ–Ω—Ç–æ–≤",
    exercise2Desc: "–û—Ü–µ–Ω–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —à–∫–æ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –æ—Ü–µ–Ω–æ–∫ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –∞–Ω–∞–ª–∏–∑–æ–º.",
    startExercise: "–ù–∞—á–∞—Ç—å –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
    backToMenu: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ú–µ–Ω—é",
    showTask: "–ü–æ–∫–∞–∑–∞—Ç—å –ó–∞–¥–∞—á—É",
    hideTask: "–°–∫—Ä—ã—Ç—å –ó–∞–¥–∞—á—É",
    showData: "–ü–æ–∫–∞–∑–∞—Ç—å –î–∞–Ω–Ω—ã–µ",
    hideData: "–°–∫—Ä—ã—Ç—å –î–∞–Ω–Ω—ã–µ",
    showTable: "–ü–æ–∫–∞–∑–∞—Ç—å –¢–∞–±–ª–∏—Ü—É",
    showSolution: "–ü–æ–∫–∞–∑–∞—Ç—å –†–µ—à–µ–Ω–∏–µ",
    selectExercise: "–í—ã–±–µ—Ä–∏—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥–ª—è –Ω–∞—á–∞–ª–∞",
    theme: "–¢–µ–º–∞",
    language: "–Ø–∑—ã–∫",
    light: "–°–≤–µ—Ç–ª–∞—è",
    dark: "–¢–µ–º–Ω–∞—è",
    system: "–°–∏—Å—Ç–µ–º–Ω–∞—è",
    // Sirius Exercise
    taskStatement: "–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ó–∞–¥–∞—á–∏",
    siriusTask: "–í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –≤ Sirius AG –∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑ –¥–æ–ª–∏ —Ä—ã–Ω–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∏ –≥–æ–¥–∞.",
    dataAvailable: "–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö:",
    period: "–ü–æ–ª—É–≥–æ–¥–∏–µ",
    industry: "–û—Ç—Ä–∞—Å–ª—å (‚Ç¨ –º–ª–Ω)",
    sirius: "Sirius AG (‚Ç¨ –º–ª–Ω)",
    taskA: "–í –∫–∞–∫–æ–º –ø–æ–ª—É–≥–æ–¥–∏–∏ —É Sirius AG –±—ã–ª–∞ —Å–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –¥–æ–ª—è —Ä—ã–Ω–∫–∞?",
    taskB: "–í –∫–∞–∫–æ–º –ø–æ–ª—É–≥–æ–¥–∏–∏ —É Sirius AG –±—ã–ª —Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π —Ä–æ—Å—Ç –¥–æ–ª–∏ —Ä—ã–Ω–∫–∞?",
    taskLabelA: "–ó–∞–¥–∞—á–∞ –∞)",
    taskLabelB: "–ó–∞–¥–∞—á–∞ –±)",
    marketData: "–†—ã–Ω–æ—á–Ω—ã–µ –î–∞–Ω–Ω—ã–µ",
    calculatedShares: "–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –î–æ–ª–∏ –†—ã–Ω–∫–∞",
    calculationBasis: "–û—Å–Ω–æ–≤–∞ –†–∞—Å—á–µ—Ç–∞",
    basicFormula: "–û—Å–Ω–æ–≤–Ω–∞—è –§–æ—Ä–º—É–ª–∞:",
    exampleCalc: "–ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è 1-–≥–æ –ø–æ–ª—É–≥. 01:",
    marketShareFormula: "–î–æ–ª—è –†—ã–Ω–∫–∞ = (–î–æ—Ö–æ–¥ –ö–æ–º–ø–∞–Ω–∏–∏ / –û–±—â–∏–π –î–æ—Ö–æ–¥ –û—Ç—Ä–∞—Å–ª–∏) √ó 100",
    solutionA: "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –∞)",
    solutionB: "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –±)",
    solutionAHide: "–°–∫—Ä—ã—Ç—å —Ä–µ—à–µ–Ω–∏–µ –∞)",
    solutionBHide: "–°–∫—Ä—ã—Ç—å —Ä–µ—à–µ–Ω–∏–µ –±)",
    solutionATitle: "–†–µ—à–µ–Ω–∏–µ –∞) –ù–∞–∏–≤—ã—Å—à–∞—è –î–æ–ª—è –†—ã–Ω–∫–∞",
    solutionBTitle: "–†–µ—à–µ–Ω–∏–µ –±) –ù–∞–∏–≤—ã—Å—à–∏–π –ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π –†–æ—Å—Ç",
    showCalculatedShares: "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –¥–æ–ª–∏ —Ä—ã–Ω–∫–∞",
    hideCalculatedShares: "–°–∫—Ä—ã—Ç—å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –¥–æ–ª–∏ —Ä—ã–Ω–∫–∞",
    showCompleteAnalysis: "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑",
    hideCompleteAnalysis: "–°–∫—Ä—ã—Ç—å –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑",
    showTableCustomer: "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É",
    showSolutionCustomer: "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
    showOverallAnalysis: "üìä –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â–∏–π –∞–Ω–∞–ª–∏–∑",
    // Customer Exercise
    customerSurvey: "–û–ø—Ä–æ—Å –ö–ª–∏–µ–Ω—Ç–æ–≤",
    surveyDescription: "–ë—ã–ª –ø—Ä–æ–≤–µ–¥–µ–Ω –æ–ø—Ä–æ—Å –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤. –í—ã –¥–æ–ª–∂–Ω—ã –æ—Ü–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –¥–µ—Å—è—Ç–∏ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.",
    gradeSystem: "–û—Ü–µ–Ω–∫–∞ –ø–æ —à–∫–æ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ (1 = –æ—Ç–ª–∏—á–Ω–æ, 6 = –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ).",
    tasks: "–ó–∞–¥–∞—á–∏:",
    taskCustomerA: "–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ü–µ–Ω–∏–ª —Ö–æ—Ä–æ—à–æ –∏–ª–∏ –ª—É—á—à–µ –≤ —Å—Ä–µ–¥–Ω–µ–º –ø–æ —á–µ—Ç—ã—Ä–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –æ—Ü–µ–Ω–∫–∞–º?",
    taskCustomerB: "–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ü–µ–Ω–∏–ª —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ –∏–ª–∏ —Ö—É–∂–µ –≤ —Å—Ä–µ–¥–Ω–µ–º –ø–æ —á–µ—Ç—ã—Ä–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –æ—Ü–µ–Ω–∫–∞–º?",
    taskCustomerC: "–ö–∞–∫–∞—è —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –±—ã–ª–∞ –¥–∞–Ω–∞ –∑–∞ —É—á–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –≤ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö?",
    // Solution labels
    solutionALabel: "–†–µ—à–µ–Ω–∏–µ –∞) –•–æ—Ä–æ—à–æ –∏ –ª—É—á—à–µ",
    solutionBLabel: "–†–µ—à–µ–Ω–∏–µ –±) –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ –∏ —Ö—É–∂–µ",
    solutionCLabel: "–†–µ—à–µ–Ω–∏–µ –≤) –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã",
    // Rating categories
    goodAndBetter: "—Ö–æ—Ä–æ—à–æ –∏ –ª—É—á—à–µ",
    satisfactoryAndWorse: "—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ –∏ —Ö—É–∂–µ",
    ecologicalAspects: "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã",
    // Analysis terms
    customersWithAverage: "–ö–ª–∏–µ–Ω—Ç—ã —Å–æ —Å—Ä–µ–¥–Ω–µ–π –æ—Ü–µ–Ω–∫–æ–π",
    numberOfCustomers: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å",
    haveRated: "–æ—Ü–µ–Ω–∏–ª–∏",
    rated: "–æ—Ü–µ–Ω–∏–ª",
    averageGrade: "—Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞",
    ecoAverageGrade: "—ç–∫–æ —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞",
    analysis: "–ê–Ω–∞–ª–∏–∑",
    // Overall analysis
    overallAnalysisTitle: "üìä –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –æ–ø—Ä–æ—Å–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤",
    majorityOfCustomers: "–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤",
    ratedGoodOrBetter: "–æ—Ü–µ–Ω–∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏—é —Ö–æ—Ä–æ—à–æ –∏–ª–∏ –ª—É—á—à–µ",
    onlyPercentage: "–¢–æ–ª—å–∫–æ",
    gaveSatisfactoryOrWorse: "–∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–∞–ª–∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–ª–∏ —Ö—É–¥—à–∏–µ –æ—Ü–µ–Ω–∫–∏",
    ecoAspectsRated: "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã –±—ã–ª–∏ –æ—Ü–µ–Ω–µ–Ω—ã –Ω–∞",
    correspondTo: "–æ—Ü–µ–Ω–µ–Ω—ã - —ç—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç",
    recommendation: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:",
    improveEcoAspects: "–£–ª—É—á—à–µ–Ω–∏–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –º–æ–∂–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å –æ–±—â—É—é —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
    ecoAspectsAlreadyGood: "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã —É–∂–µ —Ö–æ—Ä–æ—à–æ –æ—Ü–µ–Ω–µ–Ω—ã",
    interpretation: "–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:",
    calculation: "–†–∞—Å—á–µ—Ç:",
    calculationExplanation: "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞:",
    totalCustomers: "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤:",
    sumOfRatings: "–°—É–º–º–∞ —ç–∫–æ-–æ—Ü–µ–Ω–æ–∫:",
    allCustomersEcoRatings: "–≠–∫–æ-–æ—Ü–µ–Ω–∫–∏ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:",
    result: "–†–µ–∑—É–ª—å—Ç–∞—Ç:",
    noCustomers: "–ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤",
    // Period translations
    firstHalf: "1-–µ –ø–æ–ª—É–≥.",
    secondHalf: "2-–µ –ø–æ–ª—É–≥.",
    // Solution answer texts
    hadHighestMarketShare: "–∏–º–µ–ª–∞ —Å–∞–º—É—é –≤—ã—Å–æ–∫—É—é –¥–æ–ª—é —Ä—ã–Ω–∫–∞",
    formula: "–§–æ—Ä–º—É–ª–∞:",
    example: "–ü—Ä–∏–º–µ—Ä –¥–ª—è",
    meaning: "–ó–Ω–∞—á–µ–Ω–∏–µ:",
    strongestMarketPosition: "–≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∞–º—É—é —Å–∏–ª—å–Ω—É—é —Ä—ã–Ω–æ—á–Ω—É—é –ø–æ–∑–∏—Ü–∏—é Sirius AG –∑–∞ –≤–µ—Å—å —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º—ã–π –ø–µ—Ä–∏–æ–¥.",
    showsStrongestPosition: "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∞–º—É—é —Å–∏–ª—å–Ω—É—é —Ä—ã–Ω–æ—á–Ω—É—é –ø–æ–∑–∏—Ü–∏—é",
    largestPercentageIncrease: "–°–∞–º—ã–π –±–æ–ª—å—à–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π —Ä–æ—Å—Ç –ø—Ä–æ–∏–∑–æ—à–µ–ª —Å",
    withIncrease: "—Å —Ä–æ—Å—Ç–æ–º",
    notAvailable: "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ.",
    to: "–¥–æ",
    exercise1: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1",
    exercise2: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2",
    marketAnalysis: "–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞",
    customerSatisfaction: "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤",
    statistics: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    averageValues: "–°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è",
    industryRevenueMio: "–û—Ç—Ä–∞—Å–ª—å (‚Ç¨ –º–ª–Ω)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ –º–ª–Ω)",
    marketSharePercent: "–î–æ–ª—è —Ä—ã–Ω–∫–∞ (%)",
    increasePercent: "–†–æ—Å—Ç (%)",
    stepByStepAnalysis: "–ü–æ–ª–Ω—ã–π –ø–æ—à–∞–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑",
    methodicalApproach: "–ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥:",
    importantInsights: "–í–∞–∂–Ω—ã–µ –≤—ã–≤–æ–¥—ã:",
    highestMarketShare: "–°–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –¥–æ–ª—è —Ä—ã–Ω–∫–∞:",
    calculateIncreaseRates: "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–µ–º–ø—ã —Ä–æ—Å—Ç–∞:",
    percentageChanges: "–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ–∂–¥—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏",
    meaningLargestGrowth: "–≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–∏–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π —Å–∫–∞—á–æ–∫ —Ä–æ—Å—Ç–∞ –¥–æ–ª–∏ —Ä—ã–Ω–∫–∞ Sirius AG.",
    strongestIncrease: "–°–∞–º—ã–π —Å–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç:",
    trendAnalysis: "–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–∞:",
    continuousGrowth: "–ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π —Ä–æ—Å—Ç –¥–æ–ª–∏ —Ä—ã–Ω–∫–∞ –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞",
    businessRelevance: "–î–µ–ª–æ–≤–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å:",
    positiveMarketDevelopment: "–ü–æ–∑–∏—Ç–∏–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ä—ã–Ω–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏—è",
    taskDescription: "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
    ratingLegend: "–õ–µ–≥–µ–Ω–¥–∞ –æ—Ü–µ–Ω–æ–∫",
    customer: "–ö–ª–∏–µ–Ω—Ç",
    function: "–§—É–Ω–∫—Ü–∏—è",
    performance: "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
    eco: "–≠–∫–æ",
    price: "–¶–µ–Ω–∞",
    average: "–°—Ä–µ–¥–Ω–µ–µ",
    summary: "–†–µ–∑—é–º–µ",
    surveyResults: "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤:",
    goodAndBetterShort: "–•–æ—Ä–æ—à–æ –∏ –ª—É—á—à–µ",
    satisfactoryAndWorseShort: "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ –∏ —Ö—É–∂–µ",
    ecoAverage: "–≠–∫–æ —Å—Ä–µ–¥–Ω–µ–µ",
    showsDynamicDevelopment: "—Ä–æ—Å—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∞–º–æ–µ –¥–∏–Ω–∞–º–∏—á–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ",
    with: "—Å",
    gradeVeryGood: "–æ—Ç–ª–∏—á–Ω–æ",
    gradeGood: "—Ö–æ—Ä–æ—à–æ",
    gradeSatisfactory: "—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ",
    gradeAdequate: "–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ",
    gradeDeficient: "–Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ",
    gradeInsufficient: "–ø–ª–æ—Ö–æ",
    gradeUnknown: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
    gradeLabelVeryGood: "–û—Ç–ª–∏—á–Ω–æ",
    gradeLabelGood: "–•–æ—Ä–æ—à–æ",
    gradeLabelSatisfactory: "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ",
    gradeLabelAdequate: "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ",
    gradeLabelDeficient: "–ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ",
    gradeLabelInsufficient: "–ü–ª–æ—Ö–æ",
    percentageIncreaseFormula: "–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π —Ä–æ—Å—Ç = (–Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ) / —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ √ó 100",
    absoluteIncrease: "–ê–±—Å–æ–ª—é—Ç–Ω—ã–π —Ä–æ—Å—Ç:",
    percentagePoints: "–ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞",
    dataCollection: "–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö:",
    collectRevenueData: "–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ –≤—ã—Ä—É—á–∫–µ –¥–ª—è –æ—Ç—Ä–∞—Å–ª–∏ –∏ Sirius AG –∑–∞ 6 –ø–æ–ª—É–≥–æ–¥–∏–π",
    calculateMarketShare: "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ–ª—é —Ä—ã–Ω–∫–∞:",
    applyFormula: "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã: (Sirius AG / –û—Ç—Ä–∞—Å–ª—å) √ó 100 –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—É–≥–æ–¥–∏—è",
    identifyMaximum: "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–∞–∫—Å–∏–º—É–º:",
    compareAllShares: "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–ª–µ–π —Ä—ã–Ω–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–∏–≤—ã—Å—à–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è",
    basicFormulaText: "–î–æ–ª—è —Ä—ã–Ω–∫–∞ = (–í—ã—Ä—É—á–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ / –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ –æ—Ç—Ä–∞—Å–ª–∏) √ó 100",
    percentageCalculation: "–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã",
    trendCalculation: "–†–∞—Å—á–µ—Ç —Ç—Ä–µ–Ω–¥–∞",
    // Table and calculation terms
    siriusRevenue: "–í—ã—Ä—É—á–∫–∞ Sirius AG",
    industryRevenue: "–í—ã—Ä—É—á–∫–∞ –æ—Ç—Ä–∞—Å–ª–∏",
    marketShareTerm: "–î–æ–ª—è —Ä—ã–Ω–∫–∞",
    dataType: "–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö",
    // Step by step explanations
    collectBaseData: "–°–æ–±—Ä–∞—Ç—å –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ",
    calculateIncrease: "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–æ—Å—Ç",
    percentageIncreaseFormula2: "–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π —Ä–æ—Å—Ç = (–ù–æ–≤–∞—è –¥–æ–ª—è —Ä—ã–Ω–∫–∞ - –°—Ç–∞—Ä–∞—è –¥–æ–ª—è —Ä—ã–Ω–∫–∞) / –°—Ç–∞—Ä–∞—è –¥–æ–ª—è —Ä—ã–Ω–∫–∞ √ó 100",
    marketShareFormulaSpecific: "–î–æ–ª—è —Ä—ã–Ω–∫–∞ = (–í—ã—Ä—É—á–∫–∞ Sirius AG / –í—ã—Ä—É—á–∫–∞ –æ—Ç—Ä–∞—Å–ª–∏) √ó 100",
    stepByStepExplanation: "–ü–æ—à–∞–≥–æ–≤–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ:",
    step1: "–°–æ–±—Ä–∞—Ç—å –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:",
    step1Description: "–í—ã—Ä—É—á–∫–∞ –æ—Ç—Ä–∞—Å–ª–∏ –∏ –≤—ã—Ä—É—á–∫–∞ Sirius AG –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—É–≥–æ–¥–∏—è",
    step2: "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ–ª—é —Ä—ã–Ω–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥:",
    step2Description: "(Sirius AG / –û—Ç—Ä–∞—Å–ª—å) √ó 100",
    step3: "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π —Ä–æ—Å—Ç:",
    step3Description: "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –ø–µ—Ä–∏–æ–¥–æ–º",
    step4: "–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:",
    step4Description: "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ"
  },
  pl: {
    title: "ƒÜwiczenia Analizy Biznesowej",
    availableExercises: "Dostƒôpne ƒÜwiczenia",
    exercise1Title: "Analiza Udzia≈Çu w Rynku Sirius AG",
    exercise1Desc: "Obliczanie udzia≈Çu w rynku i analiza trend√≥w dla niemieckiej firmy przez kilka p√≥≈Çroczy.",
    exercise2Title: "Ocena Ankiety Klient√≥w",
    exercise2Desc: "Ocena ocen klient√≥w przy u≈ºyciu szkolnego systemu oceniania z analizƒÖ statystycznƒÖ.",
    startExercise: "Rozpocznij ƒÜwiczenie",
    backToMenu: "Powr√≥t do Menu",
    showTask: "Poka≈º Zadanie",
    hideTask: "Ukryj Zadanie",
    showData: "Poka≈º Dane",
    hideData: "Ukryj Dane",
    showTable: "Poka≈º Tabelƒô",
    showSolution: "Poka≈º RozwiƒÖzanie",
    selectExercise: "Wybierz ƒáwiczenie, aby rozpoczƒÖƒá",
    theme: "Motyw",
    language: "Jƒôzyk",
    light: "Jasny",
    dark: "Ciemny",
    system: "Systemowy",
    // Sirius Exercise
    taskStatement: "Opis Zadania",
    siriusTask: "Pracujesz w Sirius AG i musisz przeprowadziƒá analizƒô udzia≈Çu w rynku za ostatnie trzy lata.",
    dataAvailable: "Dostƒôpne sƒÖ nastƒôpujƒÖce dane sprzeda≈ºowe:",
    period: "P√≥≈Çrocze",
    industry: "Bran≈ºa (‚Ç¨ mln)",
    sirius: "Sirius AG (‚Ç¨ mln)",
    taskA: "W kt√≥rym p√≥≈Çroczu Sirius AG mia≈Ç najwy≈ºszy udzia≈Ç w rynku?",
    taskB: "W kt√≥rym p√≥≈Çroczu Sirius AG mia≈Ç najwy≈ºszy procentowy wzrost udzia≈Çu w rynku?",
    taskLabelA: "Zadanie a)",
    taskLabelB: "Zadanie b)",
    marketData: "Dane Rynkowe",
    calculatedShares: "Obliczone Udzia≈Çy w Rynku",
    calculationBasis: "Podstawa Oblicze≈Ñ",
    basicFormula: "Podstawowa Formu≈Ça:",
    exampleCalc: "Przyk≈Çad obliczenia dla 1. p√≥≈Çr. 01:",
    marketShareFormula: "Udzia≈Ç w Rynku = (Przychody Firmy / Ca≈Çkowite Przychody Bran≈ºy) √ó 100",
    solutionA: "Poka≈º rozwiƒÖzanie a)",
    solutionB: "Poka≈º rozwiƒÖzanie b)",
    solutionAHide: "Ukryj rozwiƒÖzanie a)",
    solutionBHide: "Ukryj rozwiƒÖzanie b)",
    solutionATitle: "RozwiƒÖzanie a) Najwy≈ºszy Udzia≈Ç w Rynku",
    solutionBTitle: "RozwiƒÖzanie b) Najwy≈ºszy Wzrost Procentowy",
    showCalculatedShares: "Poka≈º obliczone udzia≈Çy w rynku",
    hideCalculatedShares: "Ukryj obliczone udzia≈Çy w rynku",
    showCompleteAnalysis: "Poka≈º pe≈ÇnƒÖ analizƒô",
    hideCompleteAnalysis: "Ukryj pe≈ÇnƒÖ analizƒô",
    showTableCustomer: "Poka≈º tabelƒô",
    showSolutionCustomer: "Poka≈º rozwiƒÖzanie",
    showOverallAnalysis: "üìä Poka≈º og√≥lnƒÖ analizƒô",
    // Customer Exercise
    customerSurvey: "Ankieta Klient√≥w",
    surveyDescription: "Przeprowadzono ankietƒô w celu poprawy zadowolenia klient√≥w. Nale≈ºy oceniƒá odpowiedzi dziesiƒôciu najwa≈ºniejszych klient√≥w wed≈Çug nastƒôpujƒÖcych kryteri√≥w.",
    gradeSystem: "Ocenianie przy u≈ºyciu systemu szkolnego (1 = bardzo dobry, 6 = niedostateczny).",
    tasks: "Zadania:",
    taskCustomerA: "Jaki procent oceni≈Ç dobrze lub lepiej ≈õrednio z czterech indywidualnych ocen?",
    taskCustomerB: "Jaki procent oceni≈Ç dostatecznie lub gorzej ≈õrednio z czterech indywidualnych ocen?",
    taskCustomerC: "JakƒÖ ≈õredniƒÖ ocenƒô przyznano za uwzglƒôdnienie aspekt√≥w ekologicznych w produktach?",
    // Solution labels
    solutionALabel: "RozwiƒÖzanie a) Dobrze i lepiej",
    solutionBLabel: "RozwiƒÖzanie b) Dostatecznie i gorzej",
    solutionCLabel: "RozwiƒÖzanie c) Aspekty ekologiczne",
    // Rating categories
    goodAndBetter: "dobrze i lepiej",
    satisfactoryAndWorse: "dostatecznie i gorzej",
    ecologicalAspects: "Aspekty ekologiczne",
    // Analysis terms
    customersWithAverage: "Klienci ze ≈õredniƒÖ ocenƒÖ",
    numberOfCustomers: "Liczba klient√≥w z",
    haveRated: "ocenili",
    rated: "oceni≈Ç",
    averageGrade: "≈õrednia ocena",
    ecoAverageGrade: "eko ≈õrednia ocena",
    analysis: "Analiza",
    // Overall analysis
    overallAnalysisTitle: "üìä Og√≥lna analiza ankiety klient√≥w",
    majorityOfCustomers: "Wiƒôkszo≈õƒá klient√≥w",
    ratedGoodOrBetter: "oceni≈Ça firmƒô dobrze lub lepiej",
    onlyPercentage: "Tylko",
    gaveSatisfactoryOrWorse: "klient√≥w da≈Ço oceny dostateczne lub gorsze",
    ecoAspectsRated: "Aspekty ekologiczne zosta≈Çy ocenione na",
    correspondTo: "oceniono - odpowiada to",
    recommendation: "Zalecenie:",
    improveEcoAspects: "Poprawa aspekt√≥w ekologicznych mo≈ºe zwiƒôkszyƒá og√≥lne zadowolenie",
    ecoAspectsAlreadyGood: "Aspekty ekologiczne sƒÖ ju≈º dobrze ocenione",
    interpretation: "Interpretacja:",
    calculation: "Obliczenie:",
    calculationExplanation: "Wyja≈õnienie oblicze≈Ñ:",
    totalCustomers: "≈ÅƒÖczna liczba klient√≥w:",
    sumOfRatings: "Suma ocen eko:",
    allCustomersEcoRatings: "Oceny eko wszystkich klient√≥w:",
    result: "Wynik:",
    noCustomers: "Brak klient√≥w",
    // Period translations
    firstHalf: "1. p√≥≈Çr.",
    secondHalf: "2. p√≥≈Çr.",
    // Solution answer texts
    hadHighestMarketShare: "mia≈Ç najwy≈ºszy udzia≈Ç w rynku",
    formula: "Formu≈Ça:",
    example: "Przyk≈Çad dla",
    meaning: "Znaczenie:",
    strongestMarketPosition: "To pokazuje najsilniejszƒÖ pozycjƒô rynkowƒÖ Sirius AG w ca≈Çym okresie rozwa≈ºanym.",
    showsStrongestPosition: "pokazuje najsilniejszƒÖ pozycjƒô rynkowƒÖ",
    largestPercentageIncrease: "Najwiƒôkszy wzrost procentowy nastƒÖpi≈Ç z",
    withIncrease: "ze wzrostem",
    notAvailable: "Niedostƒôpne.",
    to: "do",
    exercise1: "ƒÜwiczenie 1",
    exercise2: "ƒÜwiczenie 2",
    marketAnalysis: "Analiza rynku",
    customerSatisfaction: "Zadowolenie klient√≥w",
    statistics: "Statystyki",
    averageValues: "Warto≈õci ≈õrednie",
    industryRevenueMio: "Bran≈ºa (‚Ç¨ mln)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ mln)",
    marketSharePercent: "Udzia≈Ç w rynku (%)",
    increasePercent: "Wzrost (%)",
    stepByStepAnalysis: "Pe≈Çna analiza krok po kroku",
    methodicalApproach: "Podej≈õcie metodyczne:",
    importantInsights: "Wa≈ºne spostrze≈ºenia:",
    highestMarketShare: "Najwy≈ºszy udzia≈Ç w rynku:",
    calculateIncreaseRates: "Oblicz tempo wzrostu:",
    percentageChanges: "Zmiany procentowe miƒôdzy kolejnymi okresami",
    meaningLargestGrowth: "To pokazuje najwiƒôkszy wzglƒôdny skok wzrostu udzia≈Çu w rynku Sirius AG.",
    strongestIncrease: "Najsilniejszy wzrost:",
    trendAnalysis: "Analiza trendu:",
    continuousGrowth: "CiƒÖg≈Çy wzrost udzia≈Çu w rynku mo≈ºna zauwa≈ºyƒá w okresie rozwa≈ºanym",
    businessRelevance: "Znaczenie biznesowe:",
    positiveMarketDevelopment: "Pozytywny rozw√≥j rynku wspiera strategiczne decyzje biznesowe",
    taskDescription: "Opis zadania",
    ratingLegend: "Legenda ocen",
    customer: "Klient",
    function: "Funkcja",
    performance: "Wydajno≈õƒá",
    eco: "Eko",
    price: "Cena",
    average: "≈örednia",
    summary: "Podsumowanie",
    surveyResults: "Wyniki ankiety klient√≥w:",
    goodAndBetterShort: "Dobrze i lepiej",
    satisfactoryAndWorseShort: "Dostatecznie i gorzej",
    ecoAverage: "Eko ≈õrednia",
    showsDynamicDevelopment: "wzrost - pokazuje najbardziej dynamiczny rozw√≥j",
    with: "z",
    gradeVeryGood: "bardzo dobry",
    gradeGood: "dobry",
    gradeSatisfactory: "zadowalajƒÖcy",
    gradeAdequate: "dostateczny",
    gradeDeficient: "niedostateczny",
    gradeInsufficient: "niewystarczajƒÖcy",
    gradeUnknown: "Nieznany",
    gradeLabelVeryGood: "Bardzo dobry",
    gradeLabelGood: "Dobry",
    gradeLabelSatisfactory: "ZadowalajƒÖcy",
    gradeLabelAdequate: "Dostateczny",
    gradeLabelDeficient: "Niedostateczny",
    gradeLabelInsufficient: "NiewystarczajƒÖcy",
    percentageIncreaseFormula: "Wzrost procentowy = (nowa warto≈õƒá - stara warto≈õƒá) / stara warto≈õƒá √ó 100",
    absoluteIncrease: "Wzrost bezwzglƒôdny:",
    percentagePoints: "punkty procentowe",
    dataCollection: "Zbieranie danych:",
    collectRevenueData: "Zbieranie danych o przychodach dla bran≈ºy i Sirius AG przez 6 p√≥≈Çroczy",
    calculateMarketShare: "Oblicz udzia≈Ç w rynku:",
    applyFormula: "Zastosowanie formu≈Çy: (Sirius AG / Bran≈ºa) √ó 100 dla ka≈ºdego p√≥≈Çrocza",
    identifyMaximum: "Zidentyfikuj maksimum:",
    compareAllShares: "Por√≥wnanie wszystkich udzia≈Ç√≥w w rynku w celu okre≈õlenia najwy≈ºszej warto≈õci",
    basicFormulaText: "Udzia≈Ç w rynku = (Przychody firmy / Ca≈Çkowite przychody bran≈ºy) √ó 100",
    percentageCalculation: "Obliczenia procentowe",
    trendCalculation: "Obliczenie trendu",
    // Table and calculation terms
    siriusRevenue: "Przychody Sirius AG",
    industryRevenue: "Przychody bran≈ºy",
    marketShareTerm: "Udzia≈Ç w rynku",
    dataType: "Typ danych",
    // Step by step explanations
    collectBaseData: "Zbierz dane podstawowe",
    calculateIncrease: "Oblicz wzrost",
    percentageIncreaseFormula2: "Wzrost procentowy = (Nowy udzia≈Ç w rynku - Stary udzia≈Ç w rynku) / Stary udzia≈Ç w rynku √ó 100",
    marketShareFormulaSpecific: "Udzia≈Ç w rynku = (Przychody Sirius AG / Przychody bran≈ºy) √ó 100",
    stepByStepExplanation: "Wyja≈õnienie krok po kroku:",
    step1: "Zbierz dane podstawowe:",
    step1Description: "Przychody bran≈ºy i przychody Sirius AG dla ka≈ºdego p√≥≈Çrocza",
    step2: "Oblicz udzia≈Ç w rynku na okres:",
    step2Description: "(Sirius AG / Bran≈ºa) √ó 100",
    step3: "Okre≈õl wzrost procentowy:",
    step3Description: "Por√≥wnanie z poprzednim okresem",
    step4: "Interpretuj wyniki:",
    step4Description: "Zidentyfikuj trendy i rozw√≥j"
  },
  at: {
    title: "Business Analytics √úbungen",
    availableExercises: "Verf√ºgbare √úbungen",
    exercise1Title: "Sirius AG Marktanteil Analyse",
    exercise1Desc: "Marktanteilsberechnung und Trendanalyse f√ºr ein √∂sterreichisches Unternehmen √ºber mehrere Halbjahre.",
    exercise2Title: "Kundenbefragung Auswertung",
    exercise2Desc: "Auswertung von Kundenbewertungen nach √∂sterreichischem Schulnotensystem mit statistischer Analyse.",
    startExercise: "√úbung starten",
    backToMenu: "Zur√ºck zum Men√º",
    showTask: "Aufgabe anzeigen",
    hideTask: "Aufgabe ausblenden",
    showData: "Daten anzeigen",
    hideData: "Daten ausblenden",
    showTable: "Tabelle anzeigen",
    showSolution: "L√∂sung anzeigen",
    selectExercise: "W√§hlen Sie eine √úbung aus, um zu beginnen",
    theme: "Design",
    language: "Sprache",
    light: "Hell",
    dark: "Dunkel",
    system: "System",
    // Sirius Exercise
    taskStatement: "Aufgabenstellung",
    siriusTask: "Sie sind bei der Sirius AG besch√§ftigt und sollen eine Marktanteilsanalyse f√ºr die letzten drei Jahre durchf√ºhren.",
    dataAvailable: "Ihnen liegen folgende Umsatzdaten vor:",
    period: "Halbjahr",
    industry: "Branche (‚Ç¨ Mio)",
    sirius: "Sirius AG (‚Ç¨ Mio)",
    taskA: "In welchem Halbjahr hatte die Sirius AG den h√∂chsten Marktanteil?",
    taskB: "In welchem Halbjahr hatte die Sirius AG die h√∂chste prozentuale Steigerung des Marktanteils?",
    taskLabelA: "Aufgabe a)",
    taskLabelB: "Aufgabe b)",
    marketData: "Marktdaten",
    calculatedShares: "Berechnete Marktanteile",
    calculationBasis: "Berechnungsgrundlage",
    basicFormula: "Grundformel:",
    exampleCalc: "Beispielberechnung f√ºr 1. Halbj. 01:",
    marketShareFormula: "Marktanteil = (Umsatz des Unternehmens / Gesamtumsatz der Branche) √ó 100",
    solutionA: "L√∂sung a) anzeigen",
    solutionB: "L√∂sung b) anzeigen",
    solutionAHide: "L√∂sung a) ausblenden",
    solutionBHide: "L√∂sung b) ausblenden",
    solutionATitle: "L√∂sung a) H√∂chster Marktanteil",
    solutionBTitle: "L√∂sung b) H√∂chste prozentuale Steigerung",
    showCalculatedShares: "Berechnete Marktanteile anzeigen",
    hideCalculatedShares: "Berechnete Marktanteile ausblenden",
    showCompleteAnalysis: "Vollst√§ndige Analyse anzeigen",
    hideCompleteAnalysis: "Vollst√§ndige Analyse ausblenden",
    showTableCustomer: "Tabelle anzeigen",
    showSolutionCustomer: "L√∂sung anzeigen",
    showOverallAnalysis: "üìä Gesamtanalyse anzeigen",
    // Customer Exercise
    customerSurvey: "Kundenbefragung",
    surveyDescription: "Zur Verbesserung der Kundenzufriedenheit wurde eine Kundenbefragung durchgef√ºhrt. Sie sollen die Antworten der zehn wichtigsten Kunden nach folgenden Kriterien auswerten und ermitteln.",
    gradeSystem: "Bewertung hier in Schulnoten (1 = sehr gut, 6 = ungen√ºgend).",
    tasks: "Aufgaben:",
    taskCustomerA: "Wie viel Prozent haben im Durchschnitt der vier Einzelbewertungen gut und besser bewertet?",
    taskCustomerB: "Wie viel Prozent haben im Durchschnitt der vier Einzelbewertungen ausreichend und schlechter bewertet?",
    taskCustomerC: "Welche Durchschnittsnote f√ºr die Ber√ºcksichtigung √∂kologischer Aspekte (√ñko) wurde in den Produkten vergeben?",
    // Solution labels
    solutionALabel: "L√∂sung a) Gut und besser",
    solutionBLabel: "L√∂sung b) Ausreichend und schlechter",
    solutionCLabel: "L√∂sung c) √ñkologische Aspekte",
    // Rating categories
    goodAndBetter: "gut und besser",
    satisfactoryAndWorse: "ausreichend und schlechter",
    ecologicalAspects: "√ñkologische Aspekte",
    // Analysis terms
    customersWithAverage: "Kunden mit Durchschnittsnote",
    numberOfCustomers: "Anzahl Kunden mit",
    haveRated: "haben",
    rated: "bewertet",
    averageGrade: "Durchschnittsnote",
    ecoAverageGrade: "√ñko-Durchschnittsnote",
    analysis: "Auswertung",
    // Overall analysis
    overallAnalysisTitle: "üìä Gesamtanalyse der Kundenbefragung",
    majorityOfCustomers: "Die Mehrheit der Kunden",
    ratedGoodOrBetter: "bewertete das Unternehmen gut oder besser",
    onlyPercentage: "Nur",
    gaveSatisfactoryOrWorse: "der Kunden gaben ausreichende oder schlechtere Bewertungen",
    ecoAspectsRated: "Die √∂kologischen Aspekte wurden mit",
    correspondTo: "bewertet - das entspricht",
    recommendation: "Empfehlung:",
    improveEcoAspects: "Verbesserung der √∂kologischen Aspekte k√∂nnte die Gesamtzufriedenheit steigern",
    ecoAspectsAlreadyGood: "√ñkologische Aspekte sind bereits gut bewertet",
    interpretation: "Interpretation:",
    calculation: "Berechnung:",
    calculationExplanation: "Erkl√§rung der Berechnung:",
    totalCustomers: "Gesamtanzahl Kunden:",
    sumOfRatings: "Summe der √ñko-Bewertungen:",
    allCustomersEcoRatings: "√ñko-Bewertungen aller Kunden:",
    result: "Ergebnis:",
    noCustomers: "Keine Kunden",
    // Period translations
    firstHalf: "1. Halbj.",
    secondHalf: "2. Halbj.",
    // Solution answer texts
    hadHighestMarketShare: "hatte den h√∂chsten Marktanteil mit",
    formula: "Formel:",
    example: "Beispiel f√ºr",
    meaning: "Bedeutung:",
    strongestMarketPosition: "Dies zeigt die st√§rkste Marktposition der Sirius AG im gesamten Betrachtungszeitraum.",
    showsStrongestPosition: "zeigt die st√§rkste Marktposition",
    largestPercentageIncrease: "Die gr√∂√üte prozentuale Steigerung erfolgte von",
    withIncrease: "mit einer Steigerung von",
    notAvailable: "Nicht verf√ºgbar.",
    to: "zu",
    exercise1: "√úbung 1",
    exercise2: "√úbung 2",
    marketAnalysis: "Marktanalyse",
    customerSatisfaction: "Kundenzufriedenheit",
    statistics: "Statistik",
    averageValues: "Durchschnittswerte",
    industryRevenueMio: "Branche (‚Ç¨ Mio)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ Mio)",
    marketSharePercent: "Marktanteil (%)",
    increasePercent: "Anstieg (%)",
    stepByStepAnalysis: "Vollst√§ndige Schritt-f√ºr-Schritt-Analyse",
    methodicalApproach: "Methodisches Vorgehen:",
    importantInsights: "Wichtige Erkenntnisse:",
    highestMarketShare: "H√∂chster Marktanteil:",
    calculateIncreaseRates: "Steigerungsraten berechnen:",
    percentageChanges: "Prozentuale Ver√§nderungen zwischen aufeinanderfolgenden Perioden",
    meaningLargestGrowth: "Dies zeigt den gr√∂√üten relativen Wachstumsschub der Sirius AG im Marktanteil.",
    strongestIncrease: "St√§rkste Steigerung:",
    trendAnalysis: "Trend-Analyse:",
    continuousGrowth: "Kontinuierliches Wachstum des Marktanteils √ºber den Betrachtungszeitraum erkennbar",
    businessRelevance: "Gesch√§ftsrelevanz:",
    positiveMarketDevelopment: "Positive Marktentwicklung unterst√ºtzt strategische Gesch√§ftsentscheidungen",
    taskDescription: "Aufgabenstellung",
    ratingLegend: "Bewertungslegende",
    customer: "Kunde",
    function: "Funktion",
    performance: "Leistung",
    eco: "√ñko",
    price: "Preis",
    average: "Durchschnitt",
    summary: "Zusammenfassung",
    surveyResults: "Ergebnisse der Kundenbefragung:",
    goodAndBetterShort: "Gut und besser",
    satisfactoryAndWorseShort: "Ausreichend und schlechter",
    ecoAverage: "√ñko-Durchschnitt",
    showsDynamicDevelopment: "Wachstum - zeigt dynamischste Entwicklung",
    with: "mit",
    gradeVeryGood: "sehr gut",
    gradeGood: "gut",
    gradeSatisfactory: "befriedigend",
    gradeAdequate: "ausreichend",
    gradeDeficient: "mangelhaft",
    gradeInsufficient: "ungen√ºgend",
    gradeUnknown: "Unbekannt",
    gradeLabelVeryGood: "Sehr gut",
    gradeLabelGood: "Gut",
    gradeLabelSatisfactory: "Befriedigend",
    gradeLabelAdequate: "Ausreichend",
    gradeLabelDeficient: "Mangelhaft",
    gradeLabelInsufficient: "Ungen√ºgend",
    percentageIncreaseFormula: "Prozentuale Steigerung = (neuer Wert - alter Wert) / alter Wert √ó 100",
    absoluteIncrease: "Absolute Steigerung:",
    percentagePoints: "Prozentpunkte",
    dataCollection: "Datenaufnahme:",
    collectRevenueData: "Sammlung der Umsatzdaten f√ºr Branche und Sirius AG √ºber 6 Halbjahre",
    calculateMarketShare: "Marktanteil berechnen:",
    applyFormula: "Anwendung der Formel: (Sirius AG / Branche) √ó 100 f√ºr jedes Halbjahr",
    identifyMaximum: "Maximum identifizieren:",
    compareAllShares: "Vergleich aller Marktanteile zur Bestimmung des h√∂chsten Wertes",
    basicFormulaText: "Marktanteil = (Umsatz des Unternehmens / Gesamtumsatz der Branche) √ó 100",
    percentageCalculation: "Prozentrechnung",
    trendCalculation: "Trendberechnung",
    // Table and calculation terms
    siriusRevenue: "Sirius AG Umsatz",
    industryRevenue: "Branchenumsatz",
    marketShareTerm: "Marktanteil",
    dataType: "Datentyp",
    // Step by step explanations
    collectBaseData: "Ausgangsdaten sammeln",
    calculateIncrease: "Anstieg berechnen",
    percentageIncreaseFormula2: "Prozentuale Steigerung = (Neuer Marktanteil - Alter Marktanteil) / Alter Marktanteil √ó 100",
    marketShareFormulaSpecific: "Marktanteil = (Sirius AG Umsatz / Branchenumsatz) √ó 100",
    stepByStepExplanation: "Schritt-f√ºr-Schritt Erkl√§rung:",
    step1: "Ausgangsdaten sammeln:",
    step1Description: "Branchenumsatz und Sirius AG Umsatz f√ºr jedes Halbjahr",
    step2: "Marktanteil pro Periode berechnen:",
    step2Description: "(Sirius AG / Branche) √ó 100",
    step3: "Prozentuale Steigerung ermitteln:",
    step3Description: "Vergleich mit der Vorperiode",
    step4: "Ergebnisse interpretieren:",
    step4Description: "Trends und Entwicklungen identifizieren"
  },
  ch: {
    title: "Business Analytics √úbige",
    availableExercises: "Verf√ºgbari √úbige",
    exercise1Title: "Sirius AG Marktaateil Analyse",
    exercise1Desc: "Marktaateilsberechnig und Trendanalyse f√ºr es schwiizerischs Undern√§hm√§ √ºber mehreri Halbjahr.",
    exercise2Title: "Chundebefr√§gig Usw√§rtig",
    exercise2Desc: "Usw√§rtig vo Chundebew√§rtige nach schwiizerisch√§m Schuelnootesystem mit statistisch√§ Analyse.",
    startExercise: "√úbig start√§",
    backToMenu: "Zrugg zum Men√º",
    showTask: "Ufgab az√§ig√§",
    hideTask: "Ufgab usbl√§nde",
    showData: "Dat√§ az√§ig√§",
    hideData: "Dat√§ usbl√§nde",
    showTable: "Tabell√§ az√§ig√§",
    showSolution: "L√∂sig az√§ig√§",
    selectExercise: "W√§hled Sie en √úbig us, um z'biginn√§",
    theme: "Design",
    language: "Sprach",
    light: "Hell",
    dark: "Dunkel",
    system: "System",
    // Sirius Exercise
    taskStatement: "Ufgabstellig",
    siriusTask: "Sie sind bi de Sirius AG besch√§ftiget und s√∂nd en Marktaateilsanalyse f√∂r die letzte dr√º Jahr duref√ºer√§.",
    dataAvailable: "Ihn√§ ligged folgendi Umsatzdat√§ vor:",
    period: "Halbjahr",
    industry: "Branch√§ (‚Ç¨ Mio)",
    sirius: "Sirius AG (‚Ç¨ Mio)",
    taskA: "I welch√§m Halbjahr h√§t d'Sirius AG d√§ h√∂chscht Marktaateil ghaa?",
    taskB: "I welch√§m Halbjahr h√§t d'Sirius AG di h√∂chschti proz√§ntuali Steigerig vom Marktaateil ghaa?",
    taskLabelA: "Ufgab a)",
    taskLabelB: "Ufgab b)",
    marketData: "Marktdat√§",
    calculatedShares: "Ber√§chneti Marktaateile",
    calculationBasis: "Ber√§chnigsgrundlag",
    basicFormula: "Grundformle:",
    exampleCalc: "Biispielber√§chnig f√∂r 1. Halbj. 01:",
    marketShareFormula: "Marktaateil = (Umsatz vom Undern√§hm√§ / Gsamtumsatz vo de Branch√§) √ó 100",
    solutionA: "L√∂sig a) az√§ig√§",
    solutionB: "L√∂sig b) az√§ig√§",
    solutionAHide: "L√∂sig a) usbl√§nde",
    solutionBHide: "L√∂sig b) usbl√§nde",
    solutionATitle: "L√∂sig a) H√∂chschte Marktaateil",
    solutionBTitle: "L√∂sig b) H√∂chschti proz√§ntuali Steigerig",
    showCalculatedShares: "Ber√§chneti Marktaateile az√§ig√§",
    hideCalculatedShares: "Ber√§chneti Marktaateile usbl√§nde",
    showCompleteAnalysis: "Vollst√§ndigi Analyse az√§ig√§",
    hideCompleteAnalysis: "Vollst√§ndigi Analyse usbl√§nde",
    showTableCustomer: "Tabell√§ az√§ig√§",
    showSolutionCustomer: "L√∂sig az√§ig√§",
    showOverallAnalysis: "üìä Gsamtanalyse az√§ig√§",
    // Customer Exercise
    customerSurvey: "Chundebefr√§gig",
    surveyDescription: "Zur Verbessrig vo de Chundezuefrid√§heit isch en Chundebefr√§gig duregf√ºert word√§. Sie s√∂nd d'Antworte vo de z√§h wichtigschte Chunde nach folgende Kriterie usw√§rt√§ und ermittl√§.",
    gradeSystem: "Bew√§rtig hie i Schuelnoot√§ (1 = sehr guet, 6 = ungn√ºgend).",
    tasks: "Ufgab√§:",
    taskCustomerA: "Wie viel Proz√§nt h√§nd im Durchschnitt vo de vier Einzelbew√§rtig√§ guet und besser bew√§rt√§t?",
    taskCustomerB: "Wie viel Proz√§nt h√§nd im Durchschnitt vo de vier Einzelbew√§rtig√§ usriichend und schlechter bew√§rt√§t?",
    taskCustomerC: "Welchi Durchschnittsnoot f√∂r d'Ber√ºcksichtigig vo √∂kologisch√§ Aspekt (√ñko) isch i de Produkt verg√§√§ word√§?",
    // Solution labels
    solutionALabel: "L√∂sig a) Guet und besser",
    solutionBLabel: "L√∂sig b) Usriichend und schlechter",
    solutionCLabel: "L√∂sig c) √ñkologischi Aspekt",
    // Rating categories
    goodAndBetter: "guet und besser",
    satisfactoryAndWorse: "usriichend und schlechter",
    ecologicalAspects: "√ñkologischi Aspekt",
    // Analysis terms
    customersWithAverage: "Chunde mit Durchschnittsnoot",
    numberOfCustomers: "Azahl Chunde mit",
    haveRated: "h√§nd",
    rated: "bew√§rt√§t",
    averageGrade: "Durchschnittsnoot",
    ecoAverageGrade: "√ñko-Durchschnittsnoot",
    analysis: "Usw√§rtig",
    // Overall analysis
    overallAnalysisTitle: "üìä Gsamtanalyse vo de Chundebefr√§gig",
    majorityOfCustomers: "Di Mehrheit vo de Chunde",
    ratedGoodOrBetter: "h√§t s'Undern√§hm√§ guet oder besser bew√§rt√§t",
    onlyPercentage: "Nur",
    gaveSatisfactoryOrWorse: "vo de Chunde h√§nd usriichendi oder schlechteri Bew√§rtig√§ g√§√§",
    ecoAspectsRated: "Di √∂kologisch√§ Aspekt sind mit",
    correspondTo: "bew√§rt√§t word√§ - das entspricht",
    recommendation: "Empf√§hlig:",
    improveEcoAspects: "Verbessrig vo de √∂kologisch√§ Aspekt ch√∂nt di gsamti Zuefrid√§heit steiger√§",
    ecoAspectsAlreadyGood: "√ñkologischi Aspekt sind scho guet bew√§rt√§t",
    interpretation: "Interpretati√≥n:",
    calculation: "Ber√§chnig:",
    calculationExplanation: "Erkl√§rig vo de Ber√§chnig:",
    totalCustomers: "Gsamtazahl Chunde:",
    sumOfRatings: "Summ√§ vo de √ñko-Bew√§rtig√§:",
    allCustomersEcoRatings: "√ñko-Bew√§rtig√§ vo alln√§ Chunde:",
    result: "Ergebnis:",
    noCustomers: "Kei Chunde",
    // Period translations
    firstHalf: "1. Halbj.",
    secondHalf: "2. Halbj.",
    // Solution answer texts
    hadHighestMarketShare: "h√§t d√§ h√∂chscht Marktaateil ghaa mit",
    formula: "Formle:",
    example: "Biispiel f√∂r",
    meaning: "Bed√ºtig:",
    strongestMarketPosition: "Das zeigt di st√§rchschti Marktposition vo de Sirius AG im ganze Betrachtingsziitruum.",
    showsStrongestPosition: "zeigt di st√§rchschti Marktposition",
    largestPercentageIncrease: "Di gr√∂ssti proz√§ntuali Steigerig isch vo",
    withIncrease: "mit ere Steigerig vo",
    notAvailable: "N√∂d verf√ºgbar.",
    to: "zu",
    exercise1: "√úbig 1",
    exercise2: "√úbig 2",
    marketAnalysis: "Marktanalyse",
    customerSatisfaction: "Chundezuefrid√§heit",
    statistics: "Statistik",
    averageValues: "Durchschnittsw√§rt",
    industryRevenueMio: "Branch√§ (‚Ç¨ Mio)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ Mio)",
    marketSharePercent: "Marktaateil (%)",
    increasePercent: "Astiig (%)",
    stepByStepAnalysis: "Vollst√§ndigi Schritt-f√∂r-Schritt-Analyse",
    methodicalApproach: "Methodischs Vorgah:",
    importantInsights: "Wichtigi Erkenntniss:",
    highestMarketShare: "H√∂chschte Marktaateil:",
    calculateIncreaseRates: "Steigerigs-Rate ber√§chn√§:",
    percentageChanges: "Proz√§ntuali Ver√§nderig√§ zw√ºsch√§ ufeinanderfolgend√§ Periode",
    meaningLargestGrowth: "Das zeigt d√§ gr√∂ssti relativi Wachstumsschwung vo de Sirius AG im Marktaateil.",
    strongestIncrease: "St√§rchschti Steigerig:",
    trendAnalysis: "Trend-Analyse:",
    continuousGrowth: "Kontinuierlichs Wachstum vom Marktaateil √ºber d√§ Betrachtingsziitruum erkennbar",
    businessRelevance: "Gsch√§ftsrelevanz:",
    positiveMarketDevelopment: "Positivi Marktentwicklig unterst√ºtzt strategischi Gsch√§ftsentscheidig√§",
    taskDescription: "Ufgabstellig",
    ratingLegend: "Bew√§rtigs-Leg√§nde",
    customer: "Chund",
    function: "Funktion",
    performance: "Leistig",
    eco: "√ñko",
    price: "Priis",
    average: "Durchschnitt",
    summary: "Z√§mmefassig",
    surveyResults: "Ergebnis vo de Chundebefr√§gig:",
    goodAndBetterShort: "Guet und besser",
    satisfactoryAndWorseShort: "Usriichend und schlechter",
    ecoAverage: "√ñko-Durchschnitt",
    showsDynamicDevelopment: "Wachstum - zeigt dynamischsti Entwicklig",
    with: "mit",
    gradeVeryGood: "sehr guet",
    gradeGood: "guet",
    gradeSatisfactory: "befriedigend",
    gradeAdequate: "usriichend",
    gradeDeficient: "mangelhaft",
    gradeInsufficient: "ungn√ºgend",
    gradeUnknown: "Unbekannt",
    gradeLabelVeryGood: "Sehr guet",
    gradeLabelGood: "Guet",
    gradeLabelSatisfactory: "Befriedigend",
    gradeLabelAdequate: "Usriichend",
    gradeLabelDeficient: "Mangelhaft",
    gradeLabelInsufficient: "Ungn√ºgend",
    percentageIncreaseFormula: "Proz√§ntuali Steigerig = (neue W√§rt - alte W√§rt) / alte W√§rt √ó 100",
    absoluteIncrease: "Absoluti Steigerig:",
    percentagePoints: "Proz√§ntpunkt",
    dataCollection: "Dat√§ufnahm:",
    collectRevenueData: "Sammlig vo de Umsatzdat√§ f√∂r Branch√§ und Sirius AG √ºber 6 Halbjahr",
    calculateMarketShare: "Marktaateil ber√§chn√§:",
    applyFormula: "Awendig vo de Formle: (Sirius AG / Branch√§) √ó 100 f√∂r jedes Halbjahr",
    identifyMaximum: "Maximum identifizier√§:",
    compareAllShares: "Vergliich vo alln√§ Marktaateile zur Bestimmig vom h√∂chschte W√§rt",
    basicFormulaText: "Marktaateil = (Umsatz vom Undern√§hm√§ / Gsamtumsatz vo de Branch√§) √ó 100",
    percentageCalculation: "Proz√§ntrechni–≥",
    trendCalculation: "Trendber√§chnig",
    // Table and calculation terms
    siriusRevenue: "Sirius AG Umsatz",
    industryRevenue: "Brancheumsatz",
    marketShareTerm: "Marktaateil",
    dataType: "Dat√§typ",
    // Step by step explanations
    collectBaseData: "Usgangsdat√§ samml√§",
    calculateIncrease: "Astiig ber√§chn√§",
    percentageIncreaseFormula2: "Proz√§ntuali Steigerig = (Neue Marktaateil - Alte Marktaateil) / Alte Marktaateil √ó 100",
    marketShareFormulaSpecific: "Marktaateil = (Sirius AG Umsatz / Brancheumsatz) √ó 100",
    stepByStepExplanation: "Schritt-f√∂r-Schritt Erkl√§rig:",
    step1: "Usgangsdat√§ samml√§:",
    step1Description: "Brancheumsatz und Sirius AG Umsatz f√∂r jedes Halbjahr",
    step2: "Marktaateil pro Period ber√§chn√§:",
    step2Description: "(Sirius AG / Branch√§) √ó 100",
    step3: "Proz√§ntuali Steigerig ermittl√§:",
    step3Description: "Vergliich mit de Vorperiod",
    step4: "Ergebnis interpretier√§:",
    step4Description: "Trends und Entwicklig√§ identifizier√§"
  },
  nl: {
    title: "Business Analytics Oefeningen",
    availableExercises: "Beschikbare Oefeningen",
    exercise1Title: "Sirius AG Marktaandeel Analyse",
    exercise1Desc: "Marktaandeel berekening en trendanalyse voor een Duits bedrijf over meerdere halfjaren.",
    exercise2Title: "Klantenonderzoek Evaluatie",
    exercise2Desc: "Evaluatie van klantbeoordelingen met schoolcijfersysteem met statistische analyse.",
    startExercise: "Oefening Starten",
    backToMenu: "Terug naar Menu",
    showTask: "Taak Tonen",
    hideTask: "Taak Verbergen",
    showData: "Gegevens Tonen",
    hideData: "Gegevens Verbergen",
    showTable: "Tabel Tonen",
    showSolution: "Oplossing Tonen",
    selectExercise: "Selecteer een oefening om te beginnen",
    theme: "Thema",
    language: "Taal",
    light: "Licht",
    dark: "Donker",
    system: "Systeem",
    // Sirius Exercise
    taskStatement: "Taakstelling",
    siriusTask: "U werkt bij Sirius AG en moet een marktaandeel analyse uitvoeren voor de afgelopen drie jaar.",
    dataAvailable: "De volgende omzetgegevens zijn beschikbaar:",
    period: "Halfjaar",
    industry: "Branche (‚Ç¨ miljoen)",
    sirius: "Sirius AG (‚Ç¨ miljoen)",
    taskA: "In welk halfjaar had Sirius AG het hoogste marktaandeel?",
    taskB: "In welk halfjaar had Sirius AG de hoogste procentuele toename van marktaandeel?",
    taskLabelA: "Taak a)",
    taskLabelB: "Taak b)",
    marketData: "Marktgegevens",
    calculatedShares: "Berekende Marktaandelen",
    calculationBasis: "Berekeningsbasis",
    basicFormula: "Basisformule:",
    exampleCalc: "Voorbeeldberekening voor 1e halfjaar 01:",
    marketShareFormula: "Marktaandeel = (Bedrijfsomzet / Totale branche-omzet) √ó 100",
    solutionA: "Oplossing a) tonen",
    solutionB: "Oplossing b) tonen",
    solutionAHide: "Oplossing a) verbergen",
    solutionBHide: "Oplossing b) verbergen",
    solutionATitle: "Oplossing a) Hoogste Marktaandeel",
    solutionBTitle: "Oplossing b) Hoogste Procentuele Toename",
    showCalculatedShares: "Berekende marktaandelen tonen",
    hideCalculatedShares: "Berekende marktaandelen verbergen",
    showCompleteAnalysis: "Volledige analyse tonen",
    hideCompleteAnalysis: "Volledige analyse verbergen",
    showTableCustomer: "Tabel tonen",
    showSolutionCustomer: "Oplossing tonen",
    showOverallAnalysis: "üìä Algemene analyse tonen",
    // Customer Exercise
    customerSurvey: "Klantenonderzoek",
    surveyDescription: "Er is een klantenonderzoek uitgevoerd om de klanttevredenheid te verbeteren. U moet de antwoorden van de tien belangrijkste klanten evalueren volgens de volgende criteria.",
    gradeSystem: "Beoordeling met schoolcijfers (1 = zeer goed, 6 = onvoldoende).",
    tasks: "Taken:",
    taskCustomerA: "Welk percentage beoordeelde gemiddeld over de vier individuele beoordelingen goed of beter?",
    taskCustomerB: "Welk percentage beoordeelde gemiddeld over de vier individuele beoordelingen voldoende of slechter?",
    taskCustomerC: "Welk gemiddelde cijfer werd gegeven voor de aandacht voor ecologische aspecten in de producten?",
    // Solution labels
    solutionALabel: "Oplossing a) Goed en beter",
    solutionBLabel: "Oplossing b) Voldoende en slechter",
    solutionCLabel: "Oplossing c) Ecologische aspecten",
    // Rating categories
    goodAndBetter: "goed en beter",
    satisfactoryAndWorse: "voldoende en slechter",
    ecologicalAspects: "Ecologische aspecten",
    // Analysis terms
    customersWithAverage: "Klanten met gemiddeld cijfer",
    numberOfCustomers: "Aantal klanten met",
    haveRated: "hebben",
    rated: "beoordeeld",
    averageGrade: "gemiddeld cijfer",
    ecoAverageGrade: "eco gemiddeld cijfer",
    analysis: "Analyse",
    // Overall analysis
    overallAnalysisTitle: "üìä Algemene analyse van klantenonderzoek",
    majorityOfCustomers: "De meerderheid van klanten",
    ratedGoodOrBetter: "beoordeelde het bedrijf goed of beter",
    onlyPercentage: "Slechts",
    gaveSatisfactoryOrWorse: "van de klanten gaven voldoende of slechtere beoordelingen",
    ecoAspectsRated: "De ecologische aspecten werden beoordeeld met",
    correspondTo: "beoordeeld - dit komt overeen met",
    recommendation: "Aanbeveling:",
    improveEcoAspects: "Verbetering van ecologische aspecten kan de algemene tevredenheid verhogen",
    ecoAspectsAlreadyGood: "Ecologische aspecten zijn al goed beoordeeld",
    interpretation: "Interpretatie:",
    calculation: "Berekening:",
    calculationExplanation: "Uitleg van berekening:",
    totalCustomers: "Totaal aantal klanten:",
    sumOfRatings: "Som van eco-beoordelingen:",
    allCustomersEcoRatings: "Eco-beoordelingen van alle klanten:",
    result: "Resultaat:",
    noCustomers: "Geen klanten",
    // Period translations
    firstHalf: "1e helft",
    secondHalf: "2e helft",
    // Solution answer texts
    hadHighestMarketShare: "had het hoogste marktaandeel met",
    formula: "Formule:",
    example: "Voorbeeld voor",
    meaning: "Betekenis:",
    strongestMarketPosition: "Dit toont de sterkste marktpositie van Sirius AG in de gehele beschouwde periode.",
    showsStrongestPosition: "toont de sterkste marktpositie",
    largestPercentageIncrease: "De grootste procentuele toename vond plaats van",
    withIncrease: "met een toename van",
    notAvailable: "Niet beschikbaar.",
    to: "naar",
    exercise1: "Oefening 1",
    exercise2: "Oefening 2",
    marketAnalysis: "Marktanalyse",
    customerSatisfaction: "Klanttevredenheid",
    statistics: "Statistieken",
    averageValues: "Gemiddelde waarden",
    industryRevenueMio: "Branche (‚Ç¨ miljoen)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ miljoen)",
    marketSharePercent: "Marktaandeel (%)",
    increasePercent: "Toename (%)",
    stepByStepAnalysis: "Volledige stap-voor-stap analyse",
    methodicalApproach: "Methodische aanpak:",
    importantInsights: "Belangrijke inzichten:",
    highestMarketShare: "Hoogste marktaandeel:",
    calculateIncreaseRates: "Bereken groeipercentages:",
    percentageChanges: "Procentuele veranderingen tussen opeenvolgende perioden",
    meaningLargestGrowth: "Dit toont de grootste relatieve groeisprong van Sirius AG in marktaandeel.",
    strongestIncrease: "Sterkste toename:",
    trendAnalysis: "Trendanalyse:",
    continuousGrowth: "Continue groei van marktaandeel waarneembaar over de beschouwde periode",
    businessRelevance: "Zakelijke relevantie:",
    positiveMarketDevelopment: "Positieve marktontwikkeling ondersteunt strategische zakelijke beslissingen",
    taskDescription: "Taakbeschrijving",
    ratingLegend: "Beoordelings-legende",
    customer: "Klant",
    function: "Functie",
    performance: "Prestatie",
    eco: "Eco",
    price: "Prijs",
    average: "Gemiddeld",
    summary: "Samenvatting",
    surveyResults: "Resultaten klantenonderzoek:",
    goodAndBetterShort: "Goed en beter",
    satisfactoryAndWorseShort: "Voldoende en slechter",
    ecoAverage: "Eco gemiddeld",
    showsDynamicDevelopment: "groei - toont meest dynamische ontwikkeling",
    with: "met",
    gradeVeryGood: "zeer goed",
    gradeGood: "goed",
    gradeSatisfactory: "bevredigend",
    gradeAdequate: "voldoende",
    gradeDeficient: "onvoldoende",
    gradeInsufficient: "slecht",
    gradeUnknown: "Onbekend",
    gradeLabelVeryGood: "Zeer goed",
    gradeLabelGood: "Goed",
    gradeLabelSatisfactory: "Bevredigend",
    gradeLabelAdequate: "Voldoende",
    gradeLabelDeficient: "Onvoldoende",
    gradeLabelInsufficient: "Slecht",
    percentageIncreaseFormula: "Procentuele toename = (nieuwe waarde - oude waarde) / oude waarde √ó 100",
    absoluteIncrease: "Absolute toename:",
    percentagePoints: "procentpunten",
    dataCollection: "Gegevensverzameling:",
    collectRevenueData: "Verzameling van omzetgegevens voor branche en Sirius AG over 6 halfjaren",
    calculateMarketShare: "Bereken marktaandeel:",
    applyFormula: "Toepassing van formule: (Sirius AG / Branche) √ó 100 voor elk halfjaar",
    identifyMaximum: "Identificeer maximum:",
    compareAllShares: "Vergelijking van alle marktaandelen om hoogste waarde te bepalen",
    basicFormulaText: "Marktaandeel = (Bedrijfsomzet / Totale branche-omzet) √ó 100",
    percentageCalculation: "Procentberekening",
    trendCalculation: "Trendberekening",
    // Table and calculation terms
    siriusRevenue: "Sirius AG Omzet",
    industryRevenue: "Branche-omzet",
    marketShareTerm: "Marktaandeel",
    dataType: "Gegevenstype",
    // Step by step explanations
    collectBaseData: "Verzamel basisgegevens",
    calculateIncrease: "Bereken toename",
    percentageIncreaseFormula2: "Procentuele toename = (Nieuw marktaandeel - Oud marktaandeel) / Oud marktaandeel √ó 100",
    marketShareFormulaSpecific: "Marktaandeel = (Sirius AG Omzet / Branche-omzet) √ó 100",
    stepByStepExplanation: "Stap-voor-stap uitleg:",
    step1: "Verzamel basisgegevens:",
    step1Description: "Branche-omzet en Sirius AG omzet voor elk halfjaar",
    step2: "Bereken marktaandeel per periode:",
    step2Description: "(Sirius AG / Branche) √ó 100",
    step3: "Bepaal procentuele toename:",
    step3Description: "Vergelijking met vorige periode",
    step4: "Interpreteer resultaten:",
    step4Description: "Identificeer trends en ontwikkelingen"
  },
  cz: {
    title: "Cviƒçen√≠ Obchodn√≠ Anal√Ωzy",
    availableExercises: "Dostupn√° Cviƒçen√≠",
    exercise1Title: "Anal√Ωza Tr≈æn√≠ho Pod√≠lu Sirius AG",
    exercise1Desc: "V√Ωpoƒçet tr≈æn√≠ho pod√≠lu a anal√Ωza trend≈Ø pro nƒõmeckou spoleƒçnost p≈ôes nƒõkolik pololet√≠.",
    exercise2Title: "Hodnocen√≠ Pr≈Øzkumu Z√°kazn√≠k≈Ø",
    exercise2Desc: "Hodnocen√≠ z√°kaznick√Ωch hodnocen√≠ pomoc√≠ ≈°koln√≠ho syst√©mu zn√°mkov√°n√≠ se statistickou anal√Ωzou.",
    startExercise: "Zaƒç√≠t Cviƒçen√≠",
    backToMenu: "Zpƒõt do Menu",
    showTask: "Zobrazit √ökol",
    hideTask: "Skr√Ωt √ökol",
    showData: "Zobrazit Data",
    hideData: "Skr√Ωt Data",
    showTable: "Zobrazit Tabulku",
    showSolution: "Zobrazit ≈òe≈°en√≠",
    selectExercise: "Vyberte cviƒçen√≠ pro zaƒç√°tek",
    theme: "T√©ma",
    language: "Jazyk",
    light: "Svƒõtl√Ω",
    dark: "Tmav√Ω",
    system: "Syst√©mov√Ω",
    // Sirius Exercise
    taskStatement: "Zad√°n√≠ √ökolu",
    siriusTask: "Pracujete ve spoleƒçnosti Sirius AG a mus√≠te prov√©st anal√Ωzu tr≈æn√≠ho pod√≠lu za posledn√≠ t≈ôi roky.",
    dataAvailable: "K dispozici jsou n√°sleduj√≠c√≠ prodejn√≠ data:",
    period: "Pololet√≠",
    industry: "Odvƒõtv√≠ (‚Ç¨ mil)",
    sirius: "Sirius AG (‚Ç¨ mil)",
    taskA: "Ve kter√©m pololet√≠ mƒõla Sirius AG nejvy≈°≈°√≠ tr≈æn√≠ pod√≠l?",
    taskB: "Ve kter√©m pololet√≠ mƒõla Sirius AG nejvy≈°≈°√≠ procentn√≠ n√°r≈Øst tr≈æn√≠ho pod√≠lu?",
    taskLabelA: "√ökol a)",
    taskLabelB: "√ökol b)",
    marketData: "Tr≈æn√≠ Data",
    calculatedShares: "Vypoƒç√≠tan√© Tr≈æn√≠ Pod√≠ly",
    calculationBasis: "Z√°klad V√Ωpoƒçtu",
    basicFormula: "Z√°kladn√≠ Vzorec:",
    exampleCalc: "P≈ô√≠klad v√Ωpoƒçtu pro 1. pol. 01:",
    marketShareFormula: "Tr≈æn√≠ Pod√≠l = (P≈ô√≠jmy Spoleƒçnosti / Celkov√© P≈ô√≠jmy Odvƒõtv√≠) √ó 100",
    solutionA: "Zobrazit ≈ôe≈°en√≠ a)",
    solutionB: "Zobrazit ≈ôe≈°en√≠ b)",
    solutionAHide: "Skr√Ωt ≈ôe≈°en√≠ a)",
    solutionBHide: "Skr√Ωt ≈ôe≈°en√≠ b)",
    solutionATitle: "≈òe≈°en√≠ a) Nejvy≈°≈°√≠ Tr≈æn√≠ Pod√≠l",
    solutionBTitle: "≈òe≈°en√≠ b) Nejvy≈°≈°√≠ Procentn√≠ N√°r≈Øst",
    showCalculatedShares: "Zobrazit vypoƒç√≠tan√© tr≈æn√≠ pod√≠ly",
    hideCalculatedShares: "Skr√Ωt vypoƒç√≠tan√© tr≈æn√≠ pod√≠ly",
    showCompleteAnalysis: "Zobrazit √∫plnou anal√Ωzu",
    hideCompleteAnalysis: "Skr√Ωt √∫plnou anal√Ωzu",
    showTableCustomer: "Zobrazit tabulku",
    showSolutionCustomer: "Zobrazit ≈ôe≈°en√≠",
    showOverallAnalysis: "üìä Zobrazit celkovou anal√Ωzu",
    // Customer Exercise
    customerSurvey: "Pr≈Øzkum Z√°kazn√≠k≈Ø",
    surveyDescription: "Byl proveden pr≈Øzkum pro zlep≈°en√≠ spokojenosti z√°kazn√≠k≈Ø. Mus√≠te vyhodnotit odpovƒõdi deseti nejd≈Øle≈æitƒõj≈°√≠ch z√°kazn√≠k≈Ø podle n√°sleduj√≠c√≠ch krit√©ri√≠.",
    gradeSystem: "Hodnocen√≠ pomoc√≠ ≈°koln√≠ch zn√°mek (1 = v√Ωborn√Ω, 6 = nedostateƒçn√Ω).",
    tasks: "√ökoly:",
    taskCustomerA: "Kolik procent hodnotilo v pr≈Ømƒõru ze ƒçty≈ô individu√°ln√≠ch hodnocen√≠ dob≈ôe nebo l√©pe?",
    taskCustomerB: "Kolik procent hodnotilo v pr≈Ømƒõru ze ƒçty≈ô individu√°ln√≠ch hodnocen√≠ dostateƒçnƒõ nebo h≈Ø≈ôe?",
    taskCustomerC: "Jakou pr≈Ømƒõrnou zn√°mku bylo udƒõleno za zohlednƒõn√≠ ekologick√Ωch aspekt≈Ø v produktech?",
    // Solution labels
    solutionALabel: "≈òe≈°en√≠ a) Dob≈ôe a l√©pe",
    solutionBLabel: "≈òe≈°en√≠ b) Dostateƒçnƒõ a h≈Ø≈ôe",
    solutionCLabel: "≈òe≈°en√≠ c) Ekologick√© aspekty",
    // Rating categories
    goodAndBetter: "dob≈ôe a l√©pe",
    satisfactoryAndWorse: "dostateƒçnƒõ a h≈Ø≈ôe",
    ecologicalAspects: "Ekologick√© aspekty",
    // Analysis terms
    customersWithAverage: "Z√°kazn√≠ci s pr≈Ømƒõrnou zn√°mkou",
    numberOfCustomers: "Poƒçet z√°kazn√≠k≈Ø s",
    haveRated: "hodnotili",
    rated: "hodnotil",
    averageGrade: "pr≈Ømƒõrn√° zn√°mka",
    ecoAverageGrade: "eko pr≈Ømƒõrn√° zn√°mka",
    analysis: "Anal√Ωza",
    // Overall analysis
    overallAnalysisTitle: "üìä Celkov√° anal√Ωza pr≈Øzkumu z√°kazn√≠k≈Ø",
    majorityOfCustomers: "Vƒõt≈°ina z√°kazn√≠k≈Ø",
    ratedGoodOrBetter: "hodnotila spoleƒçnost dob≈ôe nebo l√©pe",
    onlyPercentage: "Pouze",
    gaveSatisfactoryOrWorse: "z√°kazn√≠k≈Ø dalo dostateƒçn√° nebo hor≈°√≠ hodnocen√≠",
    ecoAspectsRated: "Ekologick√© aspekty byly hodnoceny",
    correspondTo: "hodnoceno - to odpov√≠d√°",
    recommendation: "Doporuƒçen√≠:",
    improveEcoAspects: "Zlep≈°en√≠ ekologick√Ωch aspekt≈Ø by mohlo zv√Ω≈°it celkovou spokojenost",
    ecoAspectsAlreadyGood: "Ekologick√© aspekty jsou ji≈æ dob≈ôe hodnoceny",
    interpretation: "Interpretace:",
    calculation: "V√Ωpoƒçet:",
    calculationExplanation: "Vysvƒõtlen√≠ v√Ωpoƒçtu:",
    totalCustomers: "Celkov√Ω poƒçet z√°kazn√≠k≈Ø:",
    sumOfRatings: "Souƒçet eko hodnocen√≠:",
    allCustomersEcoRatings: "Eko hodnocen√≠ v≈°ech z√°kazn√≠k≈Ø:",
    result: "V√Ωsledek:",
    noCustomers: "≈Ω√°dn√≠ z√°kazn√≠ci",
    // Period translations
    firstHalf: "1. pol.",
    secondHalf: "2. pol.",
    // Solution answer texts
    hadHighestMarketShare: "mƒõla nejvy≈°≈°√≠ tr≈æn√≠ pod√≠l s",
    formula: "Vzorec:",
    example: "P≈ô√≠klad pro",
    meaning: "V√Ωznam:",
    strongestMarketPosition: "To ukazuje nejsilnƒõj≈°√≠ tr≈æn√≠ pozici Sirius AG v cel√©m sledovan√©m obdob√≠.",
    showsStrongestPosition: "ukazuje nejsilnƒõj≈°√≠ tr≈æn√≠ pozici",
    largestPercentageIncrease: "Nejvƒõt≈°√≠ procentn√≠ n√°r≈Øst nastal z",
    withIncrease: "s n√°r≈Østem",
    notAvailable: "Nen√≠ k dispozici.",
    to: "na",
    exercise1: "Cviƒçen√≠ 1",
    exercise2: "Cviƒçen√≠ 2",
    marketAnalysis: "Tr≈æn√≠ anal√Ωza",
    customerSatisfaction: "Spokojenost z√°kazn√≠k≈Ø",
    statistics: "Statistiky",
    averageValues: "Pr≈Ømƒõrn√© hodnoty",
    industryRevenueMio: "Odvƒõtv√≠ (‚Ç¨ mil)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ mil)",
    marketSharePercent: "Tr≈æn√≠ pod√≠l (%)",
    increasePercent: "N√°r≈Øst (%)",
    stepByStepAnalysis: "√öpln√° krok za krokem anal√Ωza",
    methodicalApproach: "Metodick√Ω p≈ô√≠stup:",
    importantInsights: "D≈Øle≈æit√© pozorov√°n√≠:",
    highestMarketShare: "Nejvy≈°≈°√≠ tr≈æn√≠ pod√≠l:",
    calculateIncreaseRates: "Vypoƒç√≠tat m√≠ry r≈Østu:",
    percentageChanges: "Procentn√≠ zmƒõny mezi n√°sleduj√≠c√≠mi obdob√≠mi",
    meaningLargestGrowth: "To ukazuje nejvƒõt≈°√≠ relativn√≠ r≈Østov√Ω skok tr≈æn√≠ho pod√≠lu Sirius AG.",
    strongestIncrease: "Nejsilnƒõj≈°√≠ n√°r≈Øst:",
    trendAnalysis: "Anal√Ωza trendu:",
    continuousGrowth: "Kontinu√°ln√≠ r≈Øst tr≈æn√≠ho pod√≠lu je patrn√Ω bƒõhem sledovan√©ho obdob√≠",
    businessRelevance: "Obchodn√≠ relevance:",
    positiveMarketDevelopment: "Pozitivn√≠ v√Ωvoj trhu podporuje strategick√° obchodn√≠ rozhodnut√≠",
    taskDescription: "Popis √∫kolu",
    ratingLegend: "Legenda hodnocen√≠",
    customer: "Z√°kazn√≠k",
    function: "Funkce",
    performance: "V√Ωkon",
    eco: "Eko",
    price: "Cena",
    average: "Pr≈Ømƒõr",
    summary: "Souhrn",
    surveyResults: "V√Ωsledky pr≈Øzkumu z√°kazn√≠k≈Ø:",
    goodAndBetterShort: "Dob≈ôe a l√©pe",
    satisfactoryAndWorseShort: "Dostateƒçnƒõ a h≈Ø≈ôe",
    ecoAverage: "Eko pr≈Ømƒõr",
    showsDynamicDevelopment: "r≈Øst - ukazuje nejdynamiƒçtƒõj≈°√≠ v√Ωvoj",
    with: "s",
    gradeVeryGood: "v√Ωborn√Ω",
    gradeGood: "dobr√Ω",
    gradeSatisfactory: "uspokojiv√Ω",
    gradeAdequate: "dostateƒçn√Ω",
    gradeDeficient: "nedostateƒçn√Ω",
    gradeInsufficient: "neuspokojiv√Ω",
    gradeUnknown: "Nezn√°m√Ω",
    gradeLabelVeryGood: "V√Ωborn√Ω",
    gradeLabelGood: "Dobr√Ω",
    gradeLabelSatisfactory: "Uspokojiv√Ω",
    gradeLabelAdequate: "Dostateƒçn√Ω",
    gradeLabelDeficient: "Nedostateƒçn√Ω",
    gradeLabelInsufficient: "Neuspokojiv√Ω",
    percentageIncreaseFormula: "Procentn√≠ n√°r≈Øst = (nov√° hodnota - star√° hodnota) / star√° hodnota √ó 100",
    absoluteIncrease: "Absolutn√≠ n√°r≈Øst:",
    percentagePoints: "procentn√≠ body",
    dataCollection: "Sbƒõr dat:",
    collectRevenueData: "Sbƒõr √∫daj≈Ø o p≈ô√≠jmech pro odvƒõtv√≠ a Sirius AG za 6 pololet√≠",
    calculateMarketShare: "Vypoƒç√≠tat tr≈æn√≠ pod√≠l:",
    applyFormula: "Pou≈æit√≠ vzorce: (Sirius AG / Odvƒõtv√≠) √ó 100 pro ka≈æd√© pololet√≠",
    identifyMaximum: "Identifikovat maximum:",
    compareAllShares: "Porovn√°n√≠ v≈°ech tr≈æn√≠ch pod√≠l≈Ø k urƒçen√≠ nejvy≈°≈°√≠ hodnoty",
    basicFormulaText: "Tr≈æn√≠ pod√≠l = (P≈ô√≠jmy spoleƒçnosti / Celkov√© p≈ô√≠jmy odvƒõtv√≠) √ó 100",
    percentageCalculation: "Procentn√≠ v√Ωpoƒçty",
    trendCalculation: "V√Ωpoƒçet trendu",
    // Table and calculation terms
    siriusRevenue: "P≈ô√≠jmy Sirius AG",
    industryRevenue: "P≈ô√≠jmy odvƒõtv√≠",
    marketShareTerm: "Tr≈æn√≠ pod√≠l",
    dataType: "Typ dat",
    // Step by step explanations
    collectBaseData: "Shrom√°≈ædit z√°kladn√≠ data",
    calculateIncrease: "Vypoƒç√≠tat n√°r≈Øst",
    percentageIncreaseFormula2: "Procentn√≠ n√°r≈Øst = (Nov√Ω tr≈æn√≠ pod√≠l - Star√Ω tr≈æn√≠ pod√≠l) / Star√Ω tr≈æn√≠ pod√≠l √ó 100",
    marketShareFormulaSpecific: "Tr≈æn√≠ pod√≠l = (P≈ô√≠jmy Sirius AG / P≈ô√≠jmy odvƒõtv√≠) √ó 100",
    stepByStepExplanation: "Krok za krokem vysvƒõtlen√≠:",
    step1: "Shrom√°≈ædit z√°kladn√≠ data:",
    step1Description: "P≈ô√≠jmy odvƒõtv√≠ a p≈ô√≠jmy Sirius AG pro ka≈æd√© pololet√≠",
    step2: "Vypoƒç√≠tat tr≈æn√≠ pod√≠l za obdob√≠:",
    step2Description: "(Sirius AG / Odvƒõtv√≠) √ó 100",
    step3: "Urƒçit procentn√≠ n√°r≈Øst:",
    step3Description: "Porovn√°n√≠ s p≈ôedchoz√≠m obdob√≠m",
    step4: "Interpretovat v√Ωsledky:",
    step4Description: "Identifikovat trendy a v√Ωvoj"
  },
  sk: {
    title: "Cviƒçenia Obchodnej Anal√Ωzy",
    availableExercises: "Dostupn√© Cviƒçenia",
    exercise1Title: "Anal√Ωza Trhov√©ho Podielu Sirius AG",
    exercise1Desc: "V√Ωpoƒçet trhov√©ho podielu a anal√Ωza trendov pre nemeck√∫ spoloƒçnos≈• cez niekoƒæko polrokov.",
    exercise2Title: "Hodnotenie Prieskumu Z√°kazn√≠kov",
    exercise2Desc: "Hodnotenie z√°kazn√≠ckych hodnoten√≠ pomocou ≈°kolsk√©ho syst√©mu zn√°mkovania so ≈°tatistickou anal√Ωzou.",
    startExercise: "Zaƒça≈• Cviƒçenie",
    backToMenu: "Sp√§≈• do Menu",
    showTask: "Zobrazi≈• √ölohu",
    hideTask: "Skry≈• √ölohu",
    showData: "Zobrazi≈• D√°ta",
    hideData: "Skry≈• D√°ta",
    showTable: "Zobrazi≈• Tabuƒæku",
    showSolution: "Zobrazi≈• Rie≈°enie",
    selectExercise: "Vyberte cviƒçenie na zaƒçiatok",
    theme: "T√©ma",
    language: "Jazyk",
    light: "Svetl√Ω",
    dark: "Tmav√Ω",
    system: "Syst√©mov√Ω",
    // Sirius Exercise
    taskStatement: "Zadanie √ölohy",
    siriusTask: "Pracujete v spoloƒçnosti Sirius AG a mus√≠te vykona≈• anal√Ωzu trhov√©ho podielu za posledn√© tri roky.",
    dataAvailable: "K dispoz√≠cii s√∫ nasleduj√∫ce predajn√© d√°ta:",
    period: "Polrok",
    industry: "Odvetvie (‚Ç¨ mil)",
    sirius: "Sirius AG (‚Ç¨ mil)",
    taskA: "V ktorom polroku mala Sirius AG najvy≈°≈°√≠ trhov√Ω podiel?",
    taskB: "V ktorom polroku mala Sirius AG najvy≈°≈°√≠ percentu√°lny n√°rast trhov√©ho podielu?",
    taskLabelA: "√öloha a)",
    taskLabelB: "√öloha b)",
    marketData: "Trhov√© D√°ta",
    calculatedShares: "Vypoƒç√≠tan√© Trhov√© Podiely",
    calculationBasis: "Z√°klad V√Ωpoƒçtu",
    basicFormula: "Z√°kladn√Ω Vzorec:",
    exampleCalc: "Pr√≠klad v√Ωpoƒçtu pre 1. pol. 01:",
    marketShareFormula: "Trhov√Ω Podiel = (Pr√≠jmy Spoloƒçnosti / Celkov√© Pr√≠jmy Odvetvia) √ó 100",
    solutionA: "Zobrazi≈• rie≈°enie a)",
    solutionB: "Zobrazi≈• rie≈°enie b)",
    solutionAHide: "Skry≈• rie≈°enie a)",
    solutionBHide: "Skry≈• rie≈°enie b)",
    solutionATitle: "Rie≈°enie a) Najvy≈°≈°√≠ Trhov√Ω Podiel",
    solutionBTitle: "Rie≈°enie b) Najvy≈°≈°√≠ Percentu√°lny N√°rast",
    showCalculatedShares: "Zobrazi≈• vypoƒç√≠tan√© trhov√© podiely",
    hideCalculatedShares: "Skry≈• vypoƒç√≠tan√© trhov√© podiely",
    showCompleteAnalysis: "Zobrazi≈• √∫pln√∫ anal√Ωzu",
    hideCompleteAnalysis: "Skry≈• √∫pln√∫ anal√Ωzu",
    showTableCustomer: "Zobrazi≈• tabuƒæku",
    showSolutionCustomer: "Zobrazi≈• rie≈°enie",
    showOverallAnalysis: "üìä Zobrazi≈• celkov√∫ anal√Ωzu",
    // Customer Exercise
    customerSurvey: "Prieskum Z√°kazn√≠kov",
    surveyDescription: "Bol vykonan√Ω prieskum na zlep≈°enie spokojnosti z√°kazn√≠kov. Mus√≠te vyhodnoti≈• odpovede desiatich najd√¥le≈æitej≈°√≠ch z√°kazn√≠kov podƒæa nasleduj√∫cich krit√©ri√≠.",
    gradeSystem: "Hodnotenie pomocou ≈°kolsk√Ωch zn√°mok (1 = v√Ωborn√Ω, 6 = nedostatoƒçn√Ω).",
    tasks: "√ölohy:",
    taskCustomerA: "Koƒæko percent hodnotilo v priemere zo ≈°tyroch individu√°lnych hodnoten√≠ dobre alebo lep≈°ie?",
    taskCustomerB: "Koƒæko percent hodnotilo v priemere zo ≈°tyroch individu√°lnych hodnoten√≠ dostatoƒçne alebo hor≈°ie?",
    taskCustomerC: "Ak√∫ priemern√∫ zn√°mku bolo udelen√© za zohƒæadnenie ekologick√Ωch aspektov v produktoch?",
    // Solution labels
    solutionALabel: "Rie≈°enie a) Dobre a lep≈°ie",
    solutionBLabel: "Rie≈°enie b) Dostatoƒçne a hor≈°ie",
    solutionCLabel: "Rie≈°enie c) Ekologick√© aspekty",
    // Rating categories
    goodAndBetter: "dobre a lep≈°ie",
    satisfactoryAndWorse: "dostatoƒçne a hor≈°ie",
    ecologicalAspects: "Ekologick√© aspekty",
    // Analysis terms
    customersWithAverage: "Z√°kazn√≠ci s priemernou zn√°mkou",
    numberOfCustomers: "Poƒçet z√°kazn√≠kov s",
    haveRated: "hodnotili",
    rated: "hodnotil",
    averageGrade: "priemern√° zn√°mka",
    ecoAverageGrade: "eko priemern√° zn√°mka",
    analysis: "Anal√Ωza",
    // Overall analysis
    overallAnalysisTitle: "üìä Celkov√° anal√Ωza prieskumu z√°kazn√≠kov",
    majorityOfCustomers: "V√§ƒç≈°ina z√°kazn√≠kov",
    ratedGoodOrBetter: "hodnotila spoloƒçnos≈• dobre alebo lep≈°ie",
    onlyPercentage: "Len",
    gaveSatisfactoryOrWorse: "z√°kazn√≠kov dalo dostatoƒçn√© alebo hor≈°ie hodnotenia",
    ecoAspectsRated: "Ekologick√© aspekty boli hodnoten√©",
    correspondTo: "hodnoten√© - to zodpoved√°",
    recommendation: "Odpor√∫ƒçanie:",
    improveEcoAspects: "Zlep≈°enie ekologick√Ωch aspektov by mohlo zv√Ω≈°i≈• celkov√∫ spokojnos≈•",
    ecoAspectsAlreadyGood: "Ekologick√© aspekty s√∫ u≈æ dobre hodnoten√©",
    interpretation: "Interpret√°cia:",
    calculation: "V√Ωpoƒçet:",
    calculationExplanation: "Vysvetlenie v√Ωpoƒçtu:",
    totalCustomers: "Celkov√Ω poƒçet z√°kazn√≠kov:",
    sumOfRatings: "S√∫ƒçet eko hodnoten√≠:",
    allCustomersEcoRatings: "Eko hodnotenia v≈°etk√Ωch z√°kazn√≠kov:",
    result: "V√Ωsledok:",
    noCustomers: "≈Ωiadni z√°kazn√≠ci",
    // Period translations
    firstHalf: "1. pol.",
    secondHalf: "2. pol.",
    // Solution answer texts
    hadHighestMarketShare: "mala najvy≈°≈°√≠ trhov√Ω podiel s",
    formula: "Vzorec:",
    example: "Pr√≠klad pre",
    meaning: "V√Ωznam:",
    strongestMarketPosition: "To ukazuje najsilnej≈°iu trhov√∫ poz√≠ciu Sirius AG v celom sledovanom obdob√≠.",
    showsStrongestPosition: "ukazuje najsilnej≈°iu trhov√∫ poz√≠ciu",
    largestPercentageIncrease: "Najv√§ƒç≈°√≠ percentu√°lny n√°rast nastal z",
    withIncrease: "s n√°rastom",
    notAvailable: "Nie je k dispoz√≠cii.",
    to: "na",
    exercise1: "Cviƒçenie 1",
    exercise2: "Cviƒçenie 2",
    marketAnalysis: "Trhov√° anal√Ωza",
    customerSatisfaction: "Spokojnos≈• z√°kazn√≠kov",
    statistics: "≈†tatistiky",
    averageValues: "Priemern√© hodnoty",
    industryRevenueMio: "Odvetvie (‚Ç¨ mil)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ mil)",
    marketSharePercent: "Trhov√Ω podiel (%)",
    increasePercent: "N√°rast (%)",
    stepByStepAnalysis: "√öpln√° krok za krokom anal√Ωza",
    methodicalApproach: "Metodick√Ω pr√≠stup:",
    importantInsights: "D√¥le≈æit√© pozorovanie:",
    highestMarketShare: "Najvy≈°≈°√≠ trhov√Ω podiel:",
    calculateIncreaseRates: "Vypoƒç√≠ta≈• miery rastu:",
    percentageChanges: "Percentu√°lne zmeny medzi nasleduj√∫cimi obdobiami",
    meaningLargestGrowth: "To ukazuje najv√§ƒç≈°√≠ relat√≠vny rastov√Ω skok trhov√©ho podielu Sirius AG.",
    strongestIncrease: "Najsilnej≈°√≠ n√°rast:",
    trendAnalysis: "Anal√Ωza trendu:",
    continuousGrowth: "Kontinu√°lny rast trhov√©ho podielu je zrejm√Ω poƒças sledovan√©ho obdobia",
    businessRelevance: "Obchodn√° relevancia:",
    positiveMarketDevelopment: "Pozit√≠vny v√Ωvoj trhu podporuje strategick√© obchodn√© rozhodnutia",
    taskDescription: "Popis √∫lohy",
    ratingLegend: "Legenda hodnotenia",
    customer: "Z√°kazn√≠k",
    function: "Funkcia",
    performance: "V√Ωkon",
    eco: "Eko",
    price: "Cena",
    average: "Priemer",
    summary: "S√∫hrn",
    surveyResults: "V√Ωsledky prieskumu z√°kazn√≠kov:",
    goodAndBetterShort: "Dobre a lep≈°ie",
    satisfactoryAndWorseShort: "Dostatoƒçne a hor≈°ie",
    ecoAverage: "Eko priemer",
    showsDynamicDevelopment: "rast - ukazuje najdynamickej≈°√≠ v√Ωvoj",
    with: "s",
    gradeVeryGood: "v√Ωborn√Ω",
    gradeGood: "dobr√Ω",
    gradeSatisfactory: "uspokojiv√Ω",
    gradeAdequate: "dostatoƒçn√Ω",
    gradeDeficient: "nedostatoƒçn√Ω",
    gradeInsufficient: "neuspokojiv√Ω",
    gradeUnknown: "Nezn√°my",
    gradeLabelVeryGood: "V√Ωborn√Ω",
    gradeLabelGood: "Dobr√Ω",
    gradeLabelSatisfactory: "Uspokojiv√Ω",
    gradeLabelAdequate: "Dostatoƒçn√Ω",
    gradeLabelDeficient: "Nedostatoƒçn√Ω",
    gradeLabelInsufficient: "Neuspokojiv√Ω",
    percentageIncreaseFormula: "Percentu√°lny n√°rast = (nov√° hodnota - star√° hodnota) / star√° hodnota √ó 100",
    absoluteIncrease: "Absol√∫tny n√°rast:",
    percentagePoints: "percentu√°lne body",
    dataCollection: "Zber d√°t:",
    collectRevenueData: "Zber √∫dajov o pr√≠jmoch pre odvetvie a Sirius AG za 6 polrokov",
    calculateMarketShare: "Vypoƒç√≠ta≈• trhov√Ω podiel:",
    applyFormula: "Pou≈æitie vzorca: (Sirius AG / Odvetvie) √ó 100 pre ka≈æd√Ω polrok",
    identifyMaximum: "Identifikova≈• maximum:",
    compareAllShares: "Porovnanie v≈°etk√Ωch trhov√Ωch podielov na urƒçenie najvy≈°≈°ej hodnoty",
    basicFormulaText: "Trhov√Ω podiel = (Pr√≠jmy spoloƒçnosti / Celkov√© pr√≠jmy odvetvia) √ó 100",
    percentageCalculation: "Percentu√°lne v√Ωpoƒçty",
    trendCalculation: "V√Ωpoƒçet trendu",
    // Table and calculation terms
    siriusRevenue: "Pr√≠jmy Sirius AG",
    industryRevenue: "Pr√≠jmy odvetvia",
    marketShareTerm: "Trhov√Ω podiel",
    dataType: "Typ d√°t",
    // Step by step explanations
    collectBaseData: "Zhroma≈ædi≈• z√°kladn√© d√°ta",
    calculateIncrease: "Vypoƒç√≠ta≈• n√°rast",
    percentageIncreaseFormula2: "Percentu√°lny n√°rast = (Nov√Ω trhov√Ω podiel - Star√Ω trhov√Ω podiel) / Star√Ω trhov√Ω podiel √ó 100",
    marketShareFormulaSpecific: "Trhov√Ω podiel = (Pr√≠jmy Sirius AG / Pr√≠jmy odvetvia) √ó 100",
    stepByStepExplanation: "Krok za krokom vysvetlenie:",
    step1: "Zhroma≈ædi≈• z√°kladn√© d√°ta:",
    step1Description: "Pr√≠jmy odvetvia a pr√≠jmy Sirius AG pre ka≈æd√Ω polrok",
    step2: "Vypoƒç√≠ta≈• trhov√Ω podiel za obdobie:",
    step2Description: "(Sirius AG / Odvetvie) √ó 100",
    step3: "Urƒçi≈• percentu√°lny n√°rast:",
    step3Description: "Porovnanie s predch√°dzaj√∫cim obdob√≠m",
    step4: "Interpretova≈• v√Ωsledky:",
    step4Description: "Identifikova≈• trendy a v√Ωvoj"
  },
  md: {
    title: "Exerci»õii de AnalizƒÉ de Afaceri",
    availableExercises: "Exerci»õii Disponibile",
    exercise1Title: "Analiza Cotei de Pia»õƒÉ Sirius AG",
    exercise1Desc: "Calculul cotei de pia»õƒÉ »ôi analiza tendin»õelor pentru o companie germanƒÉ pe mai multe semestre.",
    exercise2Title: "Evaluarea Sondajului Clien»õilor",
    exercise2Desc: "Evaluarea ratingurilor clien»õilor folosind sistemul de notare »ôcolar cu analizƒÉ statisticƒÉ.",
    startExercise: "√éncepe Exerci»õiul",
    backToMenu: "√énapoi la Meniu",
    showTask: "AratƒÉ Sarcina",
    hideTask: "Ascunde Sarcina",
    showData: "AratƒÉ Datele",
    hideData: "Ascunde Datele",
    showTable: "AratƒÉ Tabelul",
    showSolution: "AratƒÉ Solu»õia",
    selectExercise: "SelecteazƒÉ un exerci»õiu pentru a √Æncepe",
    theme: "TemƒÉ",
    language: "LimbƒÉ",
    light: "Luminos",
    dark: "√éntunecat",
    system: "Sistem",
    // Sirius Exercise
    taskStatement: "Declara»õia Sarcinii",
    siriusTask: "Lucra»õi la Sirius AG »ôi trebuie sƒÉ efectua»õi o analizƒÉ a cotei de pia»õƒÉ pentru ultimii trei ani.",
    dataAvailable: "UrmƒÉtoarele date de v√¢nzƒÉri vƒÉ sunt disponibile:",
    period: "Semestru",
    industry: "Industrie (‚Ç¨ mil)",
    sirius: "Sirius AG (‚Ç¨ mil)",
    taskA: "√én care semestru a avut Sirius AG cea mai mare cotƒÉ de pia»õƒÉ?",
    taskB: "√én care semestru a avut Sirius AG cea mai mare cre»ôtere procentualƒÉ a cotei de pia»õƒÉ?",
    taskLabelA: "Sarcina a)",
    taskLabelB: "Sarcina b)",
    marketData: "Date de Pia»õƒÉ",
    calculatedShares: "Cote de Pia»õƒÉ Calculate",
    calculationBasis: "Baza de Calcul",
    basicFormula: "Formula de BazƒÉ:",
    exampleCalc: "Exemplu de calcul pentru 1. sem. 01:",
    marketShareFormula: "Cota de Pia»õƒÉ = (Venitul Companiei / Venitul Total al Industriei) √ó 100",
    solutionA: "AratƒÉ solu»õia a)",
    solutionB: "AratƒÉ solu»õia b)",
    solutionAHide: "Ascunde solu»õia a)",
    solutionBHide: "Ascunde solu»õia b)",
    solutionATitle: "Solu»õia a) Cea Mai Mare CotƒÉ de Pia»õƒÉ",
    solutionBTitle: "Solu»õia b) Cea Mai Mare Cre»ôtere ProcentualƒÉ",
    showCalculatedShares: "AratƒÉ cotele de pia»õƒÉ calculate",
    hideCalculatedShares: "Ascunde cotele de pia»õƒÉ calculate",
    showCompleteAnalysis: "AratƒÉ analiza completƒÉ",
    hideCompleteAnalysis: "Ascunde analiza completƒÉ",
    showTableCustomer: "AratƒÉ tabelul",
    showSolutionCustomer: "AratƒÉ solu»õia",
    showOverallAnalysis: "üìä AratƒÉ analiza generalƒÉ",
    // Customer Exercise
    customerSurvey: "Sondaj Clien»õi",
    surveyDescription: "S-a efectuat un sondaj pentru √ÆmbunƒÉtƒÉ»õirea satisfac»õiei clien»õilor. Trebuie sƒÉ evalua»õi rƒÉspunsurile celor mai importan»õi zece clien»õi conform criteriilor urmƒÉtoare.",
    gradeSystem: "Evaluarea folosind notele »ôcolare (1 = foarte bine, 6 = insuficient).",
    tasks: "Sarcini:",
    taskCustomerA: "Ce procent a evaluat bine sau mai bine √Æn media celor patru evaluƒÉri individuale?",
    taskCustomerB: "Ce procent a evaluat satisfƒÉcƒÉtor sau mai rƒÉu √Æn media celor patru evaluƒÉri individuale?",
    taskCustomerC: "Ce notƒÉ medie a fost acordatƒÉ pentru luarea √Æn considerare a aspectelor ecologice √Æn produse?",
    // Solution labels
    solutionALabel: "Solu»õia a) Bine »ôi mai bine",
    solutionBLabel: "Solu»õia b) SatisfƒÉcƒÉtor »ôi mai rƒÉu",
    solutionCLabel: "Solu»õia c) Aspecte ecologice",
    // Rating categories
    goodAndBetter: "bine »ôi mai bine",
    satisfactoryAndWorse: "satisfƒÉcƒÉtor »ôi mai rƒÉu",
    ecologicalAspects: "Aspecte ecologice",
    // Analysis terms
    customersWithAverage: "Clien»õi cu nota medie",
    numberOfCustomers: "NumƒÉrul de clien»õi cu",
    haveRated: "au evaluat",
    rated: "a evaluat",
    averageGrade: "nota medie",
    ecoAverageGrade: "nota medie eco",
    analysis: "Analiza",
    // Overall analysis
    overallAnalysisTitle: "üìä Analiza generalƒÉ a sondajului clien»õilor",
    majorityOfCustomers: "Majoritatea clien»õilor",
    ratedGoodOrBetter: "au evaluat compania bine sau mai bine",
    onlyPercentage: "Doar",
    gaveSatisfactoryOrWorse: "clien»õi au dat evaluƒÉri satisfƒÉcƒÉtoare sau mai rele",
    ecoAspectsRated: "Aspectele ecologice au fost evaluate",
    correspondTo: "evaluat - aceasta corespunde",
    recommendation: "Recomandare:",
    improveEcoAspects: "√émbunƒÉtƒÉ»õirea aspectelor ecologice ar putea cre»ôte satisfac»õia generalƒÉ",
    ecoAspectsAlreadyGood: "Aspectele ecologice sunt deja bine evaluate",
    interpretation: "Interpretare:",
    calculation: "Calcul:",
    calculationExplanation: "Explica»õia calculului:",
    totalCustomers: "NumƒÉrul total de clien»õi:",
    sumOfRatings: "Suma evaluƒÉrilor eco:",
    allCustomersEcoRatings: "EvaluƒÉrile eco ale tuturor clien»õilor:",
    result: "Rezultat:",
    noCustomers: "Niciun client",
    // Period translations
    firstHalf: "1. sem.",
    secondHalf: "2. sem.",
    // Solution answer texts
    hadHighestMarketShare: "a avut cea mai mare cotƒÉ de pia»õƒÉ cu",
    formula: "Formula:",
    example: "Exemplu pentru",
    meaning: "Semnifica»õie:",
    strongestMarketPosition: "Aceasta aratƒÉ cea mai puternicƒÉ pozi»õie de pia»õƒÉ a Sirius AG √Æn √Æntreaga perioadƒÉ observatƒÉ.",
    showsStrongestPosition: "aratƒÉ cea mai puternicƒÉ pozi»õie de pia»õƒÉ",
    largestPercentageIncrease: "Cea mai mare cre»ôtere procentualƒÉ a avut loc de la",
    withIncrease: "cu o cre»ôtere de",
    notAvailable: "Nu este disponibil.",
    to: "la",
    exercise1: "Exerci»õiul 1",
    exercise2: "Exerci»õiul 2",
    marketAnalysis: "Analiza pie»õei",
    customerSatisfaction: "Satisfac»õia clien»õilor",
    statistics: "Statistici",
    averageValues: "Valori medii",
    industryRevenueMio: "Industrie (‚Ç¨ mil)",
    siriusRevenueMio: "Sirius AG (‚Ç¨ mil)",
    marketSharePercent: "Cota de pia»õƒÉ (%)",
    increasePercent: "Cre»ôtere (%)",
    stepByStepAnalysis: "Analiza completƒÉ pas cu pas",
    methodicalApproach: "Abordare metodicƒÉ:",
    importantInsights: "Observa»õii importante:",
    highestMarketShare: "Cea mai mare cotƒÉ de pia»õƒÉ:",
    calculateIncreaseRates: "Calcularea ratelor de cre»ôtere:",
    percentageChanges: "ModificƒÉri procentuale √Æntre perioadele consecutive",
    meaningLargestGrowth: "Aceasta aratƒÉ cel mai mare salt relativ de cre»ôtere a cotei de pia»õƒÉ Sirius AG.",
    strongestIncrease: "Cea mai puternicƒÉ cre»ôtere:",
    trendAnalysis: "Analiza tendin»õelor:",
    continuousGrowth: "Cre»ôterea continuƒÉ a cotei de pia»õƒÉ este evidentƒÉ pe parcursul perioadei observate",
    businessRelevance: "Relevan»õa comercialƒÉ:",
    positiveMarketDevelopment: "Dezvoltarea pozitivƒÉ a pie»õei sus»õine deciziile strategice de afaceri",
    taskDescription: "Descrierea sarcinii",
    ratingLegend: "Legenda evaluƒÉrii",
    customer: "Client",
    function: "Func»õie",
    performance: "Performan»õƒÉ",
    eco: "Eco",
    price: "Pre»õ",
    average: "Medie",
    summary: "Rezumat",
    surveyResults: "Rezultatele sondajului clien»õilor:",
    goodAndBetterShort: "Bine »ôi mai bine",
    satisfactoryAndWorseShort: "SatisfƒÉcƒÉtor »ôi mai rƒÉu",
    ecoAverage: "Media eco",
    showsDynamicDevelopment: "cre»ôtere - aratƒÉ cea mai dinamicƒÉ dezvoltare",
    with: "cu",
    gradeVeryGood: "foarte bine",
    gradeGood: "bine",
    gradeSatisfactory: "satisfƒÉcƒÉtor",
    gradeAdequate: "suficient",
    gradeDeficient: "deficient",
    gradeInsufficient: "insuficient",
    gradeUnknown: "Necunoscut",
    gradeLabelVeryGood: "Foarte bine",
    gradeLabelGood: "Bine",
    gradeLabelSatisfactory: "SatisfƒÉcƒÉtor",
    gradeLabelAdequate: "Suficient",
    gradeLabelDeficient: "Deficient",
    gradeLabelInsufficient: "Insuficient",
    percentageIncreaseFormula: "Cre»ôtere procentualƒÉ = (valoare nouƒÉ - valoare veche) / valoare veche √ó 100",
    absoluteIncrease: "Cre»ôtere absolutƒÉ:",
    percentagePoints: "puncte procentuale",
    dataCollection: "Colectarea datelor:",
    collectRevenueData: "Colectarea datelor de venituri pentru industrie »ôi Sirius AG pentru 6 semestre",
    calculateMarketShare: "Calcularea cotei de pia»õƒÉ:",
    applyFormula: "Aplicarea formulei: (Sirius AG / Industrie) √ó 100 pentru fiecare semestru",
    identifyMaximum: "Identificarea maximului:",
    compareAllShares: "Compararea tuturor cotelor de pia»õƒÉ pentru determinarea celei mai mari valori",
    basicFormulaText: "Cota de pia»õƒÉ = (Venitul companiei / Venitul total al industriei) √ó 100",
    percentageCalculation: "Calculul procentelor",
    trendCalculation: "Calculul tendin»õelor",
    // Table and calculation terms
    siriusRevenue: "Venitul Sirius AG",
    industryRevenue: "Venitul industriei",
    marketShareTerm: "Cota de pia»õƒÉ",
    dataType: "Tipul datelor",
    // Step by step explanations
    collectBaseData: "Colectarea datelor de bazƒÉ",
    calculateIncrease: "Calcularea cre»ôterii",
    percentageIncreaseFormula2: "Cre»ôtere procentualƒÉ = (Cota de pia»õƒÉ nouƒÉ - Cota de pia»õƒÉ veche) / Cota de pia»õƒÉ veche √ó 100",
    marketShareFormulaSpecific: "Cota de pia»õƒÉ = (Venitul Sirius AG / Venitul industriei) √ó 100",
    stepByStepExplanation: "Explica»õie pas cu pas:",
    step1: "Colectarea datelor de bazƒÉ:",
    step1Description: "Veniturile industriei »ôi veniturile Sirius AG pentru fiecare semestru",
    step2: "Calcularea cotei de pia»õƒÉ pentru perioadƒÉ:",
    step2Description: "(Sirius AG / Industrie) √ó 100",
    step3: "Determinarea cre»ôterii procentuale:",
    step3Description: "Compararea cu perioada anterioarƒÉ",
    step4: "Interpretarea rezultatelor:",
    step4Description: "Identificarea tendin»õelor »ôi dezvoltƒÉrilor"
  }
};

// Type-safe translation fallback system - ensures perfect user experience
// If a key is missing in the selected language, it falls back to English translation
const getTranslation = (lang: Language): typeof translations.en => {
  const baseTranslation = translations[lang];
  const englishFallback = translations.en;
  
  // Create a merged object with English fallback for missing keys
  return { ...englishFallback, ...baseTranslation } as typeof translations.en;
};
const languageNames = {
  de: "Deutsch",
  en: "English", 
  tr: "T√ºrk√ße",
  ro: "Rom√¢nƒÉ",
  sy: "ÿ≥Ÿàÿ±Ÿä",
  ar: "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©",
  ru: "–†—É—Å—Å–∫–∏–π",
  pl: "Polski",
  at: "√ñsterreich",
  ch: "Schweiz",
  nl: "Nederlands",
  cz: "ƒåe≈°tina",
  sk: "Slovenƒçina",
  md: "MoldoveneascƒÉ"
};

const data: DataRow[] = [
  { halbjahr: "1. Halbj. 01", branche: 20.0, sirius: 1.6 },
  { halbjahr: "2. Halbj. 01", branche: 26.8, sirius: 2.5 },
  { halbjahr: "1. Halbj. 02", branche: 21.7, sirius: 2.6 },
  { halbjahr: "2. Halbj. 02", branche: 29.6, sirius: 3.5 },
  { halbjahr: "1. Halbj. 03", branche: 24.4, sirius: 3.6 },
  { halbjahr: "2. Halbj. 03", branche: 32.6, sirius: 4.0 },
];

// Customer Survey Data
interface CustomerSurvey {
  kunde: string;
  funktion: number;
  leistung: number;
  oeko: number;
  preis: number;
  durchschnitt?: number;
}

const customerData: CustomerSurvey[] = [
  { kunde: "A", funktion: 2, leistung: 3, oeko: 4, preis: 2 },
  { kunde: "B", funktion: 2, leistung: 2, oeko: 3, preis: 1 },
  { kunde: "C", funktion: 4, leistung: 4, oeko: 5, preis: 4 },
  { kunde: "D", funktion: 1, leistung: 1, oeko: 4, preis: 2 },
  { kunde: "E", funktion: 2, leistung: 1, oeko: 3, preis: 2 },
  { kunde: "F", funktion: 3, leistung: 2, oeko: 3, preis: 3 },
  { kunde: "G", funktion: 2, leistung: 1, oeko: 5, preis: 3 },
  { kunde: "H", funktion: 2, leistung: 2, oeko: 3, preis: 1 },
  { kunde: "I", funktion: 2, leistung: 2, oeko: 5, preis: 3 },
  { kunde: "J", funktion: 2, leistung: 2, oeko: 4, preis: 2 }
];

function calculateMarketShares(): MarketShareRow[] {
  return data.map((row) => ({
    ...row,
    marketShare: (row.sirius / row.branche) * 100,
  }));
}

function findMaxMarketShare(marketShares: MarketShareRow[]): MarketShareRow {
  return marketShares.reduce(
    (max: MarketShareRow, curr: MarketShareRow) => (curr.marketShare > max.marketShare ? curr : max),
    marketShares[0]
  );
}

type MaxIncrease = {
  from: MarketShareRow | null;
  to: MarketShareRow | null;
  increase: number;
  percentageIncrease: number;
};

function findMaxIncrease(marketShares: MarketShareRow[]): MaxIncrease {
  let maxInc: MaxIncrease = { from: null, to: null, increase: -Infinity, percentageIncrease: -Infinity };
  for (let i = 1; i < marketShares.length; i++) {
    const absoluteInc = marketShares[i].marketShare - marketShares[i - 1].marketShare;
    const percentageInc = (absoluteInc / marketShares[i - 1].marketShare) * 100;
    if (percentageInc > maxInc.percentageIncrease) {
      maxInc = {
        from: marketShares[i - 1],
        to: marketShares[i],
        increase: absoluteInc,
        percentageIncrease: percentageInc,
      };
    }
  }
  return maxInc;
}

// Customer Survey Calculation Functions
function calculateCustomerAverages(): CustomerSurvey[] {
  return customerData.map(customer => ({
    ...customer,
    durchschnitt: (customer.funktion + customer.leistung + customer.oeko + customer.preis) / 4
  }));
}

function calculateGoodOrBetterPercentage(): number {
  const averages = calculateCustomerAverages();
  const goodOrBetter = averages.filter(customer => customer.durchschnitt! <= 2.5); // Note: 1-2 is good, 2.5 is boundary
  return (goodOrBetter.length / averages.length) * 100;
}

function calculateSufficientOrWorsePercentage(): number {
  const averages = calculateCustomerAverages();
  const sufficientOrWorse = averages.filter(customer => customer.durchschnitt! >= 3.5); // Note: 4-6 is sufficient or worse
  return (sufficientOrWorse.length / averages.length) * 100;
}

function calculateEcoAverageGrade(): number {
  const totalEco = customerData.reduce((sum, customer) => sum + customer.oeko, 0);
  return totalEco / customerData.length;
}

function getGradeDescription(grade: number, t: TranslationObject): string {
  if (grade <= 1.5) return t.gradeVeryGood;
  if (grade <= 2.5) return t.gradeGood;
  if (grade <= 3.5) return t.gradeSatisfactory;
  if (grade <= 4.5) return t.gradeAdequate;
  if (grade <= 5.5) return t.gradeDeficient;
  return t.gradeInsufficient;
}

// Helper functions for grade coloring
function getGradeColor(grade: number): string {
  switch (grade) {
    case 1: return 'bg-green-600 text-white border-green-500 shadow-lg shadow-green-500/30'; // Sehr gut
    case 2: return 'bg-green-400 text-white border-green-300 shadow-lg shadow-green-400/30'; // Gut
    case 3: return 'bg-yellow-400 text-black border-yellow-300 shadow-lg shadow-yellow-400/30'; // Befriedigend
    case 4: return 'bg-orange-400 text-white border-orange-300 shadow-lg shadow-orange-400/30'; // Ausreichend
    case 5: return 'bg-red-400 text-white border-red-300 shadow-lg shadow-red-400/30'; // Mangelhaft
    case 6: return 'bg-red-700 text-white border-red-600 shadow-lg shadow-red-700/30'; // Ungen√ºgend
    default: return 'bg-gray-400 text-white border-gray-300 shadow-lg shadow-gray-400/30';
  }
}

function getGradeLabel(grade: number, t: TranslationObject): string {
  switch (grade) {
    case 1: return t.gradeLabelVeryGood;
    case 2: return t.gradeLabelGood;
    case 3: return t.gradeLabelSatisfactory;
    case 4: return t.gradeLabelAdequate;
    case 5: return t.gradeLabelDeficient;
    case 6: return t.gradeLabelInsufficient;
    default: return t.gradeUnknown;
  }
}

function getAverageGradeColor(average: number): string {
  if (average <= 1.5) return 'bg-green-600 text-white border-green-500 shadow-lg shadow-green-500/30'; // Sehr gut
  if (average <= 2.5) return 'bg-green-400 text-white border-green-300 shadow-lg shadow-green-400/30'; // Gut
  if (average <= 3.5) return 'bg-yellow-400 text-black border-yellow-300 shadow-lg shadow-yellow-400/30'; // Befriedigend
  if (average <= 4.5) return 'bg-orange-400 text-white border-orange-300 shadow-lg shadow-orange-400/30'; // Ausreichend
  if (average <= 5.5) return 'bg-red-400 text-white border-red-300 shadow-lg shadow-red-400/30'; // Mangelhaft
  return 'bg-red-700 text-white border-red-600 shadow-lg shadow-red-700/30'; // Ungen√ºgend
}

function useTypingEffect(text: string, speed = 50) {
  const [displayed, setDisplayed] = React.useState("");
  const index = useRef(0);

  useEffect(() => {
    setDisplayed("");
    index.current = 0;
    const interval = setInterval(() => {
      setDisplayed(text.substring(0, index.current + 1));
      index.current++;
      if (index.current >= text.length) clearInterval(interval);
    }, speed);
    return () => clearInterval(interval);
  }, [text, speed]);

  return displayed;
}

// Function to translate period names
function translatePeriod(germanPeriod: string, t: TranslationObject): string {
  if (germanPeriod.includes("1. Halbj.")) {
    return germanPeriod.replace("1. Halbj.", t.firstHalf);
  }
  if (germanPeriod.includes("2. Halbj.")) {
    return germanPeriod.replace("2. Halbj.", t.secondHalf);
  }
  return germanPeriod;
}

export default function SiriusMarketShare() {
  const marketShares = calculateMarketShares();
  const maxShare = findMaxMarketShare(marketShares);
  const maxInc = findMaxIncrease(marketShares);
  
  // State for menu navigation
  const [currentExercise, setCurrentExercise] = React.useState<string | null>(null);
  
  // State for interactive revelation (Exercise 1)
  const [showProblem, setShowProblem] = React.useState(false);
  const [showCalculatedTable, setShowCalculatedTable] = React.useState(false);
  const [showSolutionA, setShowSolutionA] = React.useState(false);
  const [showSolutionB, setShowSolutionB] = React.useState(false);
  const [showCompleteAnalysis, setShowCompleteAnalysis] = React.useState(false);

  // State for interactive revelation (Exercise 2 - Customer Survey)
  const [showCustomerProblem, setShowCustomerProblem] = React.useState(false);
  const [showCustomerTable, setShowCustomerTable] = React.useState(false);
  const [showCustomerSolutionA, setShowCustomerSolutionA] = React.useState(false);
  const [showCustomerSolutionB, setShowCustomerSolutionB] = React.useState(false);
  const [showCustomerSolutionC, setShowCustomerSolutionC] = React.useState(false);
  const [showCustomerAnalysis, setShowCustomerAnalysis] = React.useState(false);

  // Theme and Language State
  const [theme, setTheme] = React.useState<Theme>('dark');
  const [language, setLanguage] = React.useState<Language>('de');
  const [systemTheme, setSystemTheme] = React.useState<'light' | 'dark'>('dark');

  // Check system theme preference
  React.useEffect(() => {
    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
    setSystemTheme(mediaQuery.matches ? 'dark' : 'light');
    
    const handleChange = (e: MediaQueryListEvent) => {
      setSystemTheme(e.matches ? 'dark' : 'light');
    };
    
    mediaQuery.addEventListener('change', handleChange);
    return () => mediaQuery.removeEventListener('change', handleChange);
  }, []);

  // Load saved preferences
  React.useEffect(() => {
    const savedTheme = localStorage.getItem('theme') as Theme;
    const savedLanguage = localStorage.getItem('language') as Language;
    
    if (savedTheme) setTheme(savedTheme);
    if (savedLanguage) setLanguage(savedLanguage);
  }, []);

  // Save preferences
  React.useEffect(() => {
    localStorage.setItem('theme', theme);
    localStorage.setItem('language', language);
  }, [theme, language]);

  // Determine current theme
  const currentTheme = theme === 'system' ? systemTheme : theme;
  const isDark = currentTheme === 'dark';

  // Get current translations
  const t = getTranslation(language);
  const translatedTitle = useTypingEffect(t.title, 60);

  // Reset function to go back to main menu
  const resetToMenu = () => {
    setCurrentExercise(null);
    // Reset Exercise 1 states
    setShowProblem(false);
    setShowCalculatedTable(false);
    setShowSolutionA(false);
    setShowSolutionB(false);
    setShowCompleteAnalysis(false);
    // Reset Exercise 2 states
    setShowCustomerProblem(false);
    setShowCustomerTable(false);
    setShowCustomerSolutionA(false);
    setShowCustomerSolutionB(false);
    setShowCustomerSolutionC(false);
    setShowCustomerAnalysis(false);
  };

  return (
    <>
      <style jsx global>{`
        @import url('https://fonts.googleapis.com/css2?family=Tektur:wght@400;500;600;700&display=swap');
        * {
          font-family: 'Tektur', monospace !important;
        }
        body {
          font-family: 'Tektur', monospace !important;
        }
      `}</style>
      <div className={`min-h-screen flex flex-col p-3 sm:p-6 transition-colors duration-300 ${
        isDark 
          ? 'bg-gradient-to-br from-black via-gray-900 to-green-900' 
          : 'bg-gradient-to-br from-slate-50 via-gray-100 to-blue-50'
      }`} style={{fontFamily: 'Tektur, monospace'}}>
        
        {/* Header Controls */}
        <div className="fixed top-2 right-2 sm:top-4 sm:right-4 flex gap-1 sm:gap-2 z-50">
          {/* Language Selector */}
          <div className="relative group">
            <button className={`p-1.5 sm:p-2 rounded-lg transition-colors text-sm sm:text-base ${
              isDark 
                ? 'bg-gray-900 hover:bg-gray-800 text-green-400 border border-green-700' 
                : 'bg-white hover:bg-gray-50 text-slate-800 border border-gray-200'
            } shadow-lg`}>
              üåê
            </button>
            <div className={`absolute right-0 top-10 sm:top-12 rounded-lg shadow-xl border opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 ${
              isDark 
                ? 'bg-gray-900 border-green-700' 
                : 'bg-white border-gray-200'
            }`}>
              <div className="p-2 min-w-32 sm:min-w-48">
                <div className={`text-xs font-semibold mb-2 px-2 ${isDark ? 'text-green-400' : 'text-slate-600'}`}>
                  {t.language}
                </div>
                {Object.entries(languageNames).map(([code, name]) => (
                  <button
                    key={code}
                    onClick={() => setLanguage(code as Language)}
                    className={`w-full text-left px-2 py-1 rounded text-xs sm:text-sm transition-colors ${
                      language === code
                        ? isDark ? 'bg-green-700 text-green-100' : 'bg-green-100 text-green-800'
                        : isDark ? 'hover:bg-gray-800 text-gray-300' : 'hover:bg-gray-100 text-slate-700'
                    }`}
                  >
                    {name}
                  </button>
                ))}
              </div>
            </div>
          </div>

          {/* Theme Selector */}
          <div className="relative group">
            <button className={`p-1.5 sm:p-2 rounded-lg transition-colors text-sm sm:text-base ${
              isDark 
                ? 'bg-gray-900 hover:bg-gray-800 text-green-400 border border-green-700' 
                : 'bg-white hover:bg-gray-50 text-slate-800 border border-gray-200'
            } shadow-lg`}>
              {theme === 'light' ? '‚òÄÔ∏è' : theme === 'dark' ? 'üåô' : 'üíª'}
            </button>
            <div className={`absolute right-0 top-10 sm:top-12 rounded-lg shadow-xl border opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 ${
              isDark 
                ? 'bg-gray-900 border-green-700' 
                : 'bg-white border-gray-200'
            }`}>
              <div className="p-2 min-w-24 sm:min-w-32">
                <div className={`text-xs font-semibold mb-2 px-2 ${isDark ? 'text-green-400' : 'text-slate-600'}`}>
                  {t.theme}
                </div>
                {(['light', 'dark', 'system'] as Theme[]).map((themeOption) => (
                  <button
                    key={themeOption}
                    onClick={() => setTheme(themeOption)}
                    className={`w-full text-left px-2 py-1 rounded text-xs sm:text-sm transition-colors flex items-center gap-1 sm:gap-2 ${
                      theme === themeOption
                        ? isDark ? 'bg-green-700 text-green-100' : 'bg-green-100 text-green-800'
                        : isDark ? 'hover:bg-gray-800 text-gray-300' : 'hover:bg-gray-100 text-slate-700'
                    }`}
                  >
                    <span>{themeOption === 'light' ? '‚òÄÔ∏è' : themeOption === 'dark' ? 'üåô' : 'üíª'}</span>
                    {t[themeOption as keyof typeof t]}
                  </button>
                ))}
              </div>
            </div>
          </div>
        </div>

        <div className="flex-1 flex flex-col items-center justify-center px-2 sm:px-0">
          <h1 className={`text-2xl sm:text-3xl lg:text-4xl font-bold mb-6 sm:mb-8 font-[Tektur,monospace] tracking-wide text-center ${
            isDark ? 'text-green-400' : 'text-slate-800'
          }`} style={{fontFamily: 'Tektur, monospace'}}>
            {translatedTitle}
          </h1>
        
          {/* Main Menu */}
          {!currentExercise && (
            <div className={`rounded-xl shadow-xl p-4 sm:p-6 lg:p-8 w-full max-w-xs sm:max-w-2xl lg:max-w-5xl border transition-colors ${
              isDark 
                ? 'bg-gray-950/90 border-green-800' 
                : 'bg-white border-gray-200'
            }`} style={{fontFamily: 'Tektur, monospace'}}>
              <h2 className={`text-lg sm:text-xl lg:text-2xl font-semibold mb-6 sm:mb-8 text-center font-[Tektur,monospace] ${
                isDark ? 'text-green-400' : 'text-slate-700'
              }`}>{t.availableExercises}</h2>
              
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6">
                {/* Exercise 1 - Sirius AG */}
                <div className={`border rounded-lg p-4 sm:p-6 hover:shadow-lg transition-all duration-300 ${
                  isDark 
                    ? 'bg-gradient-to-br from-gray-900/80 to-gray-800/80 border-green-700 hover:border-green-600' 
                    : 'bg-gradient-to-br from-green-50 to-green-100 border-green-200 hover:border-green-300'
                }`}>
                  <h3 className={`text-lg sm:text-xl font-semibold mb-2 sm:mb-3 font-[Tektur,monospace] ${
                    isDark ? 'text-green-400' : 'text-green-800'
                  }`}>{t.exercise1}</h3>
                  <h4 className={`text-base sm:text-lg mb-2 sm:mb-3 font-[Tektur,monospace] ${
                    isDark ? 'text-green-300' : 'text-blue-700'
                  }`}>{t.exercise1Title}</h4>
                  <p className={`mb-4 text-sm leading-relaxed ${
                    isDark ? 'text-gray-300' : 'text-slate-600'
                  }`}>{t.exercise1Desc}</p>
                  <div className="flex flex-wrap gap-1 sm:gap-2 mb-4 sm:mb-6">
                    <span className={`px-2 sm:px-3 py-1 rounded-full text-xs font-medium ${
                      isDark ? 'bg-green-800/50 text-green-300' : 'bg-green-200 text-green-800'
                    }`}>{t.marketAnalysis}</span>
                    <span className={`px-2 sm:px-3 py-1 rounded-full text-xs font-medium ${
                      isDark ? 'bg-green-800/50 text-green-300' : 'bg-green-200 text-green-800'
                    }`}>{t.percentageCalculation}</span>
                    <span className={`px-2 sm:px-3 py-1 rounded-full text-xs font-medium ${
                      isDark ? 'bg-green-800/50 text-green-300' : 'bg-green-200 text-green-800'
                    }`}>{t.trendCalculation}</span>
                  </div>
                  <button
                    onClick={() => setCurrentExercise('sirius')}
                    className={`w-full font-semibold py-2 sm:py-3 px-3 sm:px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm text-sm sm:text-base ${
                      isDark 
                        ? 'bg-green-700 hover:bg-green-600 text-black' 
                        : 'bg-blue-600 hover:bg-blue-700 text-white'
                    }`}
                    style={{fontFamily: 'Tektur, monospace'}}
                  >
                    {t.startExercise}
                  </button>
                </div>
                
                {/* Exercise 2 - Customer Survey */}
                <div className={`border rounded-lg p-4 sm:p-6 hover:shadow-lg transition-all duration-300 ${
                  isDark 
                    ? 'bg-gradient-to-br from-gray-900/80 to-gray-800/80 border-green-700 hover:border-green-600' 
                    : 'bg-gradient-to-br from-emerald-50 to-emerald-100 border-emerald-200 hover:border-emerald-300'
                }`}>
                  <h3 className={`text-lg sm:text-xl font-semibold mb-2 sm:mb-3 font-[Tektur,monospace] ${
                    isDark ? 'text-green-400' : 'text-emerald-800'
                  }`}>{t.exercise2}</h3>
                  <h4 className={`text-base sm:text-lg mb-2 sm:mb-3 font-[Tektur,monospace] ${
                    isDark ? 'text-green-300' : 'text-emerald-700'
                  }`}>{t.exercise2Title}</h4>
                  <p className={`mb-4 text-sm leading-relaxed ${
                    isDark ? 'text-gray-300' : 'text-slate-600'
                  }`}>{t.exercise2Desc}</p>
                  <div className="flex flex-wrap gap-1 sm:gap-2 mb-4 sm:mb-6">
                    <span className={`px-2 sm:px-3 py-1 rounded-full text-xs font-medium ${
                      isDark ? 'bg-green-800/50 text-green-300' : 'bg-emerald-200 text-emerald-800'
                    }`}>{t.customerSatisfaction}</span>
                    <span className={`px-2 sm:px-3 py-1 rounded-full text-xs font-medium ${
                      isDark ? 'bg-green-800/50 text-green-300' : 'bg-emerald-200 text-emerald-800'
                    }`}>{t.statistics}</span>
                    <span className={`px-2 sm:px-3 py-1 rounded-full text-xs font-medium ${
                      isDark ? 'bg-green-800/50 text-green-300' : 'bg-emerald-200 text-emerald-800'
                    }`}>{t.averageValues}</span>
                  </div>
                  <button
                    onClick={() => setCurrentExercise('customer')}
                    className={`w-full font-semibold py-2 sm:py-3 px-3 sm:px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm text-sm sm:text-base ${
                      isDark 
                        ? 'bg-green-700 hover:bg-green-600 text-black' 
                        : 'bg-emerald-600 hover:bg-emerald-700 text-white'
                    }`}
                    style={{fontFamily: 'Tektur, monospace'}}
                  >
                    {t.startExercise}
                  </button>
                </div>
              </div>
              
              <div className="mt-6 sm:mt-8 text-center">
                <p className={`text-xs sm:text-sm ${isDark ? 'text-gray-400' : 'text-slate-500'}`}>{t.selectExercise}</p>
              </div>
            </div>
          )}

        {/* Exercise 1 - Sirius AG */}
        {currentExercise === 'sirius' && (
          <div className={`rounded-xl shadow-xl p-4 sm:p-6 lg:p-8 w-full max-w-xs sm:max-w-4xl lg:max-w-6xl border transition-colors ${
            isDark 
              ? 'bg-gray-950/90 border-green-800' 
              : 'bg-white border-gray-200'
          }`} style={{fontFamily: 'Tektur, monospace'}}>
            {/* Back to Menu Button */}
            <div className="mb-4 sm:mb-6">
              <button
                onClick={resetToMenu}
                className={`font-semibold py-1.5 sm:py-2 px-3 sm:px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm text-sm sm:text-base ${
                  isDark 
                    ? 'bg-gray-800 hover:bg-gray-700 text-green-400 border border-green-700' 
                    : 'bg-slate-600 hover:bg-slate-700 text-white'
                }`}
                style={{fontFamily: 'Tektur, monospace'}}
              >
                ‚Üê {t.backToMenu}
              </button>
            </div>
            
            <h2 className={`text-xl sm:text-2xl lg:text-3xl font-semibold mb-6 sm:mb-8 text-center font-[Tektur,monospace] ${
              isDark ? 'text-green-400' : 'text-slate-800'
            }`}>{t.exercise1Title}</h2>

            {/* Introduction and Problem Statement */}
          <div className="mb-6 sm:mb-8">
            <div className="text-center mb-4 sm:mb-6">
              <button
                onClick={() => setShowProblem(!showProblem)}
                className={`font-semibold py-2 sm:py-3 px-4 sm:px-6 rounded-lg transition-all duration-200 shadow-sm font-[Tektur,monospace] text-sm sm:text-base ${
                  isDark 
                    ? 'bg-green-700 hover:bg-green-600 text-black' 
                    : 'bg-blue-600 hover:bg-blue-700 text-white'
                }`}
                style={{fontFamily: 'Tektur, monospace'}}
              >
                {showProblem ? t.hideTask : t.showTask}
              </button>
            </div>
            
            {showProblem && (
              <div className={`border rounded-xl p-4 sm:p-6 mb-4 sm:mb-6 transition-colors ${
                isDark 
                  ? 'bg-gray-900/50 border-green-700' 
                  : 'bg-green-50 border-green-200'
              }`}>
                <h3 className={`text-lg sm:text-xl font-semibold mb-3 sm:mb-4 font-[Tektur,monospace] ${
                  isDark ? 'text-green-400' : 'text-green-800'
                }`}>{t.taskStatement}</h3>
                <div className={`rounded-lg p-3 sm:p-4 leading-relaxed shadow-sm ${
                  isDark ? 'bg-gray-950/70 text-gray-300' : 'bg-white text-slate-700'
                }`}>
                  <p className="mb-3 sm:mb-4 text-sm sm:text-base">
                    <strong>{t.siriusTask}</strong>
                  </p>
                  <p className="mb-3 sm:mb-4 text-sm sm:text-base">{t.dataAvailable}</p>
                  
                  <div className={`rounded p-2 sm:p-3 mb-3 sm:mb-4 font-mono text-xs sm:text-sm overflow-x-auto ${
                    isDark ? 'bg-black/50' : 'bg-gray-900/80'
                  }`}>
                    <div className="min-w-max">
                      <div className="grid grid-cols-3 gap-2 sm:gap-4 text-center">
                        <div className="text-green-400 font-semibold">{t.period}</div>
                        <div className="text-green-400 font-semibold">{t.industry}</div>
                        <div className="text-green-400 font-semibold">{t.sirius}</div>
                        {data.map((row) => (
                          <React.Fragment key={row.halbjahr}>
                            <div className="text-green-300">{translatePeriod(row.halbjahr, t)}</div>
                            <div className="text-green-300">{row.branche}</div>
                            <div className="text-green-300">{row.sirius}</div>
                          </React.Fragment>
                        ))}
                      </div>
                    </div>
                  </div>
                  
                  <div className="space-y-2 sm:space-y-3">
                    <div className={`border-l-4 pl-3 sm:pl-4 ${
                      isDark 
                        ? 'bg-yellow-900/20 border-yellow-400' 
                        : 'bg-yellow-900/30 border-yellow-500'
                    }`}>
                      <strong className={`text-sm sm:text-base ${isDark ? 'text-yellow-400' : 'text-yellow-300'}`}>{t.taskLabelA}</strong>
                      <p className={`text-xs sm:text-sm ${isDark ? 'text-gray-300' : 'text-gray-700'}`}>{t.taskA}</p>
                    </div>
                    <div className={`border-l-4 pl-3 sm:pl-4 ${
                      isDark 
                        ? 'bg-yellow-900/20 border-yellow-400' 
                        : 'bg-yellow-900/30 border-yellow-500'
                    }`}>
                      <strong className={`text-sm sm:text-base ${isDark ? 'text-yellow-400' : 'text-yellow-300'}`}>{t.taskLabelB}</strong>
                      <p className={`text-xs sm:text-sm ${isDark ? 'text-gray-300' : 'text-gray-700'}`}>{t.taskB}</p>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* Data Table - Always visible when problem is shown */}
          {showProblem && (
            <div className="mb-6 sm:mb-8">
              <div className="text-center mb-4 sm:mb-6">
                <button
                  onClick={() => setShowCalculatedTable(!showCalculatedTable)}
                  className="bg-slate-600 hover:bg-slate-700 text-white font-semibold py-2 sm:py-3 px-4 sm:px-6 rounded-lg transition-all duration-200 shadow-sm font-[Tektur,monospace] text-sm sm:text-base"
                  style={{fontFamily: 'Tektur, monospace'}}
                >
                  {showCalculatedTable ? t.hideCalculatedShares : t.showCalculatedShares}
                </button>
              </div>
              
              {showCalculatedTable && (
                <div className={`border rounded-xl p-3 sm:p-4 lg:p-6 ${
                  isDark ? 'bg-slate-800/60 border-slate-600' : 'bg-slate-50 border-slate-200'
                }`}>
                  <h3 className={`text-lg sm:text-xl font-semibold mb-3 sm:mb-4 font-[Tektur,monospace] ${
                    isDark ? 'text-slate-200' : 'text-slate-800'
                  }`}>{t.calculatedShares}</h3>
                  
                  <div className={`rounded-lg p-3 sm:p-4 mb-4 sm:mb-6 shadow-sm ${
                    isDark ? 'bg-gray-950/50 text-gray-300' : 'bg-white text-slate-700'
                  }`}>
                    <h4 className={`font-semibold mb-2 sm:mb-3 text-sm sm:text-base ${
                      isDark ? 'text-gray-200' : 'text-slate-700'
                    }`}>
                      {t.calculationBasis}
                    </h4>
                    <div className={`space-y-2 sm:space-y-3 text-xs sm:text-sm ${
                      isDark ? 'text-gray-300' : 'text-slate-600'
                    }`}>
                      <p className="text-sm sm:text-base"><strong>{t.basicFormula}</strong></p>
                      <div className={`p-2 sm:p-3 rounded font-mono text-center border text-xs sm:text-sm ${
                        isDark ? 'bg-green-900/30 border-green-700 text-green-300' : 'bg-green-50 border-green-200 text-green-800'
                      }`}>
                        <span>{t.basicFormulaText}</span>
                      </div>
                      <p className="text-sm sm:text-base"><strong>{t.exampleCalc}</strong></p>
                      <div className={`p-2 sm:p-3 rounded font-mono border text-xs sm:text-sm ${
                        isDark ? 'bg-slate-800/50 border-slate-600 text-gray-300' : 'bg-slate-50 border-slate-300 text-slate-700'
                      }`}>
                        <div>{t.siriusRevenue}: 1.6 Mio ‚Ç¨</div>
                        <div>{t.industryRevenue}: 20.0 Mio ‚Ç¨</div>
                        <div className="text-green-400 mt-1 sm:mt-2">{t.marketShareTerm} = (1.6 / 20.0) √ó 100 = 8.00%</div>
                      </div>
                      <p className="text-sm sm:text-base"><strong>{t.calculateIncrease}:</strong></p>
                      <div className="bg-gray-700 p-2 sm:p-3 rounded font-mono text-xs sm:text-sm">
                        <span className="text-yellow-400">{t.percentageIncreaseFormula2}</span>
                      </div>
                    </div>
                  </div>
                  
                  {/* Ultra-compact mobile-first responsive table */}
                  <div className="mb-6 sm:mb-8">
                    {/* Ultra-compact Mobile Layout */}
                    <div className="block lg:hidden">
                      {/* Compact grid for small screens */}
                      <div className="grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-3">
                        {marketShares.map((row, index) => {
                          const percentageIncrease = index === 0 ? null : 
                            ((row.marketShare - marketShares[index - 1].marketShare) / marketShares[index - 1].marketShare) * 100;
                          
                          return (
                            <div key={row.halbjahr} className="bg-gray-800/60 rounded-md p-2 border border-gray-700">
                              <div className="text-green-400 font-bold text-xs mb-2 text-center border-b border-gray-600 pb-1">
                                {translatePeriod(row.halbjahr, t)}
                              </div>
                              <div className="space-y-1">
                                <div className="flex justify-between items-center text-xs">
                                  <span className="text-green-300 truncate pr-1">Industry</span>
                                  <span className="text-white font-medium">{row.branche.toFixed(1)}</span>
                                </div>
                                <div className="flex justify-between items-center text-xs">
                                  <span className="text-green-300 truncate pr-1">Sirius</span>
                                  <span className="text-white font-medium">{row.sirius.toFixed(1)}</span>
                                </div>
                                <div className="flex justify-between items-center text-xs">
                                  <span className="text-green-300 truncate pr-1">Share</span>
                                  <span className={`font-bold ${
                                    (showSolutionA && row.halbjahr === maxShare.halbjahr) 
                                      ? "bg-green-900/60 text-green-200 px-1 py-0.5 rounded text-xs" 
                                      : "text-white"
                                  }`}>
                                    {row.marketShare.toFixed(2)}%
                                  </span>
                                </div>
                                <div className="flex justify-between items-center text-xs">
                                  <span className="text-green-300 truncate pr-1">Change</span>
                                  <span className={`text-xs ${
                                    (showSolutionB && maxInc.to && row.halbjahr === maxInc.to.halbjahr)
                                      ? "bg-yellow-900/60 text-yellow-200 font-bold px-1 py-0.5 rounded"
                                      : ""
                                  }`}>
                                    {percentageIncrease === null ? 
                                      <span className="text-gray-500">‚Äî</span> : 
                                      <span className={`font-bold ${percentageIncrease >= 0 ? "text-green-400" : "text-red-400"}`}>
                                        {percentageIncrease >= 0 ? "+" : ""}{percentageIncrease.toFixed(1)}%
                                      </span>
                                    }
                                  </span>
                                </div>
                              </div>
                            </div>
                          );
                        })}
                      </div>
                    </div>
                    
                    {/* Desktop Table Layout */}
                    <div className="hidden lg:block overflow-x-auto">
                      <table className="w-full text-gray-200 border-separate border-spacing-y-1 sm:border-spacing-y-2">
                        <thead>
                          <tr className="text-green-400 text-sm sm:text-lg">
                            <th className="p-2 text-left text-base">{t.dataType}</th>
                            {marketShares.map((row) => (
                              <th key={row.halbjahr} className="p-2 text-center text-base">{translatePeriod(row.halbjahr, t)}</th>
                            ))}
                          </tr>
                        </thead>
                        <tbody>
                          {/* Branche Row */}
                          <tr className="bg-gray-800/60 hover:bg-gray-700/50 transition-all duration-200">
                            <td className="p-2 rounded-l-lg font-medium text-green-300 text-base">{t.industryRevenueMio}</td>
                            {marketShares.map((row) => (
                              <td key={row.halbjahr} className="p-2 text-center text-base">{row.branche.toFixed(1)}</td>
                            ))}
                          </tr>
                          
                          {/* Sirius AG Row */}
                          <tr className="bg-gray-800/60 hover:bg-gray-700/50 transition-all duration-200">
                            <td className="p-2 rounded-l-lg font-medium text-green-300 text-base">{t.siriusRevenueMio}</td>
                            {marketShares.map((row) => (
                              <td key={row.halbjahr} className="p-2 text-center text-base">{row.sirius.toFixed(1)}</td>
                            ))}
                          </tr>
                          
                          {/* Marktanteil Row */}
                          <tr className="bg-gray-800/60 hover:bg-gray-700/50 transition-all duration-200">
                            <td className="p-2 rounded-l-lg font-medium text-green-300 text-base">{t.marketSharePercent}</td>
                            {marketShares.map((row) => (
                              <td 
                                key={row.halbjahr} 
                                className={`p-2 text-center font-bold text-base ${
                                  (showSolutionA && row.halbjahr === maxShare.halbjahr) 
                                    ? "bg-green-900/60 text-green-200 shadow-lg rounded" 
                                    : ""
                                }`}
                              >
                                {row.marketShare.toFixed(2)}
                              </td>
                            ))}
                          </tr>
                          
                          {/* Anstieg Row */}
                          <tr className="bg-gray-800/60 hover:bg-gray-700/50 transition-all duration-200">
                            <td className="p-2 rounded-l-lg font-medium text-green-300 text-base">{t.increasePercent}</td>
                            {marketShares.map((row, index) => {
                              const percentageIncrease = index === 0 ? null : 
                                ((row.marketShare - marketShares[index - 1].marketShare) / marketShares[index - 1].marketShare) * 100;
                              
                              return (
                                <td 
                                  key={row.halbjahr} 
                                  className={`p-2 text-center text-base ${
                                    (showSolutionB && maxInc.to && row.halbjahr === maxInc.to.halbjahr)
                                      ? "bg-yellow-900/60 text-yellow-200 font-bold shadow-lg rounded"
                                      : ""
                                  }`}
                                >
                                  {percentageIncrease === null ? 
                                    <span className="text-gray-500">‚Äî</span> : 
                                    <span className={`font-bold ${percentageIncrease >= 0 ? "text-green-400" : "text-red-400"}`}>
                                      {percentageIncrease >= 0 ? "+" : ""}{percentageIncrease.toFixed(2)}%
                                    </span>
                                  }
                                </td>
                              );
                            })}
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                  
                  <div className="bg-green-900/30 rounded-lg p-3 sm:p-4 border-l-4 border-green-500">
                    <h4 className="text-green-300 font-semibold mb-2 sm:mb-3 text-sm sm:text-base">üîç {t.stepByStepExplanation}</h4>
                    <ol className="list-decimal list-inside space-y-1 sm:space-y-2 text-gray-200 text-xs sm:text-sm">
                      <li><strong>{t.step1}</strong> {t.step1Description}</li>
                      <li><strong>{t.step2}</strong> {t.step2Description}</li>
                      <li><strong>{t.step3}</strong> {t.step3Description}</li>
                      <li><strong>{t.step4}</strong> {t.step4Description}</li>
                    </ol>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* Solution Buttons */}
          {showProblem && showCalculatedTable && (
            <div className="flex flex-wrap gap-2 sm:gap-4 justify-center mb-6 sm:mb-8">
              <button
                onClick={() => setShowSolutionA(!showSolutionA)}
                className="bg-green-600 hover:bg-green-700 text-white font-bold py-1.5 sm:py-2 px-3 sm:px-4 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg font-[Tektur,monospace] text-sm sm:text-base"
                style={{fontFamily: 'Tektur, monospace'}}
              >
                {showSolutionA ? t.solutionAHide : t.solutionA}
              </button>
              
              <button
                onClick={() => setShowSolutionB(!showSolutionB)}
                className="bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-1.5 sm:py-2 px-3 sm:px-4 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg font-[Tektur,monospace] text-sm sm:text-base"
                style={{fontFamily: 'Tektur, monospace'}}
              >
                {showSolutionB ? t.solutionBHide : t.solutionB}
              </button>
              
              <button
                onClick={() => setShowCompleteAnalysis(!showCompleteAnalysis)}
                className="bg-purple-600 hover:bg-purple-700 text-white font-bold py-1.5 sm:py-2 px-3 sm:px-4 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg font-[Tektur,monospace] text-sm sm:text-base"
                style={{fontFamily: 'Tektur, monospace'}}
              >
                {showCompleteAnalysis ? t.hideCompleteAnalysis : t.showCompleteAnalysis}
              </button>
            </div>
          )}

          {/* Solution A */}
          {showSolutionA && (
            <div className="mb-6 bg-green-900/20 border border-green-600 rounded-xl p-6">
              <h2 className="text-2xl text-green-300 font-semibold mb-4 font-[Tektur,monospace]">‚úÖ {t.solutionATitle}</h2>
              <div className="bg-gray-800/60 rounded-lg p-4">
                <p className="text-gray-100 text-lg mb-4">
                  <span className="text-green-400 font-bold">{translatePeriod(maxShare.halbjahr, t)}</span> {t.hadHighestMarketShare} <span className="text-green-400 font-bold">{maxShare.marketShare.toFixed(2)}%</span>.
                </p>
                
                <div className="bg-green-900/30 rounded-lg p-4 border-l-4 border-green-500">
                  <h4 className="text-green-300 font-semibold mb-3">üí° {t.calculationExplanation}</h4>
                  <div className="space-y-2 text-gray-200">
                    <p><strong>{t.formula}</strong> <span className="bg-gray-700 px-2 py-1 rounded font-mono">{t.marketShareFormulaSpecific}</span></p>
                    <p><strong>{t.example} {translatePeriod(maxShare.halbjahr, t)}:</strong></p>
                    <p className="ml-4 font-mono bg-gray-700 p-2 rounded">
                      {t.marketShareTerm} = ({maxShare.sirius} Mio ‚Ç¨ / {maxShare.branche} Mio ‚Ç¨) √ó 100 = {maxShare.marketShare.toFixed(2)}%
                    </p>
                    <p><strong>{t.meaning}</strong> {t.strongestMarketPosition}</p>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Solution B */}
          {showSolutionB && (
            <div className="mb-6 bg-yellow-900/20 border border-yellow-600 rounded-xl p-6">
              <h2 className="text-2xl text-yellow-300 font-semibold mb-4 font-[Tektur,monospace]">‚úÖ {t.solutionBTitle}</h2>
              <div className="bg-gray-800/60 rounded-lg p-4">
                <p className="text-gray-100 text-lg mb-4">
                  {maxInc.from && maxInc.to ? (
                    <>
                      {t.largestPercentageIncrease} <span className="text-yellow-400 font-bold">{translatePeriod(maxInc.from.halbjahr, t)}</span> ({maxInc.from.marketShare.toFixed(2)}%) {t.to} <span className="text-yellow-400 font-bold">{translatePeriod(maxInc.to.halbjahr, t)}</span> ({maxInc.to.marketShare.toFixed(2)}%) {t.withIncrease} <span className="text-yellow-400 font-bold">{maxInc.percentageIncrease.toFixed(2)}%</span>.
                    </>
                  ) : (
                    t.notAvailable
                  )}
                </p>
                
                <div className="bg-yellow-900/30 rounded-lg p-4 border-l-4 border-yellow-500">
                  <h4 className="text-yellow-300 font-semibold mb-3">üí° {t.calculationExplanation}</h4>
                  <div className="space-y-2 text-gray-200">
                    <p><strong>{t.formula}</strong> <span className="bg-gray-700 px-2 py-1 rounded font-mono">{t.percentageIncreaseFormula}</span></p>
                    {maxInc.from && maxInc.to && (
                      <>
                        <p><strong>{t.calculation}</strong></p>
                        <p className="ml-4 font-mono bg-gray-700 p-2 rounded">
                          ({maxInc.to.marketShare.toFixed(2)}% - {maxInc.from.marketShare.toFixed(2)}%) / {maxInc.from.marketShare.toFixed(2)}% √ó 100 = {maxInc.percentageIncrease.toFixed(2)}%
                        </p>
                        <p><strong>{t.absoluteIncrease}</strong> {maxInc.increase.toFixed(2)} {t.percentagePoints}</p>
                      </>
                    )}
                    <p><strong>{t.meaning}</strong> {t.meaningLargestGrowth}</p>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Complete Analysis */}
          {showCompleteAnalysis && (
            <div className="bg-purple-900/20 border border-purple-600 rounded-xl p-6">
              <h2 className="text-2xl text-purple-300 font-semibold mb-4 font-[Tektur,monospace]">üîç {t.stepByStepAnalysis}</h2>
              <div className="bg-gray-800/60 rounded-lg p-4">
                <div className="grid md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <h4 className="text-purple-300 font-semibold text-lg">üìù {t.methodicalApproach}</h4>
                    <ol className="list-decimal list-inside space-y-3 text-gray-200">
                      <li className="bg-gray-700/50 p-3 rounded">
                        <strong className="text-green-400">{t.dataCollection}</strong><br/>
                        <span className="text-sm">{t.collectRevenueData}</span>
                      </li>
                      <li className="bg-gray-700/50 p-3 rounded">
                        <strong className="text-green-400">{t.calculateMarketShare}</strong><br/>
                        <span className="text-sm">{t.applyFormula}</span>
                      </li>
                      <li className="bg-gray-700/50 p-3 rounded">
                        <strong className="text-green-400">{t.identifyMaximum}</strong><br/>
                        <span className="text-sm">{t.compareAllShares}</span>
                      </li>
                      <li className="bg-gray-700/50 p-3 rounded">
                        <strong className="text-green-400">{t.calculateIncreaseRates}</strong><br/>
                        <span className="text-sm">{t.percentageChanges}</span>
                      </li>
                    </ol>
                  </div>
                  
                  <div className="space-y-4">
                    <h4 className="text-purple-300 font-semibold text-lg">üìä {t.importantInsights}</h4>
                    <div className="space-y-3">
                      <div className="bg-green-900/30 p-3 rounded border-l-4 border-green-500">
                        <strong className="text-green-400">{t.highestMarketShare}</strong><br/>
                        <span className="text-sm">{translatePeriod(maxShare.halbjahr, t)} {t.with} {maxShare.marketShare.toFixed(2)}% - {t.showsStrongestPosition}</span>
                      </div>
                      <div className="bg-yellow-900/30 p-3 rounded border-l-4 border-yellow-500">
                        <strong className="text-yellow-400">{t.strongestIncrease}</strong><br/>
                        <span className="text-sm">{maxInc.percentageIncrease?.toFixed(2)}% {t.showsDynamicDevelopment}</span>
                      </div>
                      <div className="bg-green-900/30 p-3 rounded border-l-4 border-green-500">
                        <strong className="text-green-400">{t.trendAnalysis}</strong><br/>
                        <span className="text-sm">{t.continuousGrowth}</span>
                      </div>
                      <div className="bg-gray-700/50 p-3 rounded border-l-4 border-gray-500">
                        <strong className="text-gray-300">{t.businessRelevance}</strong><br/>
                        <span className="text-sm">{t.positiveMarketDevelopment}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
          </div>
        )}

        {/* Exercise 2 - Customer Survey */}
        {currentExercise === 'customer' && (
          <div className={`rounded-xl shadow-xl p-4 sm:p-6 lg:p-8 w-full max-w-xs sm:max-w-4xl lg:max-w-6xl border transition-colors ${
            isDark 
              ? 'bg-gray-950/90 border-green-800' 
              : 'bg-white border-gray-200'
          }`} style={{fontFamily: 'Tektur, monospace'}}>
            {/* Back to Menu Button */}
            <div className="mb-4 sm:mb-6">
              <button
                onClick={resetToMenu}
                className={`font-semibold py-1.5 sm:py-2 px-3 sm:px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm text-sm sm:text-base ${
                  isDark 
                    ? 'bg-gray-800 hover:bg-gray-700 text-green-400 border border-green-700' 
                    : 'bg-slate-600 hover:bg-slate-700 text-white'
                }`}
                style={{fontFamily: 'Tektur, monospace'}}
              >
                ‚Üê {t.backToMenu}
              </button>
            </div>
            
            <h2 className={`text-xl sm:text-2xl lg:text-3xl font-semibold mb-6 sm:mb-8 text-center font-[Tektur,monospace] ${
              isDark ? 'text-green-400' : 'text-slate-800'
            }`}>{t.exercise2Title}</h2>

            {/* Introduction and Problem Statement */}
            <div className={`border rounded-xl p-4 sm:p-6 mb-4 sm:mb-6 transition-colors ${
              isDark 
                ? 'bg-gray-900/50 border-green-700' 
                : 'bg-emerald-50 border-emerald-200'
            }`} style={{fontFamily: 'Tektur, monospace'}}>
              <div className="flex items-center gap-2 sm:gap-4 mb-3 sm:mb-4">
                <h3 className={`text-lg sm:text-xl font-semibold font-[Tektur,monospace] ${
                  isDark ? 'text-green-400' : 'text-emerald-800'
                }`}>{t.taskDescription}</h3>
              </div>
              
              {!showCustomerProblem ? (
                <button
                  onClick={() => setShowCustomerProblem(true)}
                  className={`font-semibold py-2 sm:py-3 px-4 sm:px-6 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm text-sm sm:text-base ${
                    isDark 
                      ? 'bg-green-700 hover:bg-green-600 text-black' 
                      : 'bg-emerald-600 hover:bg-emerald-700 text-white'
                  }`}
                  style={{fontFamily: 'Tektur, monospace'}}
                >
                  {t.showTask}
                </button>
              ) : (
                <div className={`leading-relaxed text-sm sm:text-base ${isDark ? 'text-gray-300' : 'text-slate-700'}`}>
                  <p className="mb-3 sm:mb-4">
                    {t.surveyDescription}
                  </p>
                  <p className={`mb-3 sm:mb-4 font-semibold ${
                    isDark ? 'text-green-400' : 'text-emerald-700'
                  }`}>
                    {t.gradeSystem}
                  </p>
                  <div className={`border p-3 sm:p-4 rounded-lg mb-3 sm:mb-4 shadow-sm ${
                    isDark 
                      ? 'bg-gray-950/70 border-green-700' 
                      : 'bg-white border-emerald-200'
                  }`}>
                    <p className={`font-semibold mb-2 text-sm sm:text-base ${
                      isDark ? 'text-green-400' : 'text-slate-800'
                    }`}>{t.tasks}</p>
                    <ul className={`list-disc list-inside space-y-1 text-xs sm:text-sm ${
                      isDark ? 'text-gray-300' : 'text-slate-600'
                    }`}>
                      <li><strong>a)</strong> {t.taskCustomerA}</li>
                      <li><strong>b)</strong> {t.taskCustomerB}</li>
                      <li><strong>c)</strong> {t.taskCustomerC}</li>
                    </ul>
                  </div>
                </div>
              )}
            </div>

            {/* Data Table */}
            {showCustomerProblem && (
              <div className={`border rounded-xl p-4 sm:p-6 mb-4 sm:mb-6 transition-colors ${
                isDark 
                  ? 'bg-gray-900/50 border-green-700' 
                  : 'bg-slate-50 border-slate-200'
              }`} style={{fontFamily: 'Tektur, monospace'}}>
                <div className="flex flex-col sm:flex-row sm:items-center justify-between mb-3 sm:mb-4 gap-3">
                  <div className="flex items-center gap-2 sm:gap-4">
                    <h3 className={`text-lg sm:text-xl font-semibold font-[Tektur,monospace] ${
                      isDark ? 'text-green-400' : 'text-slate-800'
                    }`}>{t.customerSurvey}</h3>
                  </div>
                  {!showCustomerTable && (
                    <button
                      onClick={() => setShowCustomerTable(true)}
                      className="bg-emerald-600 hover:bg-emerald-700 text-white font-semibold py-1.5 sm:py-2 px-3 sm:px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm text-sm sm:text-base"
                      style={{fontFamily: 'Tektur, monospace'}}
                    >
                      {t.showTableCustomer}
                    </button>
                  )}
                </div>
                
                {showCustomerTable && (
                  <div className="overflow-x-auto">
                    <div className="mb-3 sm:mb-4 p-3 sm:p-4 bg-blue-900/20 rounded-lg border border-blue-600">
                      <h4 className="text-base sm:text-lg font-semibold text-blue-300 mb-2 sm:mb-3 font-[Tektur,monospace]">üìä {t.ratingLegend}</h4>
                      <div className="grid grid-cols-3 sm:grid-cols-6 gap-1 sm:gap-2">
                        {[1, 2, 3, 4, 5, 6].map(grade => (
                          <div key={grade} className={`px-2 sm:px-3 py-1 sm:py-2 rounded-lg text-center text-xs sm:text-sm font-bold ${getGradeColor(grade)} font-[Tektur,monospace]`}>
                            <div className="sm:hidden">{grade}</div>
                            <div className="hidden sm:block">{grade} - {getGradeLabel(grade, t)}</div>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    {/* Ultra-compact mobile-first responsive customer table */}
                    <div>
                      {/* Ultra-compact Mobile Layout */}
                      <div className="block lg:hidden">
                        <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
                          {calculateCustomerAverages().map((customer, index) => (
                            <div key={customer.kunde} className={`rounded-md p-2 border border-gray-600 ${
                              index % 2 === 0 ? "bg-gray-800/50" : "bg-gray-900/50"
                            }`}>
                              <div className="text-green-200 font-bold text-xs mb-2 text-center border-b border-gray-600 pb-1 font-[Tektur,monospace]">
                                {customer.kunde}
                              </div>
                              <div className="space-y-1">
                                <div className="flex justify-between items-center text-xs">
                                  <span className="text-green-200 font-[Tektur,monospace] truncate pr-1">Func</span>
                                  <span className={`px-1 py-0.5 rounded font-bold text-xs ${getGradeColor(customer.funktion)} font-[Tektur,monospace]`}>
                                    {customer.funktion}
                                  </span>
                                </div>
                                <div className="flex justify-between items-center text-xs">
                                  <span className="text-green-200 font-[Tektur,monospace] truncate pr-1">Perf</span>
                                  <span className={`px-1 py-0.5 rounded font-bold text-xs ${getGradeColor(customer.leistung)} font-[Tektur,monospace]`}>
                                    {customer.leistung}
                                  </span>
                                </div>
                                <div className="flex justify-between items-center text-xs">
                                  <span className="text-green-200 font-[Tektur,monospace] truncate pr-1">Eco</span>
                                  <span className={`px-1 py-0.5 rounded font-bold text-xs ${getGradeColor(customer.oeko)} font-[Tektur,monospace]`}>
                                    {customer.oeko}
                                  </span>
                                </div>
                                <div className="flex justify-between items-center text-xs">
                                  <span className="text-green-200 font-[Tektur,monospace] truncate pr-1">Price</span>
                                  <span className={`px-1 py-0.5 rounded font-bold text-xs ${getGradeColor(customer.preis)} font-[Tektur,monospace]`}>
                                    {customer.preis}
                                  </span>
                                </div>
                                <div className="flex justify-between items-center border-t border-gray-600 pt-1 text-xs">
                                  <span className="text-green-300 font-bold font-[Tektur,monospace] truncate pr-1">Avg</span>
                                  <span className={`px-1 py-0.5 rounded font-bold text-xs ${getAverageGradeColor(customer.durchschnitt!)} font-[Tektur,monospace]`}>
                                    {customer.durchschnitt?.toFixed(2)}
                                  </span>
                                </div>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                      
                      {/* Desktop Table Layout */}
                      <div className="hidden lg:block overflow-x-auto">
                        <table className="w-full border-collapse border border-gray-600 rounded-lg overflow-hidden">
                          <thead>
                            <tr className="bg-green-800/50">
                              <th className="border border-gray-600 px-4 py-3 text-green-200 font-[Tektur,monospace] text-sm">{t.customer}</th>
                              <th className="border border-gray-600 px-4 py-3 text-green-200 font-[Tektur,monospace] text-sm">{t.function}</th>
                              <th className="border border-gray-600 px-4 py-3 text-green-200 font-[Tektur,monospace] text-sm">{t.performance}</th>
                              <th className="border border-gray-600 px-4 py-3 text-green-200 font-[Tektur,monospace] text-sm">{t.eco}</th>
                              <th className="border border-gray-600 px-4 py-3 text-green-200 font-[Tektur,monospace] text-sm">{t.price}</th>
                              <th className="border border-gray-600 px-4 py-3 text-green-300 font-[Tektur,monospace] text-sm">{t.average}</th>
                            </tr>
                          </thead>
                          <tbody>
                            {calculateCustomerAverages().map((customer, index) => (
                              <tr key={customer.kunde} className={index % 2 === 0 ? "bg-gray-800/50" : "bg-gray-900/50"}>
                                <td className="border border-gray-600 px-4 py-3 text-white font-bold font-[Tektur,monospace] text-sm">{customer.kunde}</td>
                                <td className="border border-gray-600 px-2 py-3 text-center font-[Tektur,monospace]">
                                  <span className={`px-3 py-1 rounded-lg font-bold text-sm ${getGradeColor(customer.funktion)}`}>
                                    {customer.funktion}
                                  </span>
                                </td>
                                <td className="border border-gray-600 px-2 py-3 text-center font-[Tektur,monospace]">
                                  <span className={`px-3 py-1 rounded-lg font-bold text-sm ${getGradeColor(customer.leistung)}`}>
                                    {customer.leistung}
                                  </span>
                                </td>
                                <td className="border border-gray-600 px-2 py-3 text-center font-[Tektur,monospace]">
                                  <span className={`px-3 py-1 rounded-lg font-bold text-sm ${getGradeColor(customer.oeko)}`}>
                                    {customer.oeko}
                                  </span>
                                </td>
                                <td className="border border-gray-600 px-2 py-3 text-center font-[Tektur,monospace]">
                                  <span className={`px-3 py-1 rounded-lg font-bold text-sm ${getGradeColor(customer.preis)}`}>
                                    {customer.preis}
                                  </span>
                                </td>
                                <td className="border border-gray-600 px-2 py-3 text-center font-[Tektur,monospace]">
                                  <span className={`px-3 py-2 rounded-lg font-bold text-sm ${getAverageGradeColor(customer.durchschnitt!)}`}>
                                    {customer.durchschnitt?.toFixed(2)}
                                  </span>
                                </td>
                              </tr>
                            ))}
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            )}

            {/* Solution A */}
            {showCustomerTable && (
              <div className="bg-green-50 border border-green-200 rounded-xl p-6 mb-6" style={{fontFamily: 'Tektur, monospace'}}>
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center gap-4">
                    <h3 className="text-xl font-semibold text-green-800 font-[Tektur,monospace]">{t.solutionALabel} (‚â§ 2,5)</h3>
                  </div>
                  {!showCustomerSolutionA && (
                    <button
                      onClick={() => setShowCustomerSolutionA(true)}
                      className="bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm"
                      style={{fontFamily: 'Tektur, monospace'}}
                    >
                      {t.showSolutionCustomer}
                    </button>
                  )}
                </div>
                
                {showCustomerSolutionA && (
                  <div className={`leading-relaxed ${
                    isDark ? 'text-gray-300' : 'text-slate-700'
                  }`}>
                    <div className={`border p-4 rounded-lg mb-4 shadow-sm ${
                      isDark ? 'bg-gray-800/50 border-green-700 text-gray-300' : 'bg-white border-green-200 text-slate-700'
                    }`}>
                      <h4 className={`text-lg font-semibold mb-3 font-[Tektur,monospace] ${
                        isDark ? 'text-green-400' : 'text-green-800'
                      }`}>{t.calculation}</h4>
                      <div className="space-y-2">
                        <p>{t.customersWithAverage} ‚â§ 2,5 ({t.goodAndBetter}):</p>
                        <div className="bg-green-50 border border-green-200 p-3 rounded text-sm font-mono">
                          {calculateCustomerAverages()
                            .filter(customer => customer.durchschnitt! <= 2.5)
                            .map(customer => `Kunde ${customer.kunde}: ${customer.durchschnitt?.toFixed(2)}`)
                            .join(', ')}
                        </div>
                        <p>{t.numberOfCustomers} {t.goodAndBetter}: {calculateCustomerAverages().filter(customer => customer.durchschnitt! <= 2.5).length}</p>
                        <p>{t.totalCustomers} {customerData.length}</p>
                        <p className="text-green-700 font-semibold text-lg">
                          {t.result} {calculateGoodOrBetterPercentage().toFixed(1)}% {t.haveRated} {t.goodAndBetter} {t.rated}
                        </p>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            )}

            {/* Solution B */}
            {showCustomerSolutionA && (
              <div className="bg-orange-50 border border-orange-200 rounded-xl p-6 mb-6" style={{fontFamily: 'Tektur, monospace'}}>
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center gap-4">
                    <h3 className="text-xl font-semibold text-orange-800 font-[Tektur,monospace]">{t.solutionBLabel} (‚â• 3,5)</h3>
                  </div>
                  {!showCustomerSolutionB && (
                    <button
                      onClick={() => setShowCustomerSolutionB(true)}
                      className="bg-orange-600 hover:bg-orange-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm"
                      style={{fontFamily: 'Tektur, monospace'}}
                    >
                      {t.showSolutionCustomer}
                    </button>
                  )}
                </div>
                
                {showCustomerSolutionB && (
                  <div className={`leading-relaxed ${
                    isDark ? 'text-gray-300' : 'text-slate-700'
                  }`}>
                    <div className={`border p-4 rounded-lg mb-4 shadow-sm ${
                      isDark ? 'bg-gray-800/50 border-orange-700 text-gray-300' : 'bg-white border-orange-200 text-slate-700'
                    }`}>
                      <h4 className={`text-lg font-semibold mb-3 font-[Tektur,monospace] ${
                        isDark ? 'text-orange-400' : 'text-orange-800'
                      }`}>{t.calculation}</h4>
                      <div className="space-y-2">
                        <p>{t.customersWithAverage} ‚â• 3,5 ({t.satisfactoryAndWorse}):</p>
                        <div className="bg-orange-50 border border-orange-200 p-3 rounded text-sm font-mono">
                          {calculateCustomerAverages()
                            .filter(customer => customer.durchschnitt! >= 3.5)
                            .map(customer => `Kunde ${customer.kunde}: ${customer.durchschnitt?.toFixed(2)}`)
                            .join(', ') || t.noCustomers}
                        </div>
                        <p>{t.numberOfCustomers} {t.satisfactoryAndWorse}: {calculateCustomerAverages().filter(customer => customer.durchschnitt! >= 3.5).length}</p>
                        <p>{t.totalCustomers} {customerData.length}</p>
                        <p className="text-orange-300 font-bold text-lg">
                          {t.result} {calculateSufficientOrWorsePercentage().toFixed(1)}% {t.haveRated} {t.satisfactoryAndWorse} {t.rated}
                        </p>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            )}

            {/* Solution C */}
            {showCustomerSolutionB && (
              <div className="bg-teal-50 border border-teal-200 rounded-xl p-6 mb-6" style={{fontFamily: 'Tektur, monospace'}}>
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center gap-4">
                    <h3 className="text-xl font-semibold text-teal-800 font-[Tektur,monospace]">{t.solutionCLabel}: {t.ecoAverageGrade}</h3>
                  </div>
                  {!showCustomerSolutionC && (
                    <button
                      onClick={() => setShowCustomerSolutionC(true)}
                      className="bg-teal-600 hover:bg-teal-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace] shadow-sm"
                      style={{fontFamily: 'Tektur, monospace'}}
                    >
                      {t.showSolutionCustomer}
                    </button>
                  )}
                </div>
                
                {showCustomerSolutionC && (
                  <div className={`leading-relaxed ${
                    isDark ? 'text-gray-300' : 'text-slate-700'
                  }`}>
                    <div className={`border p-4 rounded-lg mb-4 shadow-sm ${
                      isDark ? 'bg-gray-800/50 border-teal-700 text-gray-300' : 'bg-white border-teal-200 text-slate-700'
                    }`}>
                      <h4 className={`text-lg font-semibold mb-3 font-[Tektur,monospace] ${
                        isDark ? 'text-teal-400' : 'text-teal-800'
                      }`}>{t.calculation}</h4>
                      <div className="space-y-2">
                        <p>{t.allCustomersEcoRatings}</p>
                        <div className="bg-teal-50 border border-teal-200 p-3 rounded text-sm font-mono">
                          {customerData.map(customer => `Kunde ${customer.kunde}: ${customer.oeko}`).join(', ')}
                        </div>
                        <p>{t.sumOfRatings} {customerData.reduce((sum, customer) => sum + customer.oeko, 0)}</p>
                        <p>{t.totalCustomers} {customerData.length}</p>
                        <p>{t.calculation} {customerData.reduce((sum, customer) => sum + customer.oeko, 0)} √∑ {customerData.length} = {calculateEcoAverageGrade().toFixed(2)}</p>
                        <p className="text-teal-300 font-bold text-lg">
                          {t.result} {calculateEcoAverageGrade().toFixed(2)} ({getGradeDescription(calculateEcoAverageGrade(), t)})
                        </p>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            )}

            {/* Complete Analysis */}
            {showCustomerSolutionC && (
              <div className="bg-purple-900/20 border border-purple-600 rounded-xl p-6 mb-6" style={{fontFamily: 'Tektur, monospace'}}>
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center gap-4">
                    <div className="text-3xl">üìà</div>
                    <h3 className="text-xl font-bold text-purple-300 font-[Tektur,monospace]">{t.summary}</h3>
                  </div>
                  {!showCustomerAnalysis && (
                    <button
                      onClick={() => setShowCustomerAnalysis(true)}
                      className="bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded-lg transition-all duration-200 font-[Tektur,monospace]"
                      style={{fontFamily: 'Tektur, monospace'}}
                    >
                      {t.showOverallAnalysis}
                    </button>
                  )}
                </div>
                
                {showCustomerAnalysis && (
                  <div className="text-gray-300 leading-relaxed">
                    <div className="bg-purple-800/30 p-6 rounded-lg">
                      <h4 className="text-lg font-semibold text-purple-200 mb-4 font-[Tektur,monospace]">{t.surveyResults}</h4>
                      <div className="grid md:grid-cols-3 gap-4 mb-6">
                        <div className="bg-green-900/30 p-4 rounded-lg text-center">
                          <div className="text-2xl font-bold text-green-300">{calculateGoodOrBetterPercentage().toFixed(1)}%</div>
                          <div className="text-sm text-green-200">{t.goodAndBetterShort}</div>
                        </div>
                        <div className="bg-orange-900/30 p-4 rounded-lg text-center">
                          <div className="text-2xl font-bold text-orange-300">{calculateSufficientOrWorsePercentage().toFixed(1)}%</div>
                          <div className="text-sm text-orange-200">{t.satisfactoryAndWorseShort}</div>
                        </div>
                        <div className="bg-teal-900/30 p-4 rounded-lg text-center">
                          <div className="text-2xl font-bold text-teal-300">{calculateEcoAverageGrade().toFixed(2)}</div>
                          <div className="text-sm text-teal-200">{t.ecoAverage}</div>
                        </div>
                      </div>
                      <div className="space-y-3">
                        <p><strong>{t.interpretation}</strong></p>
                        <ul className="list-disc list-inside space-y-2 text-gray-300">
                          <li>{t.majorityOfCustomers} ({calculateGoodOrBetterPercentage().toFixed(1)}%) {t.ratedGoodOrBetter}</li>
                          <li>{t.onlyPercentage} {calculateSufficientOrWorsePercentage().toFixed(1)}% {t.gaveSatisfactoryOrWorse}</li>
                          <li>{t.ecoAspectsRated} {calculateEcoAverageGrade().toFixed(2)} {t.correspondTo} &quot;{getGradeDescription(calculateEcoAverageGrade(), t)}&quot;</li>
                          <li className="text-purple-200 font-semibold">
                            {t.recommendation} {calculateEcoAverageGrade() > 3.0 ? 
                              t.improveEcoAspects : 
                              t.ecoAspectsAlreadyGood}
                          </li>
                        </ul>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            )}
          </div>
        )}
        
        </div>
      </div>
    </>
  );
}
